[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/StripeForm.jsx":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.jsx":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NavBar.jsx":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.jsx":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCoffeeForm.jsx":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminHome.jsx":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCafeForm.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminLists.jsx":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/EditUser.jsx":"12","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/ChangePassword.jsx":"13","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/MapView.jsx":"14","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafePages/CafeMenuView.jsx":"15","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/HomeView.jsx":"16","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/NewOrderForm.jsx":"17","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafePages/CafeDashboardView.jsx":"18","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafePages/OrdersView.jsx":"19"},{"size":193,"mtime":1611455818411,"results":"20","hashOfConfig":"21"},{"size":9801,"mtime":1612408417694,"results":"22","hashOfConfig":"21"},{"size":1176,"mtime":1612409182644,"results":"23","hashOfConfig":"21"},{"size":3016,"mtime":1612409004288,"results":"24","hashOfConfig":"21"},{"size":2197,"mtime":1612331631528,"results":"25","hashOfConfig":"21"},{"size":3491,"mtime":1612409038017,"results":"26","hashOfConfig":"21"},{"size":2944,"mtime":1612408758941,"results":"27","hashOfConfig":"21"},{"size":1689,"mtime":1612408584309,"results":"28","hashOfConfig":"21"},{"size":8445,"mtime":1612408711329,"results":"29","hashOfConfig":"21"},{"size":2436,"mtime":1612409068847,"results":"30","hashOfConfig":"21"},{"size":3575,"mtime":1612331471665,"results":"31","hashOfConfig":"21"},{"size":2575,"mtime":1612408945445,"results":"32","hashOfConfig":"21"},{"size":3490,"mtime":1612408935254,"results":"33","hashOfConfig":"21"},{"size":2920,"mtime":1612408981023,"results":"34","hashOfConfig":"21"},{"size":5761,"mtime":1612408819230,"results":"35","hashOfConfig":"21"},{"size":1945,"mtime":1612408961888,"results":"36","hashOfConfig":"21"},{"size":7572,"mtime":1612391322095,"results":"37","hashOfConfig":"21"},{"size":431,"mtime":1612391221319,"results":"38","hashOfConfig":"21"},{"size":3605,"mtime":1612408884087,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"cp2oi7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["89","90"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/StripeForm.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NavBar.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCoffeeForm.jsx",["91"],"import React, { useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst NewCoffeeForm = (props) => {\n  const {\n    coffees,\n    setCoffees,\n    coffeeData,\n    setCoffeeData,\n    initialCoffeeData,\n    isEditing,\n    loggedInUser,\n  } = props;\n\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/\");\n    }\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCoffeeData({ ...coffeeData, [name]: value });\n  };\n  const addCoffee = (newCoffee) => {\n    setCoffees([...coffees, newCoffee]);\n  };\n  const saveNewCoffee = () => {\n    return axios\n      .post(`${process.env.REACT_APP_BACK_END_URL}/coffees`, coffeeData)\n      .then(() => {\n        addCoffee(coffeeData);\n        setCoffeeData(initialCoffeeData);\n      })\n      .catch((error) => console.log(error));\n  };\n  const updateCoffee = (newCoffee) => {\n    console.log(\"1\", coffees);\n    setCoffees(\n      coffees.map((coffee) =>\n        coffee._id === coffeeData._id ? newCoffee : coffee\n      )\n    );\n    console.log(\"2\", coffees);\n    setCoffeeData(initialCoffeeData);\n  };\n\n  const updateExistingCoffee = () => {\n    axios\n      .put(\n        `${process.env.REACT_APP_BACK_END_URL}/coffees/${coffeeData._id}`,\n        coffeeData\n      )\n      .then((res) => updateCoffee(res.data))\n      .catch((error) => console.log(error));\n    props.history.push(\"/\");\n  };\n  const cancelEditing = () => {\n    setCoffeeData(initialCoffeeData);\n    props.history.push(\"/\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isEditing) {\n      updateExistingCoffee();\n    } else {\n      saveNewCoffee()\n        .then(() => {\n          props.history.push(\"/\");\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Coffee</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name:</Label>\n              <Input\n                name=\"name\"\n                value={coffeeData.name}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description:</Label>\n              <Input\n                name=\"description\"\n                value={coffeeData.description}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCoffeeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminHome.jsx",["92"],"import { React, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport AdminLists from \"./AdminLists\";\n\nconst AdminHome = (props) => {\n  const {\n    coffees,\n    setCoffees,\n    cafes,\n    setCafes,\n    cafeData,\n    setCafeData,\n    setCoffeeData,\n  } = props;\n\n  // Add all coffees and cafes into state\n  useEffect(() => {\n    getAllCoffees();\n    getAllCafes();\n  }, []);\n\n  // Get all cafes from database\n  const getAllCafes = () => {\n    axios\n      .get(`${process.env.REACT_APP_BACK_END_URL}/cafes/`, cafes)\n      .then((res) => {\n        setCafes(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const deleteCafe = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_BACK_END_URL}/cafes/${id}`, cafes)\n      .then((res) => setCafes(cafes.filter((cafe) => cafe._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  // Get all coffees from the database\n  const getAllCoffees = () => {\n    axios\n      .get(`${process.env.REACT_APP_BACK_END_URL}/coffees/`, coffees)\n      .then((res) => setCoffees(res.data))\n      .catch((error) => console.log(error));\n  };\n  const deleteCoffee = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_BACK_END_URL}/coffees/${id}`, coffees)\n      .then((res) => setCoffees(coffees.filter((coffee) => coffee._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <AdminLists\n        {...props}\n        cafes={cafes}\n        coffees={coffees}\n        cafeData={cafeData}\n        setCafeData={setCafeData}\n        deleteCafe={deleteCafe}\n        setCoffeeData={setCoffeeData}\n        deleteCoffee={deleteCoffee}\n      />\n    </>\n  );\n};\n\nexport default AdminHome;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCafeForm.jsx",["93","94"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  username: \"\",\n  password: \"\",\n  user_name: \"\",\n  role: \"cafe\",\n  phone: \"\",\n};\n\nconst NewCafeForm = (props) => {\n  const {\n    setCafeData,\n    cafeData,\n    initialCafeData,\n    isEditing,\n    cafes,\n    setCafes,\n    loggedInUser,\n  } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n\n  // on initial load\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/\");\n    }\n    if (isEditing) {\n      axios\n        .get(`${process.env.REACT_APP_BACK_END_URL}/users/${cafeData.owner}`)\n        .then((res) => {\n          setUserData(res.data);\n          console.log(userData);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, []);\n\n  // every time isEditing changes\n  useEffect(() => {\n    if (!isEditing) {\n      setUserData(initialUserState);\n      setCafeData(initialCafeData);\n    }\n  }, [isEditing]);\n\n  const addCafe = (newCafe) => {\n    setCafes([...cafes, newCafe]);\n  };\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id === cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    const { name, value } = e.target;\n    setCafeData({ ...cafeData, [name]: value });\n  };\n\n  const handleUserInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(\n        `${process.env.REACT_APP_BACK_END_URL}/cafes/${cafeData._id}`,\n        cafeData\n      )\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n    props.history.push(\"/\");\n  };\n\n  const updateExistingUser = () => {\n    axios\n      .patch(\n        `${process.env.REACT_APP_BACK_END_URL}/users/${userData._id}`,\n        userData\n      )\n      .then((res) => console.log(res.data))\n      .catch((error) => console.log(error));\n  };\n\n  const saveNewUser = () => {\n    return axios\n      .post(`${process.env.REACT_APP_BACK_END_URL}/users/register`, userData)\n      .then((res) => {\n        console.log(userData);\n        const cafeId = res.data._id;\n        const newCafeData = { ...cafeData, owner: cafeId };\n        addCafe(newCafeData);\n        return newCafeData;\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const saveNewCafe = (newCafeData) => {\n    return axios\n      .post(`${process.env.REACT_APP_BACK_END_URL}/cafes`, newCafeData)\n      .then(() => {\n        setCafeData(initialCafeData);\n        setUserData(initialUserState);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const cancelEditing = () => {\n    setCafeData(initialCafeData);\n    setUserData(initialUserState);\n    props.history.push(\"/\");\n  };\n\n  const handleFinalSubmit = (e) => {\n    console.log(isEditing);\n    e.preventDefault();\n    if (isEditing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewUser().then((newCafeData) => {\n        console.log(\"test\", newCafeData);\n        saveNewCafe(newCafeData)\n          .then(() => {\n            props.history.push(\"/\");\n          })\n          .catch((error) => console.log(error));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                type=\"text\"\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                type=\"text\"\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Email:</Label>\n              <Input\n                type=\"email\"\n                name=\"username\"\n                value={userData.username}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                type=\"text\"\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                type=\"text\"\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                type=\"text\"\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                type=\"text\"\n                name=\"operating_hours[0]\"\n                required\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                type=\"text\"\n                name=\"operating_hours[1]\"\n                required\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                type=\"text\"\n                name=\"location[0]\"\n                required\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [parseFloat(e.target.value), cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                type=\"text\"\n                name=\"location[1]\"\n                required\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], parseFloat(e.target.value)],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminLists.jsx",[],["95","96"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/EditUser.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/ChangePassword.jsx",["97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n  Button,\n  InputGroupAddon,\n} from \"reactstrap\";\nimport axios from \"axios\";\n\nconst ChangePassword = (props) => {\n  const {\n    loggedInUser,\n    flashMessage,\n    setFlashMessage,\n    visible,\n    setVisible,\n  } = props;\n\n  const initialFormState = {\n    user_id: \"\",\n    password: \"\",\n    new_password: \"\",\n  };\n  const [formData, setFormData] = useState(initialFormState);\n\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/user/edit\");\n    } else {\n      setFormData({ ...formData, user_id: loggedInUser._id });\n    }\n  }, []);\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.patch(\n      `${process.env.REACT_APP_BACK_END_URL}/users/${loggedInUser._id}/change_password`,\n      formData\n    );\n    if (response.status === 200) {\n      setFlashMessage(\"Password successfully changed\");\n      setVisible(true);\n      setFormData(initialFormState);\n      props.history.push(\"/\");\n    } else {\n      setFlashMessage(\"Incorrect current password\");\n      setVisible(true);\n    }\n  };\n  const togglePasswordView = (e) => {\n    const inputs = document.querySelectorAll(\".input\");\n    inputs.forEach((input) => {\n      if (e.target.id === \"current_password_btn\") {\n        if (input.name === \"password\" && input.type === \"password\") {\n          input.type = \"text\";\n        } else {\n          input.type = \"password\";\n        }\n      } else {\n        if (input.name === \"new_password\" && input.type === \"password\") {\n          input.type = \"text\";\n        } else {\n          input.type = \"password\";\n        }\n      }\n    });\n  };\n\n  return (\n    <>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>Change Password</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"password\">Current Password:</Label>\n              <InputGroupAddon addonType=\"append\">\n                <Input\n                  className=\"input\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.current_password}\n                  onChange={handleInputChange}\n                  required\n                ></Input>\n                <Button id=\"current_password_btn\" onClick={togglePasswordView}>\n                  View\n                </Button>\n              </InputGroupAddon>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"new_password\">New Password:</Label>\n              <InputGroupAddon addonType=\"append\">\n                <Input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"new_password\"\n                  value={formData.new_password}\n                  onChange={handleInputChange}\n                  required\n                ></Input>\n                <Button id=\"new_password_btn\" onClick={togglePasswordView}>\n                  View\n                </Button>\n              </InputGroupAddon>\n            </FormGroup>\n            <Button>Submit</Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ChangePassword;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/MapView.jsx",["100"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Button, Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport \"../../App.css\";\n\nfunction MapView(props) {\n  const { coff } = useParams();\n  const { setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n\n  useEffect(() => {\n    if (userLocation && coff) {\n      getCafeData();\n    }\n  }, [userLocation, coff]);\n\n  const getCafeData = () => {\n    let time = new Date().getTime();\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    }\n    if (min.length < 2) {\n      min = \"0\" + min;\n    }\n    time = `${hr}:${min}`;\n\n    let loc = [];\n    userLocation ? (loc = userLocation) : (loc = [-27.468298, 153.0225951]);\n    const postBody = {\n      location: loc,\n      time: time,\n      coffee: coff,\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_BACK_END_URL}/map/`, postBody)\n      .then((res) => setCafesData(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  function handleClick(cafe, item) {\n    setUserCoffee({\n      _id: item.coffee._id,\n      name: item.coffee.name,\n      price: item.price,\n    });\n    setCafe(cafe);\n  }\n\n  return (\n    <>\n      {userLocation && coff ? (\n        <Container>\n          <h2>Nearby cafes selling: {coff}</h2>\n          <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            {cafesData.map((cafe) => (\n              <Marker\n                key={cafe._id}\n                position={[cafe.location[0], cafe.location[1]]}\n              >\n                <Popup key={cafe._id}>\n                  <h2>{cafe.cafe_name}</h2>\n                  <h5>\n                    Open: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n                  </h5>\n                  {cafe.menu.map((item) =>\n                    item.coffee.name === coff ? (\n                      <Link\n                        to=\"/orders/new\"\n                        onClick={() => handleClick(cafe, item)}\n                      >\n                        <Button color=\"info\">\n                          ${item.price.toFixed(2)} - BUY NOW\n                        </Button>\n                      </Link>\n                    ) : (\n                      <></>\n                    )\n                  )}\n                </Popup>\n              </Marker>\n            ))}\n          </MapContainer>\n        </Container>\n      ) : (\n        <h3>Searching for nearby cafes...</h3>\n      )}\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafePages/CafeMenuView.jsx",["101"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  Button,\n  Table,\n  Form,\n  FormGroup,\n} from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser } = props;\n  const [menu, setMenu] = useState([]);\n  const [coffees, setCoffees] = useState([]);\n  const [newCoffee, setNewCoffee] = useState(\"\");\n  const [newPrice, setNewPrice] = useState(\"\");\n\n  useEffect(() => {\n    if (loggedInUser) {\n      getMenuData();\n    }\n  }, [loggedInUser]);\n\n  const getMenuData = async () => {\n    let cafemenuArr = [];\n    let response = await axios.get(\n      `${process.env.REACT_APP_BACK_END_URL}/cafes/${loggedInUser.cafe._id}/menu`\n    );\n    const currentMenu = await response.data;\n    setMenu(response.data);\n    await currentMenu.forEach((element) => {\n      cafemenuArr.push(element.coffee._id);\n    });\n\n    response = await axios.get(`${process.env.REACT_APP_BACK_END_URL}/coffees`);\n    const allCoffees = await response.data;\n\n    response = await axios.post(\n      `${process.env.REACT_APP_BACK_END_URL}/coffees/available`,\n      { menu: cafemenuArr, coffees: allCoffees }\n    );\n    const availCoffs = await response.data;\n    setCoffees(availCoffs);\n  };\n\n  const handleCoffeeSelect = (e) => {\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    setNewPrice(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInUser.cafe._id,\n    };\n\n    let response = await axios.post(\n      `${process.env.REACT_APP_BACK_END_URL}/menuitems`,\n      newMenuItem\n    );\n    const newItem = await response.data;\n\n    let cafeMenu = await loggedInUser.cafe.menu;\n    cafeMenu.push(newItem._id);\n\n    response = await axios.put(\n      `${process.env.REACT_APP_BACK_END_URL}/cafes/${loggedInUser.cafe._id}/menu`,\n      { menu: cafeMenu }\n    );\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n\n    setNewCoffee(\"\");\n    setNewPrice(\"\");\n    getMenuData();\n  };\n\n  const handleDelete = async (menuitem) => {\n    let response = await axios.delete(\n      `${process.env.REACT_APP_BACK_END_URL}/menuitems/${menuitem._id}`\n    );\n    const delResp = await response.data;\n    console.log(delResp);\n\n    let updatedCafeMenu = loggedInUser.cafe.menu.filter(\n      (id) => id !== menuitem._id\n    );\n\n    response = await axios.put(\n      `${process.env.REACT_APP_BACK_END_URL}/cafes/${loggedInUser.cafe._id}/menu`,\n      { menu: updatedCafeMenu }\n    );\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n    getMenuData();\n  };\n\n  return (\n    <>\n      {loggedInUser && menu ? (\n        <>\n          <Container>\n            <h2>{loggedInUser.cafe.cafe_name}</h2>\n            <div className=\"mt-4\">\n              <Row>\n                <Col>\n                  <Table hover>\n                    <thead>\n                      <tr>\n                        <th>Coffee</th>\n                        <th>Description</th>\n                        <th>Price</th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {menu ? (\n                        menu.map((item) => (\n                          <tr key={item._id}>\n                            <td>{item.coffee.name}</td>\n                            <td>{item.coffee.description}</td>\n                            <td>${item.price.toFixed(2)}</td>\n                            <td>\n                              <Button\n                                color=\"danger\"\n                                onClick={() => handleDelete(item)}\n                              >\n                                Delete\n                              </Button>\n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n                        <></>\n                      )}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </div>\n            <hr />\n            <Row className=\"mt-4\">\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <h4>Add Coffee To Menu</h4>\n                <br />\n                <Form onSubmit={handleSubmit}>\n                  <FormGroup>\n                    <select\n                      style={{\n                        height: \"40px\",\n                        width: \"100%\",\n                        padding: \"5px\",\n                        border: \"1px solid #ced4da\",\n                        borderRadius: \".25rem\",\n                      }}\n                      onChange={handleCoffeeSelect}\n                      value={newCoffee.name}\n                    >\n                      <option defaultValue=\"\"> -- select coffee -- </option>\n                      {coffees.map((coffee) => (\n                        <option key={coffee._id} value={coffee._id}>\n                          {coffee.name}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      type=\"Number\"\n                      placeholder=\"Price (eg 3.5)\"\n                      onChange={handlePrice}\n                      value={newPrice}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Button color=\"primary\">Add</Button>\n                  </FormGroup>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      ) : (\n        <h3>fetching data...</h3>\n      )}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/HomeView.jsx",["102"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport coffeeImg from \"../../assets/coffee.svg\";\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee } = props;\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_BACK_END_URL}/coffees/`, coffees)\n      .then((res) => setCoffees(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  }\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n      <div>\n        <Container fluid=\"true\">\n          <Row className=\"justify-content-center\">\n            {coffees.map((coffee, index) => (\n              <CardDeck key={index} style={{ margin: \"30px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                    <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                      {coffee.description}\n                    </CardSubtitle>\n                    <Link\n                      to={`/map/${coffee.name}`}\n                      onClick={() => addUserCoffee(coffee._id, coffee.name)}\n                    >\n                      <Button color=\"primary\" size=\"sm\">\n                        SEARCH\n                      </Button>\n                    </Link>\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/UserPages/NewOrderForm.jsx",["103"],"import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StripeForm from \"../StripeForm\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n} from \"reactstrap\";\n\nconst NewOrderForm = (props) => {\n  const { userCoffee, cafe, loggedInUser } = props;\n  const [size, setSize] = useState(\"Regular\");\n  const [milk, setMilk] = useState(\"Regular Milk\");\n  const [sugar, setSugar] = useState(0);\n\n  const [orderDetails, setOrderDetails] = useState(null);\n\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/\");\n    } else {\n      let time = new Date().getTime();\n      let date = new Date(time);\n      let hr = String(date.getHours());\n      let min = String(date.getMinutes());\n      if (hr.length < 2) {\n        hr = \"0\" + hr;\n      }\n      if (min.length < 2) {\n        min = \"0\" + min;\n      }\n\n      let defMilk = \"\";\n      if (userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\") {\n        defMilk = \"No milk\";\n      } else {\n        defMilk = \"Regular\";\n      }\n\n      setOrderDetails({\n        cafe: cafe._id,\n        user: loggedInUser._id,\n        coffee: userCoffee.name,\n        size: \"Regular\",\n        milk: defMilk,\n        sugar: 0,\n        pickup_time: `${hr}:${min}`,\n        total: userCoffee.price,\n        email: loggedInUser.username,\n      });\n    }\n  }, []);\n\n  const handleSize = (event) => {\n    setSize(event.target.value);\n    if (event.target.value === \"Large\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price + 0.5 });\n    } else if (event.target.value === \"Small\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price - 0.5 });\n    } else if (event.target.value === \"Regular\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price });\n    }\n  };\n\n  const handleMilk = (event) => {\n    setMilk(event.target.value);\n    setOrderDetails({ ...orderDetails, milk: event.target.value });\n  };\n\n  const handleSugar = (event) => {\n    setSugar(event.target.value);\n    setOrderDetails({ ...orderDetails, sugar: event.target.value });\n  };\n\n  const handlePickupTime = (event) => {\n    let time = new Date().getTime();\n    if (event.target.value === \"10\") {\n      time = time + 600000;\n    } else if (event.target.value === \"20\") {\n      time = time + 1200000;\n    } else if (event.target.value === \"30\") {\n      time = time + 1800000;\n    }\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    }\n    if (min.length < 2) {\n      min = \"0\" + min;\n    }\n    setOrderDetails({ ...orderDetails, pickup_time: `${hr}:${min}` });\n  };\n\n  return (\n    <>\n      {!orderDetails ? (\n        <></>\n      ) : (\n        <Container>\n          <Row className=\"mt-4\">\n            <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n              <Form>\n                <FormGroup>\n                  <h4>\n                    Ordering: {userCoffee.name} from {cafe.cafe_name}\n                  </h4>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"size\">Size:</Label>\n                  <select\n                    name=\"size\"\n                    style={{\n                      height: \"40px\",\n                      width: \"100%\",\n                      padding: \"5px\",\n                      border: \"1px solid #ced4da\",\n                      borderRadius: \".25rem\",\n                    }}\n                    onChange={handleSize}\n                    value={size}\n                  >\n                    <option defaultValue=\"\"> -- select coffee size -- </option>\n                    <option value=\"Regular\">Regular</option>\n                    {userCoffee.name === \"Espresso\" ? (\n                      <></>\n                    ) : (\n                      <>\n                        <option value=\"Small\">Small -$0.50</option>\n                        <option value=\"Large\">Large +$0.50</option>\n                      </>\n                    )}\n                  </select>\n                </FormGroup>\n                <FormGroup>\n                  {userCoffee.name === \"Espresso\" ||\n                  userCoffee.name === \"Long Black\" ? (\n                    <></>\n                  ) : (\n                    <>\n                      <Label for=\"milk\">Milk:</Label>\n                      <select\n                        name=\"milk\"\n                        style={{\n                          height: \"40px\",\n                          width: \"100%\",\n                          padding: \"5px\",\n                          border: \"1px solid #ced4da\",\n                          borderRadius: \".25rem\",\n                        }}\n                        onChange={handleMilk}\n                        value={milk}\n                      >\n                        <option defaultValue=\"\">\n                          {\" \"}\n                          -- select milk type --{\" \"}\n                        </option>\n                        <option value=\"Regular Milk\">Full Cream</option>\n                        <option value=\"Skim Milk\">Skim</option>\n                        <option value=\"Soy Milk\">Soy</option>\n                        <option value=\"Almond Milk\">Almond</option>\n                      </select>\n                    </>\n                  )}\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"sugar\">Sugar:</Label>\n                  <select\n                    name=\"sugar\"\n                    style={{\n                      height: \"40px\",\n                      width: \"100%\",\n                      padding: \"5px\",\n                      border: \"1px solid #ced4da\",\n                      borderRadius: \".25rem\",\n                    }}\n                    onChange={handleSugar}\n                    value={sugar}\n                  >\n                    <option defaultValue=\"\">\n                      {\" \"}\n                      -- select sugar preference --{\" \"}\n                    </option>\n                    <option value=\"0\">No Sugar</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                  </select>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"pickup\">Pickup Time:</Label>\n                  <select\n                    name=\"pickup\"\n                    style={{\n                      height: \"40px\",\n                      width: \"100%\",\n                      padding: \"5px\",\n                      border: \"1px solid #ced4da\",\n                      borderRadius: \".25rem\",\n                    }}\n                    onChange={handlePickupTime}\n                  >\n                    <option defaultValue=\"\"> -- select pickup time -- </option>\n                    <option value=\"0\">ASAP!</option>\n                    <option value=\"10\">10 mins</option>\n                    <option value=\"20\">20 mins</option>\n                    <option value=\"30\">30 mins</option>\n                  </select>\n                </FormGroup>\n                <FormGroup>\n                  <StripeForm orderDetails={orderDetails} />\n                </FormGroup>\n                <FormGroup>\n                  <Link to=\"/\">\n                    <Button color=\"warning\">Cancel</Button>\n                  </Link>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default NewOrderForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafePages/CafeDashboardView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafePages/OrdersView.jsx",["104"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"../OrderTable\";\nimport { Container, Row } from \"reactstrap\";\nimport { BsFillPlusSquareFill } from \"react-icons/bs\";\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [orders, setOrders] = useState([]);\n  const [pastOrders, setPastOrders] = useState([]);\n  const [showPastOrders, setShowPastOrders] = useState(false);\n\n  useEffect(() => {\n    if (loggedInUser) {\n      getOrders(\"active\");\n    }\n  }, [loggedInUser]);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        }\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    }\n  };\n\n  const retrieveAllOrders = (pastOrders) => {\n    let url = `${process.env.REACT_APP_BACK_END_URL}/orders`;\n    if (pastOrders) {\n      url = `${process.env.REACT_APP_BACK_END_URL}/orders/past`;\n    }\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `${process.env.REACT_APP_BACK_END_URL}/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `${process.env.REACT_APP_BACK_END_URL}/users/${loggedInUser._id}/orders/past`;\n    }\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const retrieveCafeOrders = (pastOrders) => {\n    let url = `${process.env.REACT_APP_BACK_END_URL}/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `${process.env.REACT_APP_BACK_END_URL}/cafes/${loggedInUser.cafe._id}/orders/past`;\n    }\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center\">\n          <h1>Current Orders</h1>\n          <OrderTable\n            orders={orders}\n            getOrders={getOrders}\n            getPastOrders={getPastOrders}\n            setOrders={setOrders}\n            loggedInUser={loggedInUser}\n          />\n        </Row>\n        <Row className=\"justify-content-center \">\n          <h1 className=\"justify-content-center Cafe-Header-Margin\">\n            Past Orders\n          </h1>\n          <div className=\"Cafe-Dashboard-Expand Cafe-Header-Margin\">\n            <BsFillPlusSquareFill onClick={() => getPastOrders(true)} />\n          </div>\n        </Row>\n        <Row id=\"Past-Orders\">\n          {showPastOrders ? (\n            <div>\n              <OrderTable orders={pastOrders} />\n            </div>\n          ) : (\n            <></>\n          )}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default OrdersView;\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":6,"nodeType":"111","endLine":20,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":21,"column":6,"nodeType":"111","endLine":21,"endColumn":8,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":40,"column":6,"nodeType":"111","endLine":40,"endColumn":8,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":48,"column":6,"nodeType":"111","endLine":48,"endColumn":17,"suggestions":"118"},{"ruleId":"105","replacedBy":"119"},{"ruleId":"107","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":17,"column":5,"nodeType":"123","messageId":"124","endLine":17,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":19,"column":5,"nodeType":"123","messageId":"124","endLine":19,"endColumn":12},{"ruleId":"109","severity":1,"message":"126","line":36,"column":6,"nodeType":"111","endLine":36,"endColumn":8,"suggestions":"127"},{"ruleId":"109","severity":1,"message":"128","line":17,"column":6,"nodeType":"111","endLine":17,"endColumn":26,"suggestions":"129"},{"ruleId":"109","severity":1,"message":"130","line":25,"column":6,"nodeType":"111","endLine":25,"endColumn":20,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"132","line":25,"column":6,"nodeType":"111","endLine":25,"endColumn":8,"suggestions":"133"},{"ruleId":"109","severity":1,"message":"134","line":56,"column":6,"nodeType":"111","endLine":56,"endColumn":8,"suggestions":"135"},{"ruleId":"109","severity":1,"message":"136","line":17,"column":6,"nodeType":"111","endLine":17,"endColumn":20,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loggedInUser' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'cafeData.owner', 'isEditing', 'loggedInUser', 'props.history', and 'userData'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'initialCafeData' and 'setCafeData'. Either include them or remove the dependency array.",["143"],["138"],["139"],"no-unused-vars","'flashMessage' is assigned a value but never used.","Identifier","unusedVar","'visible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formData', 'loggedInUser', and 'props.history'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["144"],"React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'getMenuData'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'coffees' and 'setCoffees'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'cafe._id', 'loggedInUser', 'props.history', 'userCoffee.name', and 'userCoffee.price'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [loggedInUser, props.history]",{"range":"170","text":"171"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"172","text":"173"},"Update the dependencies array to be: [cafeData.owner, isEditing, loggedInUser, props.history, userData]",{"range":"174","text":"175"},"Update the dependencies array to be: [initialCafeData, isEditing, setCafeData]",{"range":"176","text":"177"},"Update the dependencies array to be: [formData, loggedInUser, props.history]",{"range":"178","text":"179"},"Update the dependencies array to be: [userLocation, coff, getCafeData]",{"range":"180","text":"181"},"Update the dependencies array to be: [getMenuData, loggedInUser]",{"range":"182","text":"183"},"Update the dependencies array to be: [coffees, setCoffees]",{"range":"184","text":"185"},"Update the dependencies array to be: [cafe._id, loggedInUser, props.history, userCoffee.name, userCoffee.price]",{"range":"186","text":"187"},"Update the dependencies array to be: [getOrders, loggedInUser]",{"range":"188","text":"189"},[414,416],"[loggedInUser, props.history]",[376,378],"[getAllCafes, getAllCoffees]",[871,873],"[cafeData.owner, isEditing, loggedInUser, props.history, userData]",[1037,1048],"[initialCafeData, isEditing, setCafeData]",[664,666],"[formData, loggedInUser, props.history]",[527,547],"[userLocation, coff, getCafeData]",[508,522],"[getMenuData, loggedInUser]",[568,570],"[coffees, setCoffees]",[1368,1370],"[cafe._id, loggedInUser, props.history, userCoffee.name, userCoffee.price]",[521,535],"[getOrders, loggedInUser]"]