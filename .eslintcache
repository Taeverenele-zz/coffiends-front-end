[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderView.jsx":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboardView.js":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js":"12"},{"size":193,"mtime":1611455818411,"results":"13","hashOfConfig":"14"},{"size":4633,"mtime":1611898932962,"results":"15","hashOfConfig":"14"},{"size":1912,"mtime":1611721219127,"results":"16","hashOfConfig":"14"},{"size":1555,"mtime":1611725638206,"results":"17","hashOfConfig":"14"},{"size":1137,"mtime":1611789119082,"results":"18","hashOfConfig":"14"},{"size":2309,"mtime":1611869508148,"results":"19","hashOfConfig":"14"},{"size":6903,"mtime":1611899940559,"results":"20","hashOfConfig":"14"},{"size":3968,"mtime":1611899467816,"results":"21","hashOfConfig":"14"},{"size":3156,"mtime":1611899234570,"results":"22","hashOfConfig":"14"},{"size":5299,"mtime":1611900156576,"results":"23","hashOfConfig":"14"},{"size":6915,"mtime":1611869476221,"results":"24","hashOfConfig":"14"},{"size":1768,"mtime":1611531725913,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"cp2oi7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["54","55"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js",["56","57"],"import React from \"react\"\nimport { Button, Form, FormGroup, Label, Input,Container, Row, Col } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst RegisterView = (props) => { \n\n    return (\n<Container>\n\n        <Row className=\"justify-content-center margin-add-top\">\n            <h1>Register</h1>\n        </Row>\n\n    <Row className=\"justify-content-center\">\n        <Form>\n            <Row>\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin \">\n                <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email:</Label>\n                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email:\" />\n            </FormGroup>\n            </Row>\n            <Row>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin\">\n                    <Label for=\"examplePassword\" className=\"mr-sm-2\">Password:</Label>\n                    <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password:\" />\n                </FormGroup>\n            </Row>\n            <Row>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin\">\n                    <Label for=\"exampleName\" className=\"mr-sm-2\">Name:</Label>\n                    <Input type=\"name\" name=\"name\" id=\"exampleName\" placeholder=\"Name:\" />\n                </FormGroup>\n            </Row>\n            <Row>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin\">\n                    <Label for=\"exampleNumber\" className=\"mr-sm-2\">Number:</Label>\n                    <Input type=\"mobileNumber\" name=\"number\" id=\"numberExample\" placeholder=\"Number:\" />\n                </FormGroup>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Button className=\"login-form-margin-top\">Register</Button>\n            </Row>\n        </Form>\n    </Row>\n\n</Container>\n\n\n    )\n\n}\n\nexport default RegisterView;","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx",["58","59","60"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderView.jsx",["61","62"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx",["63","64","65","66","67","68","69","70"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container, Row } from \"reactstrap\";\nimport axios from \"axios\";\nimport OrderView from \"./OrderView\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { coffee, setCoffee, userLocation, setCafe, cafe } = props;\n  const [cafeData, setCafeData] = useState([]);\n  const [show, setShow] = useState(false);\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: coffee.id,\n    };\n\n    axios\n      .post(\"http://localhost:5000/map/\", postBody)\n      .then((res) => setCafeData(res.data))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee == coffee.id) {\n        setCoffee({\n          id: coffee.id,\n          name: coffee.name,\n          price: menuitem.price,\n        });\n      }\n    });\n    setCafe(cafe);\n    setShow(true); // uncommment for popup ordering\n  }\n\n  const showPanel = () => {\n    var orderElement = document.getElementById(\"orderPanel\");\n    orderElement.classList.remove(\"Hide-Order\");\n    orderElement.classList.add(\"Show-Order\");\n  };\n\n  const hidePanel = () => {\n    var orderElement = document.getElementById(\"orderPanel\");\n    orderElement.classList.remove(\"Show-Order\");\n    orderElement.classList.add(\"Hide-Order\");\n  };\n\n  return (\n    <>\n      <Container>\n        <div className=\"Hide-Order\" id=\"orderPanel\">\n          <button onClick={hidePanel}>Close</button>\n          <OrderView coffee={coffee} cafe={cafe} />\n        </div>\n      </Container>\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafeData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{coffee.name}</p>\n              {cafe.menu.map((item) => {\n                item.coffee === coffee.id ? (\n                  <Link to=\"/order\" onClick={() => handleClick(cafe, coffee)}>\n                    ${item.price.toFixed(2)} - BUY NOW\n                  </Link>\n                ) : (\n                  <></>\n                );\n              })}\n              <Link onClick={showPanel}>BUY</Link>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboardView.js",["71","72","73","74","75","76","77","78"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js",["79"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  user_name: \"\",\n  email: \"\",\n  password: \"\",\n  role: \"\",\n  phone: \"\",\n};\n\nconst NewCafeForm = (props) => {\n  const {\n    addCafe,\n    setCafeData,\n    cafeData,\n    initialState,\n    editing,\n    setEditing,\n    cafes,\n    setCafes,\n  } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n  useEffect(() => {\n    if (editing) {\n      axios.get(`http://localhost:5000/users/${cafeData.owner}`).then((res) => {\n        console.log(\"test\");\n        setUserData(res.data);\n      });\n    }\n  }, [cafeData.owner, editing]);\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id == cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    setCafeData({ ...cafeData, [e.target.name]: e.target.value });\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(`http://localhost:5000/cafes/${cafeData._id}`, cafeData)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n    setEditing(false);\n  };\n\n  const updateExistingUser = () => {\n    console.log(userData);\n    axios\n      .patch(`http://localhost:5000/users/${userData._id}`, userData)\n      .then((res) => console.log(res.data));\n  };\n\n  const saveNewCafe = () => {\n    axios.post(\"http://localhost:5000/users\", userData).then((res) => {\n      const cafeOwner = res.data._id;\n      axios.post(\"http://localhost:5000/cafes\", cafeData).then((res) => {\n        res.data.owner = cafeOwner;\n        addCafe(res.data);\n        axios.put(`http://localhost:5000/cafes/${res.data._id}`, res.data);\n      });\n    });\n  };\n  const cancelEditing = () => {\n    setEditing(false);\n    setCafeData(initialState);\n    setUserData(initialUserState);\n  };\n\n  const handleFinalSubmit = (e) => {\n    e.preventDefault();\n    // console.log(userData);\n    // if (cafeData.cafe_name && cafeData.address) { // add validation that all fields must be entered\n    // console.log(cafeData);\n    if (editing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewCafe();\n    }\n\n    setCafeData(initialState);\n    setUserData(initialUserState);\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{editing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email:</Label>\n              <Input\n                name=\"email\"\n                value={userData.email}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                name=\"operating_hours[0]\"\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                name=\"operating_hours[1]\"\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                name=\"location[0]\"\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                name=\"location[1]\"\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":64,"nodeType":"86","messageId":"87","endLine":2,"endColumn":67},{"ruleId":"84","severity":1,"message":"88","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":14},{"ruleId":"84","severity":1,"message":"89","line":11,"column":3,"nodeType":"86","messageId":"87","endLine":11,"endColumn":12},{"ruleId":"84","severity":1,"message":"90","line":12,"column":3,"nodeType":"86","messageId":"87","endLine":12,"endColumn":11},{"ruleId":"84","severity":1,"message":"91","line":14,"column":3,"nodeType":"86","messageId":"87","endLine":14,"endColumn":15},{"ruleId":"84","severity":1,"message":"92","line":5,"column":10,"nodeType":"86","messageId":"87","endLine":5,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":28,"column":6,"nodeType":"95","endLine":28,"endColumn":8,"suggestions":"96"},{"ruleId":"84","severity":1,"message":"97","line":4,"column":21,"nodeType":"86","messageId":"87","endLine":4,"endColumn":24},{"ruleId":"84","severity":1,"message":"98","line":12,"column":10,"nodeType":"86","messageId":"87","endLine":12,"endColumn":14},{"ruleId":"84","severity":1,"message":"99","line":15,"column":9,"nodeType":"86","messageId":"87","endLine":15,"endColumn":15},{"ruleId":"84","severity":1,"message":"100","line":18,"column":11,"nodeType":"86","messageId":"87","endLine":18,"endColumn":15},{"ruleId":"93","severity":1,"message":"101","line":30,"column":6,"nodeType":"95","endLine":30,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":33,"column":30,"nodeType":"105","messageId":"106","endLine":33,"endColumn":32},{"ruleId":"107","severity":1,"message":"108","line":34,"column":27,"nodeType":"109","messageId":"110","endLine":34,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":85,"column":37,"nodeType":"105","messageId":"106","endLine":85,"endColumn":39},{"ruleId":"84","severity":1,"message":"111","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"112","line":9,"column":3,"nodeType":"86","messageId":"87","endLine":9,"endColumn":7},{"ruleId":"84","severity":1,"message":"113","line":21,"column":28,"nodeType":"86","messageId":"87","endLine":21,"endColumn":34},{"ruleId":"84","severity":1,"message":"114","line":21,"column":36,"nodeType":"86","messageId":"87","endLine":21,"endColumn":45},{"ruleId":"84","severity":1,"message":"115","line":21,"column":56,"nodeType":"86","messageId":"87","endLine":21,"endColumn":66},{"ruleId":"84","severity":1,"message":"116","line":22,"column":10,"nodeType":"86","messageId":"87","endLine":22,"endColumn":19},{"ruleId":"84","severity":1,"message":"117","line":33,"column":9,"nodeType":"86","messageId":"87","endLine":33,"endColumn":17},{"ruleId":"84","severity":1,"message":"118","line":41,"column":9,"nodeType":"86","messageId":"87","endLine":41,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":36,"column":44,"nodeType":"109","messageId":"110","endLine":36,"endColumn":46},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardSubtitle' is defined but never used.","'orderPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'coffee.name'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'Row' is defined but never used.","'show' is assigned a value but never used.","'toggle' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coffee.id' and 'userLocation'. Either include them or remove the dependency array.",["122"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Form' is defined but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'setCoffees' is assigned a value but never used.","'isEditing' is assigned a value but never used.","'editCafe' is assigned a value but never used.","'deleteCafe' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [coffee.name]",{"range":"127","text":"128"},"Update the dependencies array to be: [coffee.id, userLocation]",{"range":"129","text":"130"},[820,822],"[coffee.name]",[1036,1038],"[coffee.id, userLocation]"]