[{"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/index.js":"1","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/App.js":"2","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeDashboardView.jsx":"3","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/LoginView.js":"4","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/RegisterView.js":"5","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NavBar.js":"6","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminHome.js":"7","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCoffeeForm.js":"8","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCafeForm.js":"9","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/MapView.jsx":"10","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeMenuView.jsx":"11","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/HomeView.jsx":"12","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewOrderForm.jsx":"13","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/StripeForm.jsx":"14","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrdersView.jsx":"15","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminLists.js":"16","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrderTable.jsx":"17"},{"size":193,"mtime":1611556931548,"results":"18","hashOfConfig":"19"},{"size":8302,"mtime":1612328336568,"results":"20","hashOfConfig":"19"},{"size":431,"mtime":1612316449469,"results":"21","hashOfConfig":"19"},{"size":3021,"mtime":1612314871920,"results":"22","hashOfConfig":"19"},{"size":3598,"mtime":1612262494822,"results":"23","hashOfConfig":"19"},{"size":2060,"mtime":1612316358458,"results":"24","hashOfConfig":"19"},{"size":1625,"mtime":1612322997008,"results":"25","hashOfConfig":"19"},{"size":2956,"mtime":1612328257233,"results":"26","hashOfConfig":"19"},{"size":8243,"mtime":1612328266084,"results":"27","hashOfConfig":"19"},{"size":2729,"mtime":1612321902983,"results":"28","hashOfConfig":"19"},{"size":4760,"mtime":1612322555960,"results":"29","hashOfConfig":"19"},{"size":1926,"mtime":1612322662603,"results":"30","hashOfConfig":"19"},{"size":6185,"mtime":1612327018359,"results":"31","hashOfConfig":"19"},{"size":1206,"mtime":1612327139483,"results":"32","hashOfConfig":"19"},{"size":3415,"mtime":1612322822669,"results":"33","hashOfConfig":"19"},{"size":3573,"mtime":1612314839643,"results":"34","hashOfConfig":"19"},{"size":2185,"mtime":1612322795328,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8gaqt5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/index.js",[],["79","80"],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/App.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeDashboardView.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/LoginView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/RegisterView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NavBar.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminHome.js",["81"],"import { React, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport AdminLists from \"./AdminLists\";\n\nconst AdminHome = (props) => {\n  const {\n    coffees,\n    setCoffees,\n    cafes,\n    setCafes,\n    cafeData,\n    setCafeData,\n    setCoffeeData,\n  } = props;\n\n  // Add all coffees and cafes into state\n  useEffect(() => {\n    getAllCoffees();\n    getAllCafes();\n  }, []);\n\n  // Get all cafes from database\n  const getAllCafes = () => {\n    axios\n      .get(\"http://localhost:5000/cafes/\", cafes)\n      .then((res) => {\n        setCafes(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const deleteCafe = (id) => {\n    axios\n      .delete(`http://localhost:5000/cafes/${id}`, cafes)\n      .then((res) => setCafes(cafes.filter((cafe) => cafe._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  // Get all coffees from the database\n  const getAllCoffees = () => {\n    axios\n      .get(\"http://localhost:5000/coffees/\", coffees)\n      .then((res) => setCoffees(res.data))\n      .catch((error) => console.log(error));\n  };\n  const deleteCoffee = (id) => {\n    axios\n      .delete(`http://localhost:5000/coffees/${id}`, coffees)\n      .then((res) => setCoffees(coffees.filter((coffee) => coffee._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <AdminLists\n        {...props}\n        cafes={cafes}\n        coffees={coffees}\n        cafeData={cafeData}\n        setCafeData={setCafeData}\n        deleteCafe={deleteCafe}\n        setCoffeeData={setCoffeeData}\n        deleteCoffee={deleteCoffee}\n      />\n    </>\n  );\n};\n\nexport default AdminHome;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCoffeeForm.js",["82"],"import React, { useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst NewCoffeeForm = (props) => {\n  const {\n    coffees,\n    setCoffees,\n    coffeeData,\n    setCoffeeData,\n    initialCoffeeData,\n    isEditing,\n    loggedInUser\n  } = props;\n\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/\")\n    };\n  }, []);\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCoffeeData({ ...coffeeData, [name]: value });\n  };\n  const addCoffee = (newCoffee) => {\n    setCoffees([...coffees, newCoffee]);\n  };\n  const saveNewCoffee = () => {\n    return axios\n      .post(\"http://localhost:5000/coffees\", coffeeData)\n      .then(() => {\n        addCoffee(coffeeData);\n        setCoffeeData(initialCoffeeData);\n      })\n      .catch((error) => console.log(error));\n  };\n  const updateCoffee = (newCoffee) => {\n    console.log(\"1\", coffees);\n    setCoffees(\n      coffees.map((coffee) =>\n        coffee._id === coffeeData._id ? newCoffee : coffee\n      )\n    );\n    console.log(\"2\", coffees);\n    setCoffeeData(initialCoffeeData);\n  };\n\n  const updateExistingCoffee = () => {\n    axios\n      .put(`http://localhost:5000/coffees/${coffeeData._id}`, coffeeData)\n      .then((res) => updateCoffee(res.data))\n      .catch((error) => console.log(error));\n    props.history.push(\"/\");\n  };\n  const cancelEditing = () => {\n    setCoffeeData(initialCoffeeData);\n    props.history.push(\"/\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isEditing) {\n      updateExistingCoffee();\n    } else {\n      saveNewCoffee()\n        .then(() => {\n          props.history.push(\"/\");\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Coffee</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name:</Label>\n              <Input\n                name=\"name\"\n                placeholder=\"coffee name\"\n                value={coffeeData.name}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description:</Label>\n              <Input\n                name=\"description\"\n                placeholder=\"description\"\n                value={coffeeData.description}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCoffeeForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCafeForm.js",["83","84"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  username: \"\",\n  password: \"\",\n  user_name: \"\",\n  role: \"cafe\",\n  phone: \"\",\n};\n\nconst NewCafeForm = (props) => {\n  const {\n    setCafeData,\n    cafeData,\n    initialCafeData,\n    isEditing,\n    cafes,\n    setCafes,\n    loggedInUser\n  } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n\n  // on initial load\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/\");\n    };\n    if (isEditing) {\n      axios\n        .get(`http://localhost:5000/users/${cafeData.owner}`)\n        .then((res) => {\n          setUserData(res.data);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, []);\n\n  // every time isEditing changes\n  useEffect(() => {\n    if (!isEditing) {\n      setUserData(initialUserState);\n      setCafeData(initialCafeData);\n    }\n  }, [isEditing]);\n\n  const addCafe = (newCafe) => {\n    setCafes([...cafes, newCafe]);\n  };\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id === cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    const { name, value } = e.target;\n    setCafeData({ ...cafeData, [name]: value });\n  };\n\n  const handleUserInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(`http://localhost:5000/cafes/${cafeData._id}`, cafeData)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n    props.history.push(\"/\");\n  };\n\n  const updateExistingUser = () => {\n    axios\n      .patch(`http://localhost:5000/users/${userData._id}`, userData)\n      .then((res) => console.log(res.data))\n      .catch((error) => console.log(error));\n  };\n\n  const saveNewUser = () => {\n    return axios\n      .post(\"http://localhost:5000/users/register\", userData)\n      .then((res) => {\n        console.log(userData);\n        const cafeId = res.data._id;\n        const newCafeData = { ...cafeData, owner: cafeId };\n        addCafe(newCafeData);\n        return newCafeData;\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const saveNewCafe = (newCafeData) => {\n    return axios\n      .post(\"http://localhost:5000/cafes\", newCafeData)\n      .then(() => {\n        setCafeData(initialCafeData);\n        setUserData(initialUserState);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const cancelEditing = () => {\n    setCafeData(initialCafeData);\n    setUserData(initialUserState);\n    props.history.push(\"/\");\n  };\n\n  const handleFinalSubmit = (e) => {\n    console.log(isEditing);\n    e.preventDefault();\n    if (isEditing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewUser().then((newCafeData) => {\n        console.log(\"test\", newCafeData);\n        saveNewCafe(newCafeData)\n          .then(() => {\n            props.history.push(\"/\");\n          })\n          .catch((error) => console.log(error));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                type=\"text\"\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                type=\"text\"\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Email:</Label>\n              <Input\n                type=\"email\"\n                name=\"username\"\n                value={userData.username}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                type=\"text\"\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                type=\"text\"\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                type=\"text\"\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                type=\"text\"\n                name=\"operating_hours[0]\"\n                required\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                type=\"text\"\n                name=\"operating_hours[1]\"\n                required\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                type=\"text\"\n                name=\"location[0]\"\n                required\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                type=\"text\"\n                name=\"location[1]\"\n                required\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/MapView.jsx",["85"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Button, Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { coff } = useParams();\n  const { setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n\n  useEffect(() => {\n    if (userLocation && coff) {\n      getCafeData();\n    };\n  }, [userLocation, coff]);\n\n  const getCafeData = () => {\n    let time = new Date().getTime();\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    time = `${hr}:${min}`\n\n    const postBody = {\n      location: userLocation,\n      time: time,\n      coffee: coff,\n    };\n\n    axios.post(\"http://localhost:5000/map/\", postBody)\n      .then((res) => setCafesData(res.data))\n      .catch((err) => console.log(err))\n  };\n\n  function handleClick(cafe, item) {\n    setUserCoffee({\n      _id: item.coffee._id,\n      name: item.coffee.name,\n      price: item.price\n    });\n    setCafe(cafe);\n  }\n\n  return (\n    <>\n      {userLocation && coff ? (      \n        <Container>\n          <h2>Nearby cafes selling: {coff}</h2>\n          <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            {cafesData.map((cafe) => (\n              <Marker\n                key={cafe._id}\n                position={[cafe.location[0], cafe.location[1]]}\n              >\n                <Popup key={cafe._id}>\n                  <h2>{cafe.cafe_name}</h2>\n                  <h5>Open: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}</h5>\n                  {cafe.menu.map(\n                    (item) =>\n                      item.coffee.name === coff ? (\n                        <Link to=\"/orders/new\" onClick={() => handleClick(cafe, item)} >\n                          <Button color=\"info\">\n                              ${item.price.toFixed(2)} - BUY NOW\n                          </Button>\n                        </Link>\n                      ) : (\n                        <></>\n                      )\n                  )}\n                </Popup>\n              </Marker>\n            ))}\n          </MapContainer>\n        </Container>\n      ) : (<h3>Searching for nearby cafes...</h3>)}\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeMenuView.jsx",["86"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Input, Button, Table, Form, FormGroup } from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser } = props;\n  const [ menu, setMenu ] = useState([]);\n  const [ coffees, setCoffees ] = useState([]);\n  const [ newCoffee, setNewCoffee ] = useState(\"\");\n  const [ newPrice, setNewPrice ] = useState(\"\");\n\n  useEffect(() => {\n    if (loggedInUser) {\n      getMenuData();\n    };\n  }, [loggedInUser]);\n\n  const getMenuData = async () => {\n    let cafemenuArr = [];\n    let response = await axios.get(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`);\n    const currentMenu = await response.data;\n    setMenu(response.data);\n    await currentMenu.forEach(element => {cafemenuArr.push(element.coffee._id)});\n\n    response = await axios.get(\"http://localhost:5000/coffees\");\n    const allCoffees = await response.data;\n\n    response = await axios.post(\"http://localhost:5000/coffees/available\", { menu: cafemenuArr, coffees: allCoffees });\n    const availCoffs = await response.data;\n    setCoffees(availCoffs);\n  };\n\n  const handleCoffeeSelect = (e) => {\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    setNewPrice(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInUser.cafe._id\n    };\n\n    let response = await axios.post(\"http://localhost:5000/menuitems\", newMenuItem);\n    const newItem = await response.data;\n\n    let cafeMenu = await loggedInUser.cafe.menu\n    cafeMenu.push(newItem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: cafeMenu });\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n\n    setNewCoffee(\"\");\n    setNewPrice(\"\");\n    getMenuData();\n  };\n\n  const handleDelete = async (menuitem) => {\n    let response = await axios.delete(`http://localhost:5000/menuitems/${menuitem._id}`);\n    const delResp = await response.data;\n    console.log(delResp);\n\n    let updatedCafeMenu = loggedInUser.cafe.menu.filter((id) => id !== menuitem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: updatedCafeMenu });\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n    getMenuData();\n  };\n\n  return (\n    <>\n      {(loggedInUser && menu) ? (\n        <>\n        <Container>\n          <h2>{loggedInUser.cafe.cafe_name}</h2>\n          <div className=\"mt-4\">\n            <Row>\n              <Col>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Coffee</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {menu ? (menu.map((item) => (\n                      <tr key={item._id}>\n                        <td>{item.coffee.name}</td>\n                        <td>{item.coffee.description}</td>\n                        <td>${item.price.toFixed(2)}</td>\n                        <td>\n                          <Button color=\"danger\" onClick={() => handleDelete(item)} >Delete</Button>\n                        </td>\n                      </tr>\n                    ))) : <></>}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <Row className=\"mt-4\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h4>Add Coffee To Menu</h4>\n              <br />\n                <Form onSubmit={handleSubmit}>\n                  <FormGroup>\n                    <select style={{height: '40px', width: '100%', padding: '5px', border: '1px solid #ced4da', borderRadius: '.25rem'}} onChange={handleCoffeeSelect} value={newCoffee.name} >\n                    <option defaultValue=\"\"> -- select coffee -- </option>\n                      {coffees.map((coffee) => \n                        <option key={coffee._id} value={coffee._id}>{coffee.name}</option>\n                      )}\n                    </select>\n                  </FormGroup>\n                  <FormGroup>\n                    <Input type=\"Number\" placeholder=\"Price (eg 3.5)\" onChange={handlePrice} value={newPrice} />\n                  </FormGroup>\n                  <FormGroup>\n                    <Button color=\"primary\" >Add</Button>\n                  </FormGroup>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      ) : <h3>fetching data...</h3>}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/HomeView.jsx",["87"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport coffeeImg from \"../assets/coffee.svg\";\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee } = props;\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/coffees/\", coffees)\n      .then((res) => setCoffees(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  }\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n      <div>\n        <Container fluid=\"true\">\n          <Row className=\"justify-content-center\">\n            {coffees.map((coffee, index) => (\n              <CardDeck key={index} style={{ margin: \"30px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                    <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                      {coffee.description}\n                    </CardSubtitle>\n                    <Link\n                      to={`/map/${coffee.name}`}\n                      onClick={() => addUserCoffee(coffee._id, coffee.name)}\n                    >\n                      <Button color=\"primary\" size=\"sm\">\n                        SEARCH\n                      </Button>\n                    </Link>\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewOrderForm.jsx",["88"],"import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StripeForm from \"./StripeForm\";\nimport { Container, Row, Col, Button, Form, FormGroup, Label } from \"reactstrap\";\n\nconst NewOrderForm = (props) => {\n  const { userCoffee, cafe, loggedInUser } = props;\n  const [ size, setSize ] = useState(\"Regular\");\n  const [ milk, setMilk ] = useState(\"Regular Milk\");\n  const [ sugar, setSugar ] = useState(0);\n\n  const [ orderDetails, setOrderDetails ] = useState(null);\n\n  useEffect(() => {\n    if (!loggedInUser) {\n      props.history.push(\"/\");\n    } else {\n      let time = new Date().getTime();\n      let date = new Date(time);\n      let hr = String(date.getHours());\n      let min = String(date.getMinutes());\n      if (hr.length < 2) {\n        hr = \"0\" + hr;\n      };\n      if (min.length < 2) {\n        min = \"0\" + min;\n      };\n\n      let defMilk = \"\"\n      if (userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\") {\n        defMilk = \"No milk\"\n      } else {\n        defMilk = \"Regular\"\n      };\n\n      setOrderDetails({\n        cafe: cafe._id,\n        user: loggedInUser._id,\n        coffee: userCoffee.name,\n        size: \"Regular\",\n        milk: defMilk,\n        sugar: 0,\n        pickup_time: `${hr}:${min}`,\n        total: userCoffee.price,\n        email: loggedInUser.username,\n      })\n    }\n  }, []);\n\n  const handleSize = (event) => {\n    setSize(event.target.value);\n    if (event.target.value === \"Large\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price + 0.5 });\n    } else if (event.target.value === \"Small\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price - 0.5 });\n    } else if (event.target.value === \"Regular\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price });\n    };\n  };\n\n  const handleMilk = (event) => {\n    setMilk(event.target.value);\n    setOrderDetails({ ...orderDetails, milk: event.target.value });\n  };\n\n  const handleSugar = (event) => {\n    setSugar(event.target.value);\n    setOrderDetails({ ...orderDetails, sugar: event.target.value });\n  };\n\n  const handlePickupTime = (event) => {\n    let time = new Date().getTime();\n    if (event.target.value === \"10\") {\n      time = time + 600000;\n    } else if (event.target.value === \"20\") {\n      time = time + 1200000;\n    } else if (event.target.value === \"30\") {\n      time = time + 1800000;\n    };\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setOrderDetails({ ...orderDetails, pickup_time: `${hr}:${min}` });\n  };\n\n  return (\n    <>\n      {!orderDetails ? (<></>) : (\n\n      \n      <Container>\n        <Row className=\"mt-4\">\n          <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n            <Form>\n              <FormGroup>\n                <h4>Ordering: {userCoffee.name} from {cafe.cafe_name}</h4>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"size\">Size:</Label>\n                <select name=\"size\" style={{height: '40px', width: '100%', padding: '5px', border: '1px solid #ced4da', borderRadius: '.25rem'}} onChange={handleSize} value={size} >\n                  <option defaultValue=\"\"> -- select coffee size -- </option>\n                  <option value=\"Regular\">Regular</option>\n                  {userCoffee.name === \"Espresso\" ? (\n                    <></>\n                  ) : (\n                    <>\n                      <option value=\"Small\">Small -$0.50</option>\n                      <option value=\"Large\">Large +$0.50</option>\n                    </>\n                  )}\n                </select>\n              </FormGroup>\n              <FormGroup>\n              {userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\" ? (\n                <></>\n              ) : (\n                <>\n                  <Label for=\"milk\">Milk:</Label>\n                  <select name=\"milk\" style={{height: '40px', width: '100%', padding: '5px', border: '1px solid #ced4da', borderRadius: '.25rem'}} onChange={handleMilk} value={milk} >\n                    <option defaultValue=\"\"> -- select milk type -- </option>\n                    <option value=\"Regular Milk\">Full Cream</option>\n                    <option value=\"Skim Milk\">Skim</option>\n                    <option value=\"Soy Milk\">Soy</option>\n                    <option value=\"Almond Milk\">Almond</option>\n                  </select>\n                </>\n              )}\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"sugar\">Sugar:</Label>\n                <select name=\"sugar\" style={{height: '40px', width: '100%', padding: '5px', border: '1px solid #ced4da', borderRadius: '.25rem'}} onChange={handleSugar} value={sugar} >\n                  <option defaultValue=\"\"> -- select sugar preference -- </option>\n                  <option value=\"0\">No Sugar</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                </select>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"pickup\">Pickup Time:</Label>\n                <select name=\"pickup\" style={{height: '40px', width: '100%', padding: '5px', border: '1px solid #ced4da', borderRadius: '.25rem'}} onChange={handlePickupTime} >\n                  <option defaultValue=\"\"> -- select pickup time -- </option>\n                  <option value=\"0\">ASAP!</option>\n                  <option value=\"10\">10 mins</option>\n                  <option value=\"20\">20 mins</option>\n                  <option value=\"30\">30 mins</option>\n                </select>\n              </FormGroup>\n              <FormGroup>\n                <StripeForm orderDetails={orderDetails} />\n              </FormGroup>\n              <FormGroup>\n                <Link to=\"/\"><Button color=\"warning\">Cancel</Button></Link>\n              </FormGroup>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n      )}\n    </>\n  );\n};\n\nexport default NewOrderForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/StripeForm.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrdersView.jsx",["89"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\nimport { Container, Row } from 'reactstrap';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n  useEffect(() => {\n    if (loggedInUser) {\n      getOrders(\"active\");\n    };\n  }, [loggedInUser]);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const retrieveCafeOrders = (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders/past`;\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center\">  \n          <h1>Current Orders</h1>\n          <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} setOrders={setOrders} loggedInUser={loggedInUser} />\n        </Row>\n        <Row className=\"justify-content-center \">\n          <h1 className=\"justify-content-center Cafe-Header-Margin\">Past Orders</h1>\n          <div className=\"Cafe-Dashboard-Expand Cafe-Header-Margin\" >\n            <BsFillPlusSquareFill onClick={() => getPastOrders(true)} />\n          </div>\n        </Row>\n        <Row id=\"Past-Orders\">\n          {showPastOrders ? (\n              <div>\n                <OrderTable orders={pastOrders} />\n              </div>\n            ) : (<></>)}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminLists.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrderTable.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":21,"column":6,"nodeType":"96","endLine":21,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":20,"column":6,"nodeType":"96","endLine":20,"endColumn":8,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":39,"column":6,"nodeType":"96","endLine":39,"endColumn":8,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":47,"column":6,"nodeType":"96","endLine":47,"endColumn":17,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"104","line":17,"column":6,"nodeType":"96","endLine":17,"endColumn":26,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":16,"column":6,"nodeType":"96","endLine":16,"endColumn":20,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"108","line":25,"column":6,"nodeType":"96","endLine":25,"endColumn":8,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"110","line":48,"column":6,"nodeType":"96","endLine":48,"endColumn":8,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"112","line":17,"column":6,"nodeType":"96","endLine":17,"endColumn":20,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has missing dependencies: 'loggedInUser' and 'props.history'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'cafeData.owner', 'isEditing', 'loggedInUser', and 'props.history'. Either include them or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'initialCafeData' and 'setCafeData'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'getMenuData'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'coffees' and 'setCoffees'. Either include them or remove the dependency array.",["122"],"React Hook useEffect has missing dependencies: 'cafe._id', 'loggedInUser', 'props.history', 'userCoffee.name', and 'userCoffee.price'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"143","text":"144"},"Update the dependencies array to be: [loggedInUser, props.history]",{"range":"145","text":"146"},"Update the dependencies array to be: [cafeData.owner, isEditing, loggedInUser, props.history]",{"range":"147","text":"148"},"Update the dependencies array to be: [initialCafeData, isEditing, setCafeData]",{"range":"149","text":"150"},"Update the dependencies array to be: [userLocation, coff, getCafeData]",{"range":"151","text":"152"},"Update the dependencies array to be: [getMenuData, loggedInUser]",{"range":"153","text":"154"},"Update the dependencies array to be: [coffees, setCoffees]",{"range":"155","text":"156"},"Update the dependencies array to be: [cafe._id, loggedInUser, props.history, userCoffee.name, userCoffee.price]",{"range":"157","text":"158"},"Update the dependencies array to be: [getOrders, loggedInUser]",{"range":"159","text":"160"},[376,378],"[getAllCafes, getAllCoffees]",[413,415],"[loggedInUser, props.history]",[822,824],"[cafeData.owner, isEditing, loggedInUser, props.history]",[988,999],"[initialCafeData, isEditing, setCafeData]",[525,545],"[userLocation, coff, getCafeData]",[500,514],"[getMenuData, loggedInUser]",[549,551],"[coffees, setCoffees]",[1359,1361],"[cafe._id, loggedInUser, props.history, userCoffee.name, userCoffee.price]",[527,541],"[getOrders, loggedInUser]"]