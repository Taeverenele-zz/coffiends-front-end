[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.jsx":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx":"12","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx":"13","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCafeForm.js":"14","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCoffeeForm.js":"15","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminLists.js":"16","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminHome.js":"17","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentCancelView.jsx":"18","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentSuccessView.jsx":"19","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/StripeForm.jsx":"20","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NavBar.js":"21"},{"size":193,"mtime":1611455818411,"results":"22","hashOfConfig":"23"},{"size":4515,"mtime":1612236423953,"results":"24","hashOfConfig":"23"},{"size":427,"mtime":1612213891369,"results":"25","hashOfConfig":"23"},{"size":1444,"mtime":1612177540988,"results":"26","hashOfConfig":"23"},{"size":2324,"mtime":1612177540988,"results":"27","hashOfConfig":"23"},{"size":2991,"mtime":1612133355860,"results":"28","hashOfConfig":"23"},{"size":2686,"mtime":1612231191445,"results":"29","hashOfConfig":"23"},{"size":3342,"mtime":1612135783476,"results":"30","hashOfConfig":"23"},{"size":6187,"mtime":1612236434986,"results":"31","hashOfConfig":"23"},{"size":4354,"mtime":1612231191446,"results":"32","hashOfConfig":"23"},{"size":3728,"mtime":1612150922867,"results":"33","hashOfConfig":"23"},{"size":3458,"mtime":1612154074373,"results":"34","hashOfConfig":"23"},{"size":2180,"mtime":1612154074373,"results":"35","hashOfConfig":"23"},{"size":7575,"mtime":1612229220964,"results":"36","hashOfConfig":"23"},{"size":2902,"mtime":1612231104195,"results":"37","hashOfConfig":"23"},{"size":3724,"mtime":1612225819402,"results":"38","hashOfConfig":"23"},{"size":4138,"mtime":1612236443083,"results":"39","hashOfConfig":"23"},{"size":107,"mtime":1612231191446,"results":"40","hashOfConfig":"23"},{"size":575,"mtime":1612231191446,"results":"41","hashOfConfig":"23"},{"size":1154,"mtime":1612231191446,"results":"42","hashOfConfig":"23"},{"size":2058,"mtime":1612236367727,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"cp2oi7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["95","96"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx",["112","113","114","115"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport NewOrderForm from \"./NewOrderForm\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { userCoffee, setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    getCafeData();\n  }, []);\n\n  const getCafeData = async () => {\n    // const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: userCoffee.id,\n    };\n\n    const response = await axios.post(\"http://localhost:5000/map/\", postBody);\n    const searchResults = await response.data;\n    setCafesData(searchResults);\n  };\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee === coffee.id) {\n        setUserCoffee({ ...userCoffee, price: menuitem.price });\n      }\n    });\n    setCafe(cafe);\n  }\n\n  // const showPanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Hide-Order\");\n  //   orderElement.classList.add(\"Show-Order\");\n  // };\n\n  // const hidePanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Show-Order\");\n  //   orderElement.classList.add(\"Hide-Order\");\n  // };\n\n  return (\n    <>\n      {/* <Container>\n          <div className=\"Hide-Order\" id=\"orderPanel\" >\n            <button onClick={hidePanel}>Close</button>\n            <NewOrderForm coffee={coffee} cafe={cafe}  />\n          </div>\n      </Container> */}\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafesData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{userCoffee.name}</p>\n              {cafe.menu.map(\n                (item) =>\n                  item.coffee === userCoffee.id ? (\n                    <Link\n                      to=\"/orders/new\"\n                      onClick={() => handleClick(cafe, userCoffee)}\n                    >\n                      ${item.price.toFixed(2)} - BUY NOW\n                    </Link>\n                  ) : (\n                    <></>\n                  )\n                // item.coffee === coffee.id ? <Link to=\"/orders/new\" onClick={() => showPanel}>${item.price.toFixed(2)} - BUY NOW</Link> : <></>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx",["116","117","118","119"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx",["120"],"import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StripeForm from \"./StripeForm\";\n\nconst NewOrderForm = (props) => {\n  const { userCoffee, cafe, loggedInUser } = props;\n  const [ size, setSize ] = useState(\"Regular\");\n  const [ milk, setMilk ] = useState(\"Regular Milk\");\n  const [ sugar, setSugar ] = useState(0);\n\n  const [ orderDetails, setOrderDetails ] = useState({\n      cafe: cafe._id,\n      user: loggedInUser._id,\n      coffee: userCoffee.name,\n      size: \"Regular\",\n      milk: \"Regular\",\n      sugar: 0,\n      pickup_time: \"\",\n      total: userCoffee.price,\n      email: loggedInUser.username,\n  });\n\n  useEffect(() => {\n    let time = new Date().getTime();\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    if (userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\") {\n      setOrderDetails({ ...orderDetails, milk: \"No milk\" })\n    };\n    setOrderDetails({ ...orderDetails, pickup_time: `${hr}:${min}` });\n  }, []);\n\n  const handleSize = (event) => {\n    setSize(event.target.value);\n    if (event.target.value === \"Large\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price + 0.5 });\n    } else if (event.target.value === \"Small\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price - 0.5 });\n    } else if (event.target.value === \"Regular\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price });\n    };\n  };\n\n  const handleMilk = (event) => {\n    setMilk(event.target.value);\n    setOrderDetails({ ...orderDetails, milk: event.target.value });\n  };\n\n  const handleSugar = (event) => {\n    setSugar(event.target.value);\n    setOrderDetails({ ...orderDetails, sugar: event.target.value });\n  };\n\n  const handlePickupTime = (event) => {\n    let time = new Date().getTime();\n    if (event.target.value === \"10\") {\n      time = time + 600000;\n    } else if (event.target.value === \"20\") {\n      time = time + 1200000;\n    } else if (event.target.value === \"30\") {\n      time = time + 1800000;\n    };\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setOrderDetails({ ...orderDetails, pickup_time: `${hr}:${min}` });\n  };\n\n  return (\n    <>\n      <button><Link to=\"/map\">Cancel</Link></button>\n      <h3>{cafe.cafe_name}</h3>\n      <h4>{userCoffee.name}</h4>\n      <form>\n        <div>\n          <label>Size: </label>\n          <select value={size} onChange={handleSize}>\n            <option value=\"Regular\">Regular</option>\n            {userCoffee.name === \"Espresso\" ? (\n              <></>\n            ) : (\n              <>\n                <option value=\"Small\">Small -$0.50</option>\n                <option value=\"Large\">Large +$0.50</option>\n              </>\n            )}\n          </select>\n        </div>\n        {userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\" ? (\n          <div></div>\n        ) : (\n          <div>\n            <label>Milk:</label>\n            <select value={milk} onChange={handleMilk}>\n              <option value=\"Regular Milk\">Full Cream</option>\n              <option value=\"Skim Milk\">Skim</option>\n              <option value=\"Soy Milk\">Soy</option>\n              <option value=\"Almond Milk\">Almond</option>\n            </select>\n          </div>\n        )}\n        <div>\n          <label>Sugar:</label>\n          <select value={sugar} onChange={handleSugar}>\n            <option value=\"0\">No Sugar</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n        </div>\n        <div>\n          <label>Pickup Time:</label>\n          <select onChange={handlePickupTime}>\n            <option value=\"0\">ASAP!</option>\n            <option value=\"10\">10 mins</option>\n            <option value=\"20\">20 mins</option>\n            <option value=\"30\">30 mins</option>\n          </select>\n        </div>\n      </form>\n      <StripeForm orderDetails={orderDetails} />\n    </>\n  );\n};\n\nexport default NewOrderForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx",["121","122","123"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser, coffees } = props;\n  const [ menu, setMenu ] = useState([]);\n  const [ newCoffee, setNewCoffee ] = useState(\"\");\n  const [ newPrice, setNewPrice ] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`)\n      .then((res) => setMenu(res.data))\n      .catch((err) => console.log(err));    \n  }, []);\n\n  const handleCoffeeSelect = (e) => {\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    setNewPrice(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInUser.cafe._id\n    };\n\n    let response = await axios.post(\"http://localhost:5000/menuitems\", newMenuItem);\n    const newItem = await response.data;\n\n    let cafeMenu = await loggedInUser.cafe.menu\n    cafeMenu.push(newItem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: cafeMenu });\n    const newMenuThing = await response.data;\n\n    setNewCoffee(\"\");\n    setNewPrice(\"\");\n  };\n\n  const handleDelete = async (menuitem) => {\n    let response = await axios.delete(`http://localhost:5000/menuitems/${menuitem._id}`);\n    const delResp = await response.data;\n\n    let updatedCafeMenu = loggedInUser.cafe.menu.filter((id) => id !== menuitem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: updatedCafeMenu });\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n  };\n\n  return (\n    <>\n      {(loggedInUser && menu) ? (\n        <>\n          <h2>{loggedInUser.cafe.cafe_name}</h2>\n          <Link to=\"/dashboard\"><button>BACK</button></Link>\n          <div className=\"mt-4\">\n            <Row>\n              <Col>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Coffee</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {menu ? (menu.map((item) => (\n                      <tr key={item._id}>\n                        <td>{item.coffee.name}</td>\n                        <td>{item.coffee.description}</td>\n                        <td>${item.price.toFixed(2)}</td>\n                        <td>\n                          <button onClick={() => handleDelete(item)} >Delete</button>\n                        </td>\n                      </tr>\n                    ))) : <></>}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <h4>Add Coffee To Menu</h4>\n          <br />\n          <form onSubmit={handleSubmit}>\n            <div>\n              <select onChange={handleCoffeeSelect} value={newCoffee.name} >\n              <option disabled selected value> -- select coffee -- </option>\n                {coffees.map((coffee) => \n                  <option key={coffee._id} value={coffee._id}>{coffee.name}</option>\n                )}\n              </select>\n            </div>\n            <br />\n            <div>\n              <input type=\"Number\" placeholder=\"Price (eg 3.5)\" onChange={handlePrice} value={newPrice} />\n            </div>\n            <br />\n            <div>\n              <button>Add</button>\n            </div>\n          </form>\n        </>\n      ) : <h3>fetching data...</h3>}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx",["124","125","126","127","128","129","130"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\nimport { Container, Row, Col, Input, Button, Form, Table } from 'reactstrap';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { BsDashSquareFill } from 'react-icons/bs';\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n\n  useEffect(() => {\n    getOrders(\"active\");\n  }, []);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const userOrders = response.data;\n    pastOrders ? setPastOrders(userOrders) : setOrders(userOrders);\n  };\n\n  const retrieveCafeOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders/past`;\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center\">  \n          <h1>Current Orders</h1>\n          <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} setOrders={setOrders} loggedInUser={loggedInUser} />\n        </Row>\n        <Row className=\"justify-content-center \">\n\n            <h1 className=\"justify-content-center Cafe-Header-Margin\">Past Orders</h1>\n              <div className=\"Cafe-Dashboard-Expand Cafe-Header-Margin\" >\n                <BsFillPlusSquareFill onClick={() => getPastOrders(true)} />\n          </div>\n        </Row>\n        <Row id=\"Past-Orders\">\n          {showPastOrders ? (\n              <div>\n                <OrderTable orders={pastOrders} />\n              </div>\n            ) : (<></>)}\n        </Row>\n       \n      </Container>\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx",["131","132"],"import { Link } from \"react-router-dom\";\nimport { Row,Table, Container, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst OrderTable = (props) => {\n  const { orders, getOrders, getPastOrders, loggedInUser, setOrders } = props;\n\n  const completeOrder = (id) => {\n    axios\n      .put(`http://localhost:5000/orders/${id}`)\n      .then((res) => {\n        console.log(res.data);\n        getOrders(\"active\");\n        getPastOrders(false);\n      })\n  };\n\n  return (\n    <>\n   <Container> \n    <Row className=\"justify-content-center margin-add-top\">\n    </Row>\n        <Row>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Cafe</th>\n                  <th>User</th>\n                  <th>Order Date</th>\n                  <th>Active?</th>\n                  <th>Coffee</th>\n                  <th>Size</th>\n                  <th>Milk</th>\n                  <th>Sugar</th>\n                  <th>Pickup Time</th>\n                  <th>Total</th>\n                  <th>COMPLETE</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders ? (orders.map((order) => (\n                  <tr key={order._id}>\n                    <th>{order.cafe.cafe_name}</th>\n                    <td>{order.user.user_name}</td>\n                    <td>{new Date(order.order_date).toLocaleString(\"en-Au\", {timeZone: \"Australia/Brisbane\"})}</td>\n                    <td>{String(order.active)}</td>\n                    <td>{order.coffee}</td>\n                    <td>{order.size}</td>\n                    <td>{order.milk}</td>\n                    <td>{order.sugar}</td>\n                    <td>{order.pickup_time}</td>\n                    <td>${order.total.toFixed(2)}</td>\n                    {(order.active && loggedInUser.role === \"cafe\") ? (\n                      <td>\n                         <Button onClick={() => completeOrder(order._id)}>Complete</Button>\n                      </td>\n                    ) : (<></>)\n                    }\n                  </tr>\n                ))) : <></>}\n              </tbody>\n            </Table>\n        </Row>\n    </Container>\n    </>\n  );\n};\n\nexport default OrderTable;","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCafeForm.js",["133","134","135"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  username: \"\",\n  password: \"\",\n  user_name: \"\",\n  role: \"user\",\n  phone: \"\"\n};\n\nconst NewCafeForm = (props) => {\n  const { setCafeData, cafeData, initialCafeState, isEditing, cafes, setCafes } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n\n  // on initial load\n  useEffect(() => {\n    if (isEditing) {\n      console.log(isEditing)\n      axios.get(`http://localhost:5000/users/${cafeData.owner}`).then((res) => {\n        setUserData(res.data);\n      });\n    }\n  }, []);\n\n  // every time isEditing changes\n  useEffect(() => {\n    if(!isEditing) {\n      setUserData(initialUserState)\n      setCafeData(initialCafeState)\n    }\n  }, [isEditing]);\n\n  const addCafe = (newCafe) => {\n    setCafes([...cafes, newCafe]);\n  };\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id == cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    setCafeData({ ...cafeData, [e.target.name]: e.target.value });\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(`http://localhost:5000/cafes/${cafeData._id}`, cafeData)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n      props.history.push('/admin');  \n  };\n\n  const updateExistingUser = () => {\n    axios\n      .patch(`http://localhost:5000/users/${userData._id}`, userData)\n      .then((res) => console.log(res.data));\n  };\n\n  const saveNewUser = () => {\n    return axios.post(\"http://localhost:5000/users/register\", userData).then(res => {\n      const cafeId = res.data._id;\n      const newCafeData = {...cafeData, owner: cafeId};\n      addCafe(newCafeData);\n      return newCafeData\n    })\n  };\n\n  const saveNewCafe = (newCafeData) => {\n    return axios.post(\"http://localhost:5000/cafes\", newCafeData).then(() => {\n      setCafeData(initialCafeState);\n      setUserData(initialUserState);\n    })\n  };\n\n  const cancelEditing = () => {\n    setCafeData(initialCafeState);\n    setUserData(initialUserState);\n    props.history.push('/admin');\n  };\n\n  const handleFinalSubmit = (e) => {\n    e.preventDefault();\n    // console.log(userData);\n    // if (cafeData.cafe_name && cafeData.address) { // add validation that all fields must be entered\n    // console.log(cafeData);\n    if (isEditing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewUser().then(newCafeData => {\n        saveNewCafe(newCafeData).then(() => {\n          props.history.push('/admin');\n        });\n      })\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Email:</Label>\n              <Input\n                name=\"username\"\n                value={userData.username}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                name=\"operating_hours[0]\"\n                required\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                name=\"operating_hours[1]\"\n                required\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                name=\"location[0]\"\n                required\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                name=\"location[1]\"\n                required\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCoffeeForm.js",["136","137","138","139"],"import React, { useState } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst NewCoffeeForm = (props) => {\n  const { updateCoffeeArray, coffees, setCoffees, coffeeData, setCoffeeData, initialCoffeeData, isEditing } = props;\n  const [error, setError] = useState('')\n\n  const handleInputChange = (e) => {\n    setCoffeeData({ ...coffeeData, [e.target.name]: e.target.value });\n  };\n  const addCoffee = (newCoffee) => {\n\n    setCoffees([...coffees, newCoffee]);\n  }\n  const saveNewCoffee = () => {\n    return axios.post(\"http://localhost:5000/coffees\", coffeeData).then(() => {\n      addCoffee(coffeeData)\n      setCoffeeData(initialCoffeeData)\n    })\n  };\n  const updateCoffee = (newCoffee) => {\n    setCoffees(coffees.map((coffee) => (coffee._id == coffeeData._id ? newCoffee : coffee)));\n  };\n\n  const updateExistingCoffee = () => {\n    axios\n      .put(`http://localhost:5000/coffees/${coffeeData._id}`, coffeeData)\n      .then((res) => updateCoffee(res.data))\n      .catch((error) => console.log(error));\n      props.history.push('/admin');  \n  };\n  const cancelEditing = () => {\n    setCoffeeData(initialCoffeeData);\n    props.history.push('/admin');\n  };\n  \n  // const validateForm = () => {\n  //   if(coffeeData.name.length < 3) {\n  //     setError('Coffee name must be longer than 2 characters')\n  //   }\n  // }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // validateForm();\n    if(isEditing) {\n      updateExistingCoffee();\n    } else {\n      saveNewCoffee().then(() => {\n        props.history.push('/admin');\n      })\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n        <h2>{isEditing ? \"Edit\" : \"Add New\"} Coffee</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name:</Label>\n              <Input\n                name=\"name\"\n                placeholder=\"coffee name\"\n                value={coffeeData.name}\n                onChange={handleInputChange}\n                required\n              ></Input>\n              {/* {errors.name && errors.name.type === 'required' && (<p>Name is required</p>)} */}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description:</Label>\n              <Input\n                name=\"description\"\n                placeholder=\"description\"\n                value={coffeeData.description}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCoffeeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminLists.js",["140","141","142","143"],"import React, {useState}  from 'react'\nimport { Navbar, Container, Row, Col, Input, Button, NavItem, Nav, Table } from \"reactstrap\";\n\nconst AdminLists = (props) => {\n\n  const {cafes, deleteCafe, coffees, setCoffees, deleteCoffee, setCafeData, coffeeData, setCoffeeData } = props;\n  const [cafeSearchTerm, setCafeSearchTerm] = useState(\"\");\n  const [coffeeSearchTerm, setCoffeeSearchTerm] = useState(\"\");\n\n\n  const handleCafeSearchTermChange = (e) => {\n    setCafeSearchTerm(e.target.value);\n  };\n  const handleCoffeeSearchTermChange = (e) => {\n    setCoffeeSearchTerm(e.target.value);\n  };\n\n  const editCafe = (cafe) => {\n    setCafeData(cafe);\n    props.history.push('/admin/edit_cafe');\n  };\n  const editCoffee = (coffee) => {\n    console.log(coffee)\n    setCoffeeData(coffee);\n    console.log('nele',coffeeData)\n    props.history.push('/admin/edit_coffee');\n  };\n\n  return (\n    <Container>\n          <Row className=\"justify-content-center margin-add-top\">\n            <h1>Admin Dashboard</h1>\n          </Row>\n          <Row>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Cafes</h3>\n              <Input placeholder=\"Search\" value={cafeSearchTerm} onChange={handleCafeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cafes\n                    .filter((cafe) =>\n                      cafe.cafe_name\n                        .trim()\n                        .toLowerCase()\n                        .includes(cafeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((cafe) => (\n                      <tr key={cafe._id}>\n                        <td>{cafe.cafe_name}</td>\n                        <td>\n                          <Button onClick={() => editCafe(cafe)}>Edit</Button>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCafe(cafe._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Coffees</h3>\n              <Input placeholder=\"Search\" value={coffeeSearchTerm} onChange={handleCoffeeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {coffees\n                    .filter((coffee) =>\n                      coffee.name\n                        .trim()\n                        .toLowerCase()\n                        .includes(coffeeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((coffee) => (\n                      <tr key={coffee._id}>\n                        <td>{coffee.name}</td>\n                        <td>\n                          <Button onClick={() => editCoffee(coffee)}>Edit</Button>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCoffee(coffee._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n  )\n}\n\nexport default AdminLists","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminHome.js",["144"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentCancelView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentSuccessView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/StripeForm.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NavBar.js",["145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":40,"nodeType":"152","messageId":"153","endLine":2,"endColumn":44},{"ruleId":"150","severity":1,"message":"154","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":16},{"ruleId":"150","severity":1,"message":"155","line":3,"column":18,"nodeType":"152","messageId":"153","endLine":3,"endColumn":27},{"ruleId":"150","severity":1,"message":"156","line":3,"column":29,"nodeType":"152","messageId":"153","endLine":3,"endColumn":32},{"ruleId":"150","severity":1,"message":"157","line":3,"column":34,"nodeType":"152","messageId":"153","endLine":3,"endColumn":37},{"ruleId":"150","severity":1,"message":"158","line":3,"column":39,"nodeType":"152","messageId":"153","endLine":3,"endColumn":44},{"ruleId":"150","severity":1,"message":"159","line":3,"column":46,"nodeType":"152","messageId":"153","endLine":3,"endColumn":52},{"ruleId":"150","severity":1,"message":"160","line":3,"column":54,"nodeType":"152","messageId":"153","endLine":3,"endColumn":61},{"ruleId":"150","severity":1,"message":"161","line":3,"column":63,"nodeType":"152","messageId":"153","endLine":3,"endColumn":66},{"ruleId":"150","severity":1,"message":"162","line":3,"column":68,"nodeType":"152","messageId":"153","endLine":3,"endColumn":73},{"ruleId":"150","severity":1,"message":"163","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"164","line":15,"column":8,"nodeType":"152","messageId":"153","endLine":15,"endColumn":26},{"ruleId":"150","severity":1,"message":"165","line":23,"column":25,"nodeType":"152","messageId":"153","endLine":23,"endColumn":40},{"ruleId":"150","severity":1,"message":"166","line":38,"column":9,"nodeType":"152","messageId":"153","endLine":38,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":42,"column":22,"nodeType":"169","messageId":"170","endLine":42,"endColumn":24},{"ruleId":"150","severity":1,"message":"155","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":19},{"ruleId":"150","severity":1,"message":"171","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":17,"column":6,"nodeType":"174","endLine":17,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":34,"column":30,"nodeType":"178","messageId":"179","endLine":34,"endColumn":32},{"ruleId":"150","severity":1,"message":"157","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":6},{"ruleId":"150","severity":1,"message":"180","line":12,"column":3,"nodeType":"152","messageId":"153","endLine":12,"endColumn":11},{"ruleId":"150","severity":1,"message":"181","line":17,"column":8,"nodeType":"152","messageId":"153","endLine":17,"endColumn":12},{"ruleId":"172","severity":1,"message":"182","line":27,"column":6,"nodeType":"174","endLine":27,"endColumn":8,"suggestions":"183"},{"ruleId":"172","severity":1,"message":"184","line":38,"column":6,"nodeType":"174","endLine":38,"endColumn":8,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":17,"column":6,"nodeType":"174","endLine":17,"endColumn":8,"suggestions":"187"},{"ruleId":"150","severity":1,"message":"188","line":43,"column":11,"nodeType":"152","messageId":"153","endLine":43,"endColumn":23},{"ruleId":"150","severity":1,"message":"189","line":51,"column":11,"nodeType":"152","messageId":"153","endLine":51,"endColumn":18},{"ruleId":"150","severity":1,"message":"157","line":4,"column":26,"nodeType":"152","messageId":"153","endLine":4,"endColumn":29},{"ruleId":"150","severity":1,"message":"158","line":4,"column":31,"nodeType":"152","messageId":"153","endLine":4,"endColumn":36},{"ruleId":"150","severity":1,"message":"159","line":4,"column":38,"nodeType":"152","messageId":"153","endLine":4,"endColumn":44},{"ruleId":"150","severity":1,"message":"190","line":4,"column":46,"nodeType":"152","messageId":"153","endLine":4,"endColumn":50},{"ruleId":"150","severity":1,"message":"162","line":4,"column":52,"nodeType":"152","messageId":"153","endLine":4,"endColumn":57},{"ruleId":"150","severity":1,"message":"191","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":26},{"ruleId":"172","severity":1,"message":"192","line":17,"column":6,"nodeType":"174","endLine":17,"endColumn":8,"suggestions":"193"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":14},{"ruleId":"150","severity":1,"message":"194","line":7,"column":59,"nodeType":"152","messageId":"153","endLine":7,"endColumn":68},{"ruleId":"172","severity":1,"message":"195","line":26,"column":6,"nodeType":"174","endLine":26,"endColumn":8,"suggestions":"196"},{"ruleId":"172","severity":1,"message":"197","line":34,"column":6,"nodeType":"174","endLine":34,"endColumn":17,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"168","line":41,"column":44,"nodeType":"169","messageId":"170","endLine":41,"endColumn":46},{"ruleId":"150","severity":1,"message":"199","line":7,"column":11,"nodeType":"152","messageId":"153","endLine":7,"endColumn":28},{"ruleId":"150","severity":1,"message":"200","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":15},{"ruleId":"150","severity":1,"message":"201","line":8,"column":17,"nodeType":"152","messageId":"153","endLine":8,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":24,"column":52,"nodeType":"169","messageId":"170","endLine":24,"endColumn":54},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"160","line":2,"column":54,"nodeType":"152","messageId":"153","endLine":2,"endColumn":61},{"ruleId":"150","severity":1,"message":"161","line":2,"column":63,"nodeType":"152","messageId":"153","endLine":2,"endColumn":66},{"ruleId":"150","severity":1,"message":"202","line":6,"column":38,"nodeType":"152","messageId":"153","endLine":6,"endColumn":48},{"ruleId":"172","severity":1,"message":"203","line":33,"column":6,"nodeType":"174","endLine":33,"endColumn":8,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":12,"column":13,"nodeType":"207","messageId":"208","endLine":43,"endColumn":14},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'NavItem' is defined but never used.","'Nav' is defined but never used.","'Table' is defined but never used.","'CafesView' is defined but never used.","'PaymentSuccessView' is defined but never used.","'setUserLocation' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NewOrderForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.","ArrayExpression",["211"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CardText' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCoffees'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'orderDetails' and 'userCoffee.name'. Either include them or remove the dependency array. You can also do a functional update 'setOrderDetails(o => ...)' if you only need 'orderDetails' in the 'setOrderDetails' call.",["213"],"React Hook useEffect has a missing dependency: 'loggedInUser.cafe._id'. Either include it or remove the dependency array.",["214"],"'newMenuThing' is assigned a value but never used.","'delResp' is assigned a value but never used.","'Form' is defined but never used.","'BsDashSquareFill' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["215"],"'setOrders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cafeData.owner' and 'isEditing'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'initialCafeState' and 'setCafeData'. Either include them or remove the dependency array.",["217"],"'updateCoffeeArray' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'setCoffees' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.",["218"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [getCafeData]",{"range":"235","text":"236"},"Update the dependencies array to be: [getAllCoffees]",{"range":"237","text":"238"},"Update the dependencies array to be: [orderDetails, userCoffee.name]",{"range":"239","text":"240"},"Update the dependencies array to be: [loggedInUser.cafe._id]",{"range":"241","text":"242"},"Update the dependencies array to be: [getOrders]",{"range":"243","text":"244"},"Update the dependencies array to be: [cafeData.owner, isEditing]",{"range":"245","text":"246"},"Update the dependencies array to be: [initialCafeState, isEditing, setCafeData]",{"range":"247","text":"248"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"249","text":"250"},[592,594],"[getCafeData]",[524,526],"[getAllCoffees]",[1153,1155],"[orderDetails, userCoffee.name]",[574,576],"[loggedInUser.cafe._id]",[579,581],"[getOrders]",[676,678],"[cafeData.owner, isEditing]",[840,851],"[initialCafeState, isEditing, setCafeData]",[906,908],"[getAllCafes, getAllCoffees]"]