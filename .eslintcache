[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.jsx":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx":"12","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx":"13","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCafeForm.js":"14","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCoffeeForm.js":"15","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminLists.js":"16","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminHome.js":"17","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentCancelView.jsx":"18","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentSuccessView.jsx":"19","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/StripeForm.jsx":"20"},{"size":193,"mtime":1611455818411,"results":"21","hashOfConfig":"22"},{"size":5694,"mtime":1612231191444,"results":"23","hashOfConfig":"22"},{"size":427,"mtime":1612213891369,"results":"24","hashOfConfig":"22"},{"size":1444,"mtime":1612177540988,"results":"25","hashOfConfig":"22"},{"size":2324,"mtime":1612177540988,"results":"26","hashOfConfig":"22"},{"size":2991,"mtime":1612133355860,"results":"27","hashOfConfig":"22"},{"size":2686,"mtime":1612231191445,"results":"28","hashOfConfig":"22"},{"size":3342,"mtime":1612135783476,"results":"29","hashOfConfig":"22"},{"size":7643,"mtime":1612154283810,"results":"30","hashOfConfig":"22"},{"size":4354,"mtime":1612231191446,"results":"31","hashOfConfig":"22"},{"size":3728,"mtime":1612150922867,"results":"32","hashOfConfig":"22"},{"size":3458,"mtime":1612154074373,"results":"33","hashOfConfig":"22"},{"size":2180,"mtime":1612154074373,"results":"34","hashOfConfig":"22"},{"size":7575,"mtime":1612229220964,"results":"35","hashOfConfig":"22"},{"size":2902,"mtime":1612231104195,"results":"36","hashOfConfig":"22"},{"size":3724,"mtime":1612225819402,"results":"37","hashOfConfig":"22"},{"size":4138,"mtime":1612225819402,"results":"38","hashOfConfig":"22"},{"size":107,"mtime":1612231191446,"results":"39","hashOfConfig":"22"},{"size":575,"mtime":1612231191446,"results":"40","hashOfConfig":"22"},{"size":1154,"mtime":1612231191446,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"cp2oi7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["93","94"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",["95","96","97","98"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx",["99","100","101","102"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport NewOrderForm from \"./NewOrderForm\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { userCoffee, setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    getCafeData();\n  }, []);\n\n  const getCafeData = async () => {\n    // const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: userCoffee.id,\n    };\n\n    const response = await axios.post(\"http://localhost:5000/map/\", postBody);\n    const searchResults = await response.data;\n    setCafesData(searchResults);\n  };\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee === coffee.id) {\n        setUserCoffee({ ...userCoffee, price: menuitem.price });\n      }\n    });\n    setCafe(cafe);\n  }\n\n  // const showPanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Hide-Order\");\n  //   orderElement.classList.add(\"Show-Order\");\n  // };\n\n  // const hidePanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Show-Order\");\n  //   orderElement.classList.add(\"Hide-Order\");\n  // };\n\n  return (\n    <>\n      {/* <Container>\n          <div className=\"Hide-Order\" id=\"orderPanel\" >\n            <button onClick={hidePanel}>Close</button>\n            <NewOrderForm coffee={coffee} cafe={cafe}  />\n          </div>\n      </Container> */}\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafesData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{userCoffee.name}</p>\n              {cafe.menu.map(\n                (item) =>\n                  item.coffee === userCoffee.id ? (\n                    <Link\n                      to=\"/orders/new\"\n                      onClick={() => handleClick(cafe, userCoffee)}\n                    >\n                      ${item.price.toFixed(2)} - BUY NOW\n                    </Link>\n                  ) : (\n                    <></>\n                  )\n                // item.coffee === coffee.id ? <Link to=\"/orders/new\" onClick={() => showPanel}>${item.price.toFixed(2)} - BUY NOW</Link> : <></>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx",["103","104","105","106"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport logo from \"../assets/Logo.png\";\nimport coffeeImg from \"../assets/coffee.svg\";\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee } = props;\n\n  useEffect(() => {\n    getAllCoffees();\n  }, []);\n\n  const getAllCoffees = async () => {\n    const response = await axios.get(\"http://localhost:5000/coffees/\", coffees);\n    const allCoffees = await response.data;\n    await setCoffees(allCoffees);\n  };\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n      {/* <Container style={{ padding: \"0\", margin: \"0\" }} fluid=\"true\">\n        <Row className=\"align-items-center\">\n          <Col sm={{ size: 4 }} xs={{ size: 4 }}>\n            <a href=\"/\">\n              <img src={logo} alt=\"Logo\" style={{ height: \"125px\" }}></img>\n            </a>\n          </Col>\n\n          <Col\n            sm={{ size: 4 }}\n            xs={{ size: 4 }}\n            className=\"justify-content-center text-center\"\n          >\n            <input\n              type=\"search\"\n              id=\"\"\n              name=\"\"\n              placeholder=\"Search Coffee?\"\n            ></input>\n          </Col>\n\n          <Col sm={{ size: 4 }} xs={{ size: 3 }} style={{ textAlign: \"end\" }}>\n            <Link to=\"/login\">\n              <Button color=\"primary\" size=\"sm\" style={{ margin: \"10px\" }}>\n                Log In\n              </Button>\n            </Link>\n            <Link to=\"/register\">\n              <Button color=\"primary\" size=\"sm\">\n                Sign Up\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container> */}\n\n      <Container style={{ marginTop: \"40px\" }}>\n        <Row className=\"justify-content-center\" style={{ height: \"100px\" }}>\n          <div>\n            <h1>Coffiends</h1>\n          </div>\n        </Row>\n\n        <Row\n          className=\"justify-content-center\"\n          style={{\n            height: \"150px\",\n            border: \"2px solid black\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div>\n            click your favourite brew below to find cafes near you!\n          </div>\n        </Row>\n      </Container>\n\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            {coffees.map((coffee) => (\n              <CardDeck style={{ margin: \"50px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                  <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                    {coffee.description}\n                  </CardSubtitle>\n                    {/* <p\n                      key={coffee._id}\n                      onClick={() => addUserCoffee(coffee.name, coffee._id)}\n                    > */}\n                      {/* {coffee.name} -{\" \"} */}\n                      <Link to=\"/map\" onClick={() => addUserCoffee(coffee._id, coffee.name)}>\n                        <Button color=\"primary\" size=\"sm\">\n                          SEARCH\n                        </Button>\n                      </Link>\n                    {/* </p> */}\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n\n      {/* <div>\n        <CardDeck style={{margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <CardDeck style={{ margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div> */}\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx",["107"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx",["108","109","110"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser, coffees } = props;\n  const [ menu, setMenu ] = useState([]);\n  const [ newCoffee, setNewCoffee ] = useState(\"\");\n  const [ newPrice, setNewPrice ] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`)\n      .then((res) => setMenu(res.data))\n      .catch((err) => console.log(err));    \n  }, []);\n\n  const handleCoffeeSelect = (e) => {\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    setNewPrice(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInUser.cafe._id\n    };\n\n    let response = await axios.post(\"http://localhost:5000/menuitems\", newMenuItem);\n    const newItem = await response.data;\n\n    let cafeMenu = await loggedInUser.cafe.menu\n    cafeMenu.push(newItem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: cafeMenu });\n    const newMenuThing = await response.data;\n\n    setNewCoffee(\"\");\n    setNewPrice(\"\");\n  };\n\n  const handleDelete = async (menuitem) => {\n    let response = await axios.delete(`http://localhost:5000/menuitems/${menuitem._id}`);\n    const delResp = await response.data;\n\n    let updatedCafeMenu = loggedInUser.cafe.menu.filter((id) => id !== menuitem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: updatedCafeMenu });\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n  };\n\n  return (\n    <>\n      {(loggedInUser && menu) ? (\n        <>\n          <h2>{loggedInUser.cafe.cafe_name}</h2>\n          <Link to=\"/dashboard\"><button>BACK</button></Link>\n          <div className=\"mt-4\">\n            <Row>\n              <Col>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Coffee</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {menu ? (menu.map((item) => (\n                      <tr key={item._id}>\n                        <td>{item.coffee.name}</td>\n                        <td>{item.coffee.description}</td>\n                        <td>${item.price.toFixed(2)}</td>\n                        <td>\n                          <button onClick={() => handleDelete(item)} >Delete</button>\n                        </td>\n                      </tr>\n                    ))) : <></>}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <h4>Add Coffee To Menu</h4>\n          <br />\n          <form onSubmit={handleSubmit}>\n            <div>\n              <select onChange={handleCoffeeSelect} value={newCoffee.name} >\n              <option disabled selected value> -- select coffee -- </option>\n                {coffees.map((coffee) => \n                  <option key={coffee._id} value={coffee._id}>{coffee.name}</option>\n                )}\n              </select>\n            </div>\n            <br />\n            <div>\n              <input type=\"Number\" placeholder=\"Price (eg 3.5)\" onChange={handlePrice} value={newPrice} />\n            </div>\n            <br />\n            <div>\n              <button>Add</button>\n            </div>\n          </form>\n        </>\n      ) : <h3>fetching data...</h3>}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx",["111","112","113","114","115","116","117"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\nimport { Container, Row, Col, Input, Button, Form, Table } from 'reactstrap';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { BsDashSquareFill } from 'react-icons/bs';\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n\n  useEffect(() => {\n    getOrders(\"active\");\n  }, []);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const userOrders = response.data;\n    pastOrders ? setPastOrders(userOrders) : setOrders(userOrders);\n  };\n\n  const retrieveCafeOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders/past`;\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center\">  \n          <h1>Current Orders</h1>\n          <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} setOrders={setOrders} loggedInUser={loggedInUser} />\n        </Row>\n        <Row className=\"justify-content-center \">\n\n            <h1 className=\"justify-content-center Cafe-Header-Margin\">Past Orders</h1>\n              <div className=\"Cafe-Dashboard-Expand Cafe-Header-Margin\" >\n                <BsFillPlusSquareFill onClick={() => getPastOrders(true)} />\n          </div>\n        </Row>\n        <Row id=\"Past-Orders\">\n          {showPastOrders ? (\n              <div>\n                <OrderTable orders={pastOrders} />\n              </div>\n            ) : (<></>)}\n        </Row>\n       \n      </Container>\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx",["118","119"],"import { Link } from \"react-router-dom\";\nimport { Row,Table, Container, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst OrderTable = (props) => {\n  const { orders, getOrders, getPastOrders, loggedInUser, setOrders } = props;\n\n  const completeOrder = (id) => {\n    axios\n      .put(`http://localhost:5000/orders/${id}`)\n      .then((res) => {\n        console.log(res.data);\n        getOrders(\"active\");\n        getPastOrders(false);\n      })\n  };\n\n  return (\n    <>\n   <Container> \n    <Row className=\"justify-content-center margin-add-top\">\n    </Row>\n        <Row>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Cafe</th>\n                  <th>User</th>\n                  <th>Order Date</th>\n                  <th>Active?</th>\n                  <th>Coffee</th>\n                  <th>Size</th>\n                  <th>Milk</th>\n                  <th>Sugar</th>\n                  <th>Pickup Time</th>\n                  <th>Total</th>\n                  <th>COMPLETE</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders ? (orders.map((order) => (\n                  <tr key={order._id}>\n                    <th>{order.cafe.cafe_name}</th>\n                    <td>{order.user.user_name}</td>\n                    <td>{new Date(order.order_date).toLocaleString(\"en-Au\", {timeZone: \"Australia/Brisbane\"})}</td>\n                    <td>{String(order.active)}</td>\n                    <td>{order.coffee}</td>\n                    <td>{order.size}</td>\n                    <td>{order.milk}</td>\n                    <td>{order.sugar}</td>\n                    <td>{order.pickup_time}</td>\n                    <td>${order.total.toFixed(2)}</td>\n                    {(order.active && loggedInUser.role === \"cafe\") ? (\n                      <td>\n                         <Button onClick={() => completeOrder(order._id)}>Complete</Button>\n                      </td>\n                    ) : (<></>)\n                    }\n                  </tr>\n                ))) : <></>}\n              </tbody>\n            </Table>\n        </Row>\n    </Container>\n    </>\n  );\n};\n\nexport default OrderTable;",["120","121"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCafeForm.js",["122","123","124"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  username: \"\",\n  password: \"\",\n  user_name: \"\",\n  role: \"user\",\n  phone: \"\"\n};\n\nconst NewCafeForm = (props) => {\n  const { setCafeData, cafeData, initialCafeState, isEditing, cafes, setCafes } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n\n  // on initial load\n  useEffect(() => {\n    if (isEditing) {\n      console.log(isEditing)\n      axios.get(`http://localhost:5000/users/${cafeData.owner}`).then((res) => {\n        setUserData(res.data);\n      });\n    }\n  }, []);\n\n  // every time isEditing changes\n  useEffect(() => {\n    if(!isEditing) {\n      setUserData(initialUserState)\n      setCafeData(initialCafeState)\n    }\n  }, [isEditing]);\n\n  const addCafe = (newCafe) => {\n    setCafes([...cafes, newCafe]);\n  };\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id == cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    setCafeData({ ...cafeData, [e.target.name]: e.target.value });\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(`http://localhost:5000/cafes/${cafeData._id}`, cafeData)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n      props.history.push('/admin');  \n  };\n\n  const updateExistingUser = () => {\n    axios\n      .patch(`http://localhost:5000/users/${userData._id}`, userData)\n      .then((res) => console.log(res.data));\n  };\n\n  const saveNewUser = () => {\n    return axios.post(\"http://localhost:5000/users/register\", userData).then(res => {\n      const cafeId = res.data._id;\n      const newCafeData = {...cafeData, owner: cafeId};\n      addCafe(newCafeData);\n      return newCafeData\n    })\n  };\n\n  const saveNewCafe = (newCafeData) => {\n    return axios.post(\"http://localhost:5000/cafes\", newCafeData).then(() => {\n      setCafeData(initialCafeState);\n      setUserData(initialUserState);\n    })\n  };\n\n  const cancelEditing = () => {\n    setCafeData(initialCafeState);\n    setUserData(initialUserState);\n    props.history.push('/admin');\n  };\n\n  const handleFinalSubmit = (e) => {\n    e.preventDefault();\n    // console.log(userData);\n    // if (cafeData.cafe_name && cafeData.address) { // add validation that all fields must be entered\n    // console.log(cafeData);\n    if (isEditing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewUser().then(newCafeData => {\n        saveNewCafe(newCafeData).then(() => {\n          props.history.push('/admin');\n        });\n      })\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Email:</Label>\n              <Input\n                name=\"username\"\n                value={userData.username}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                name=\"operating_hours[0]\"\n                required\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                name=\"operating_hours[1]\"\n                required\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                name=\"location[0]\"\n                required\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                name=\"location[1]\"\n                required\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/NewCoffeeForm.js",["125","126","127","128"],"import React, { useState } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst NewCoffeeForm = (props) => {\n  const { updateCoffeeArray, coffees, setCoffees, coffeeData, setCoffeeData, initialCoffeeData, isEditing } = props;\n  const [error, setError] = useState('')\n\n  const handleInputChange = (e) => {\n    setCoffeeData({ ...coffeeData, [e.target.name]: e.target.value });\n  };\n  const addCoffee = (newCoffee) => {\n\n    setCoffees([...coffees, newCoffee]);\n  }\n  const saveNewCoffee = () => {\n    return axios.post(\"http://localhost:5000/coffees\", coffeeData).then(() => {\n      addCoffee(coffeeData)\n      setCoffeeData(initialCoffeeData)\n    })\n  };\n  const updateCoffee = (newCoffee) => {\n    setCoffees(coffees.map((coffee) => (coffee._id == coffeeData._id ? newCoffee : coffee)));\n  };\n\n  const updateExistingCoffee = () => {\n    axios\n      .put(`http://localhost:5000/coffees/${coffeeData._id}`, coffeeData)\n      .then((res) => updateCoffee(res.data))\n      .catch((error) => console.log(error));\n      props.history.push('/admin');  \n  };\n  const cancelEditing = () => {\n    setCoffeeData(initialCoffeeData);\n    props.history.push('/admin');\n  };\n  \n  // const validateForm = () => {\n  //   if(coffeeData.name.length < 3) {\n  //     setError('Coffee name must be longer than 2 characters')\n  //   }\n  // }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // validateForm();\n    if(isEditing) {\n      updateExistingCoffee();\n    } else {\n      saveNewCoffee().then(() => {\n        props.history.push('/admin');\n      })\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n        <h2>{isEditing ? \"Edit\" : \"Add New\"} Coffee</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name:</Label>\n              <Input\n                name=\"name\"\n                placeholder=\"coffee name\"\n                value={coffeeData.name}\n                onChange={handleInputChange}\n                required\n              ></Input>\n              {/* {errors.name && errors.name.type === 'required' && (<p>Name is required</p>)} */}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description:</Label>\n              <Input\n                name=\"description\"\n                placeholder=\"description\"\n                value={coffeeData.description}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCoffeeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminLists.js",["129","130","131","132"],"import React, {useState}  from 'react'\nimport { Navbar, Container, Row, Col, Input, Button, NavItem, Nav, Table } from \"reactstrap\";\n\nconst AdminLists = (props) => {\n\n  const {cafes, deleteCafe, coffees, setCoffees, deleteCoffee, setCafeData, coffeeData, setCoffeeData } = props;\n  const [cafeSearchTerm, setCafeSearchTerm] = useState(\"\");\n  const [coffeeSearchTerm, setCoffeeSearchTerm] = useState(\"\");\n\n\n  const handleCafeSearchTermChange = (e) => {\n    setCafeSearchTerm(e.target.value);\n  };\n  const handleCoffeeSearchTermChange = (e) => {\n    setCoffeeSearchTerm(e.target.value);\n  };\n\n  const editCafe = (cafe) => {\n    setCafeData(cafe);\n    props.history.push('/admin/edit_cafe');\n  };\n  const editCoffee = (coffee) => {\n    console.log(coffee)\n    setCoffeeData(coffee);\n    console.log('nele',coffeeData)\n    props.history.push('/admin/edit_coffee');\n  };\n\n  return (\n    <Container>\n          <Row className=\"justify-content-center margin-add-top\">\n            <h1>Admin Dashboard</h1>\n          </Row>\n          <Row>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Cafes</h3>\n              <Input placeholder=\"Search\" value={cafeSearchTerm} onChange={handleCafeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cafes\n                    .filter((cafe) =>\n                      cafe.cafe_name\n                        .trim()\n                        .toLowerCase()\n                        .includes(cafeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((cafe) => (\n                      <tr key={cafe._id}>\n                        <td>{cafe.cafe_name}</td>\n                        <td>\n                          <Button onClick={() => editCafe(cafe)}>Edit</Button>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCafe(cafe._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Coffees</h3>\n              <Input placeholder=\"Search\" value={coffeeSearchTerm} onChange={handleCoffeeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {coffees\n                    .filter((coffee) =>\n                      coffee.name\n                        .trim()\n                        .toLowerCase()\n                        .includes(coffeeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((coffee) => (\n                      <tr key={coffee._id}>\n                        <td>{coffee.name}</td>\n                        <td>\n                          <Button onClick={() => editCoffee(coffee)}>Edit</Button>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCoffee(coffee._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n  )\n}\n\nexport default AdminLists","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboard/AdminHome.js",["133"],"import { React, useState, useEffect } from \"react\";\nimport { Navbar, Button, NavItem, Nav } from \"reactstrap\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport NewCafeForm from \"./NewCafeForm\";\nimport NewCoffeeForm from \"./NewCoffeeForm\";\nimport AdminLists from \"./AdminLists\";\n\nconst AdminHome = (props) => {\n  const { match, coffees, setCoffees, handleLogout } = props;\n  \n  const [cafes, setCafes] = useState([]);\n  const initialCafeState = {\n    cafe_name: \"\",\n    address: \"\",\n    operating_hours: [],\n    location: [],\n  };\n  const [cafeData, setCafeData] = useState(initialCafeState);\n\n  const initialCoffeeData = {\n    name: \"\",\n    description: \"\",\n  };\n  const [coffeeData, setCoffeeData] = useState(initialCoffeeData);\n\n\n  // Add all coffees and cafes into state\n  useEffect(() => {\n    getAllCoffees();\n    getAllCafes();\n  }, [])\n  // Get all cafes from database\n  const getAllCafes = () => {\n    axios.get(\"http://localhost:5000/cafes/\", cafes)\n    .then(res => setCafes(res.data))\n    .catch(error => console.log(error));\n  };\n  \n  const deleteCafe = (id) => {\n    axios\n    .delete(`http://localhost:5000/cafes/${id}`, cafes)\n    .then((res) => setCafes(cafes.filter(cafe => cafe._id !== id)))\n    .catch(error => console.log(error));\n  };\n\n  // Get all coffees from the database\n  const getAllCoffees = () => {\n    axios.get(\"http://localhost:5000/coffees/\", coffees)\n    .then(res => setCoffees(res.data))\n    .catch(error => console.log(error))\n  };\n  const deleteCoffee = (id) => {\n    axios\n      .delete(`http://localhost:5000/coffees/${id}`, coffees)\n      .then((res) => setCoffees(coffees.filter(coffee => coffee._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar color=\"light\" light>\n          <Link to=\"/admin\">\n            <img src=\"logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\n          </Link>\n          <div>\n            <h1>COFFIENDS</h1>\n          </div>\n          <Nav>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/admin/new_cafe\"><Button>Add Cafe</Button></Link>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/admin/new_coffee\"><Button>Add Coffee</Button></Link>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/logout\"><Button onClick={handleLogout}>Log Out</Button></Link>\n            </NavItem>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <Route exact path={match.path + '/new_cafe'} render={(props) => (\n              <NewCafeForm {...props} cafes={cafes} cafeData={cafeData} setCafeData={setCafeData} setCafes={setCafes} isEditing={false} initialCafeState={initialCafeState} />\n            )}\n          />\n          <Route exact path={match.path + '/edit_cafe'} render={(props) => (\n              <NewCafeForm {...props} cafes={cafes} cafeData={cafeData} setCafeData={setCafeData} setCafes={setCafes} isEditing={true} initialCafeState={initialCafeState} />\n            )}\n          />\n          <Route exact path=\"/admin/new_coffee\" render={(props) => (\n              <NewCoffeeForm {...props} isEditing={false} coffees={coffees} setCoffees={setCoffees} coffeeData={coffeeData} setCoffeeData={setCoffeeData} initialCoffeeData={initialCoffeeData} />\n            )}\n          />\n          <Route exact path=\"/admin/edit_coffee\" render={(props) => (\n              <NewCoffeeForm {...props} isEditing={true} coffeeData={coffeeData} setCoffeeData={setCoffeeData} initialCoffeeData={initialCoffeeData} coffees={coffees} setCoffees={setCoffees} />\n            )}\n          />\n          <Route exact path=\"/admin\" render={(props) => (\n              <AdminLists {...props} cafes={cafes} deleteCafe={deleteCafe} coffees={coffees} setCoffees={setCoffees} deleteCoffee={deleteCoffee} setCafeData={setCafeData} coffeeData={coffeeData} setCoffeeData={setCoffeeData} initialCoffeeData={initialCoffeeData} />\n            )}\n          />\n          <Redirect to=\"/admin\" />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default AdminHome;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentCancelView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/PaymentSuccessView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/StripeForm.jsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":17},{"ruleId":"138","severity":1,"message":"142","line":15,"column":8,"nodeType":"140","messageId":"141","endLine":15,"endColumn":26},{"ruleId":"138","severity":1,"message":"143","line":23,"column":25,"nodeType":"140","messageId":"141","endLine":23,"endColumn":40},{"ruleId":"144","severity":1,"message":"145","line":42,"column":22,"nodeType":"146","messageId":"147","endLine":42,"endColumn":24},{"ruleId":"138","severity":1,"message":"148","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"149","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":17,"column":6,"nodeType":"152","endLine":17,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":34,"column":30,"nodeType":"156","messageId":"157","endLine":34,"endColumn":32},{"ruleId":"138","severity":1,"message":"158","line":7,"column":3,"nodeType":"140","messageId":"141","endLine":7,"endColumn":6},{"ruleId":"138","severity":1,"message":"159","line":12,"column":3,"nodeType":"140","messageId":"141","endLine":12,"endColumn":11},{"ruleId":"138","severity":1,"message":"160","line":17,"column":8,"nodeType":"140","messageId":"141","endLine":17,"endColumn":12},{"ruleId":"150","severity":1,"message":"161","line":25,"column":6,"nodeType":"152","endLine":25,"endColumn":8,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"163","line":38,"column":6,"nodeType":"152","endLine":38,"endColumn":8,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"165","line":17,"column":6,"nodeType":"152","endLine":17,"endColumn":8,"suggestions":"166"},{"ruleId":"138","severity":1,"message":"167","line":43,"column":11,"nodeType":"140","messageId":"141","endLine":43,"endColumn":23},{"ruleId":"138","severity":1,"message":"168","line":51,"column":11,"nodeType":"140","messageId":"141","endLine":51,"endColumn":18},{"ruleId":"138","severity":1,"message":"158","line":4,"column":26,"nodeType":"140","messageId":"141","endLine":4,"endColumn":29},{"ruleId":"138","severity":1,"message":"169","line":4,"column":31,"nodeType":"140","messageId":"141","endLine":4,"endColumn":36},{"ruleId":"138","severity":1,"message":"170","line":4,"column":38,"nodeType":"140","messageId":"141","endLine":4,"endColumn":44},{"ruleId":"138","severity":1,"message":"171","line":4,"column":46,"nodeType":"140","messageId":"141","endLine":4,"endColumn":50},{"ruleId":"138","severity":1,"message":"172","line":4,"column":52,"nodeType":"140","messageId":"141","endLine":4,"endColumn":57},{"ruleId":"138","severity":1,"message":"173","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":26},{"ruleId":"150","severity":1,"message":"174","line":17,"column":6,"nodeType":"152","endLine":17,"endColumn":8,"suggestions":"175"},{"ruleId":"138","severity":1,"message":"176","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":14},{"ruleId":"138","severity":1,"message":"177","line":7,"column":59,"nodeType":"140","messageId":"141","endLine":7,"endColumn":68},{"ruleId":"134","replacedBy":"178"},{"ruleId":"136","replacedBy":"179"},{"ruleId":"150","severity":1,"message":"180","line":26,"column":6,"nodeType":"152","endLine":26,"endColumn":8,"suggestions":"181"},{"ruleId":"150","severity":1,"message":"182","line":34,"column":6,"nodeType":"152","endLine":34,"endColumn":17,"suggestions":"183"},{"ruleId":"144","severity":1,"message":"145","line":41,"column":44,"nodeType":"146","messageId":"147","endLine":41,"endColumn":46},{"ruleId":"138","severity":1,"message":"184","line":7,"column":11,"nodeType":"140","messageId":"141","endLine":7,"endColumn":28},{"ruleId":"138","severity":1,"message":"185","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},{"ruleId":"138","severity":1,"message":"186","line":8,"column":17,"nodeType":"140","messageId":"141","endLine":8,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":24,"column":52,"nodeType":"146","messageId":"147","endLine":24,"endColumn":54},{"ruleId":"138","severity":1,"message":"187","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"138","severity":1,"message":"188","line":2,"column":54,"nodeType":"140","messageId":"141","endLine":2,"endColumn":61},{"ruleId":"138","severity":1,"message":"189","line":2,"column":63,"nodeType":"140","messageId":"141","endLine":2,"endColumn":66},{"ruleId":"138","severity":1,"message":"190","line":6,"column":38,"nodeType":"140","messageId":"141","endLine":6,"endColumn":48},{"ruleId":"150","severity":1,"message":"191","line":33,"column":6,"nodeType":"152","endLine":33,"endColumn":8,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'CafesView' is defined but never used.","Identifier","unusedVar","'PaymentSuccessView' is defined but never used.","'setUserLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'NewOrderForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.","ArrayExpression",["195"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Col' is defined but never used.","'CardText' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCoffees'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'orderDetails' and 'userCoffee.name'. Either include them or remove the dependency array. You can also do a functional update 'setOrderDetails(o => ...)' if you only need 'orderDetails' in the 'setOrderDetails' call.",["197"],"React Hook useEffect has a missing dependency: 'loggedInUser.cafe._id'. Either include it or remove the dependency array.",["198"],"'newMenuThing' is assigned a value but never used.","'delResp' is assigned a value but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'BsDashSquareFill' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["199"],"'Link' is defined but never used.","'setOrders' is assigned a value but never used.",["193"],["194"],"React Hook useEffect has missing dependencies: 'cafeData.owner' and 'isEditing'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has missing dependencies: 'initialCafeState' and 'setCafeData'. Either include them or remove the dependency array.",["201"],"'updateCoffeeArray' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Navbar' is defined but never used.","'NavItem' is defined but never used.","'Nav' is defined but never used.","'setCoffees' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.",["202"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [getCafeData]",{"range":"219","text":"220"},"Update the dependencies array to be: [getAllCoffees]",{"range":"221","text":"222"},"Update the dependencies array to be: [orderDetails, userCoffee.name]",{"range":"223","text":"224"},"Update the dependencies array to be: [loggedInUser.cafe._id]",{"range":"225","text":"226"},"Update the dependencies array to be: [getOrders]",{"range":"227","text":"228"},"Update the dependencies array to be: [cafeData.owner, isEditing]",{"range":"229","text":"230"},"Update the dependencies array to be: [initialCafeState, isEditing, setCafeData]",{"range":"231","text":"232"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"233","text":"234"},[592,594],"[getCafeData]",[480,482],"[getAllCoffees]",[1153,1155],"[orderDetails, userCoffee.name]",[574,576],"[loggedInUser.cafe._id]",[579,581],"[getOrders]",[676,678],"[cafeData.owner, isEditing]",[840,851],"[initialCafeState, isEditing, setCafeData]",[906,908],"[getAllCafes, getAllCoffees]"]