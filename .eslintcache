[{"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/index.js":"1","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/App.js":"2","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeDashboardView.jsx":"3","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CoffeesView.js":"4","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/LoginView.js":"5","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafesView.js":"6","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/RegisterView.js":"7","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboardView.js":"8","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/MapView.jsx":"9","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeMenuView.jsx":"10","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/HomeView.jsx":"11","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrdersView.jsx":"12","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewOrderForm.jsx":"13","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewCoffeeForm.js":"14","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewCafeForm.js":"15","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrderTable.jsx":"16","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/StripeForm.jsx":"17","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/PaymentCancelView.jsx":"18","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/PaymentSuccessView.jsx":"19"},{"size":193,"mtime":1611556931548,"results":"20","hashOfConfig":"21"},{"size":6746,"mtime":1612174313841,"results":"22","hashOfConfig":"21"},{"size":370,"mtime":1612150226789,"results":"23","hashOfConfig":"21"},{"size":1429,"mtime":1612151907742,"results":"24","hashOfConfig":"21"},{"size":2686,"mtime":1612155416876,"results":"25","hashOfConfig":"21"},{"size":2309,"mtime":1611870668429,"results":"26","hashOfConfig":"21"},{"size":2991,"mtime":1612094017858,"results":"27","hashOfConfig":"21"},{"size":5750,"mtime":1612154298633,"results":"28","hashOfConfig":"21"},{"size":3342,"mtime":1612151907742,"results":"29","hashOfConfig":"21"},{"size":3728,"mtime":1612150226790,"results":"30","hashOfConfig":"21"},{"size":7643,"mtime":1612154232089,"results":"31","hashOfConfig":"21"},{"size":3458,"mtime":1612152999262,"results":"32","hashOfConfig":"21"},{"size":5535,"mtime":1612178772531,"results":"33","hashOfConfig":"21"},{"size":1768,"mtime":1611556931548,"results":"34","hashOfConfig":"21"},{"size":7049,"mtime":1612154298634,"results":"35","hashOfConfig":"21"},{"size":2180,"mtime":1612152999262,"results":"36","hashOfConfig":"21"},{"size":1153,"mtime":1612184992324,"results":"37","hashOfConfig":"21"},{"size":107,"mtime":1612174338626,"results":"38","hashOfConfig":"21"},{"size":575,"mtime":1612188594525,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8gaqt5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/index.js",[],["87","88"],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/App.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport AdminDashBoardView from \"./components/AdminDashboardView\";\nimport CafeDashboardView from \"./components/CafeDashboardView.jsx\";\nimport CafeMenuView from \"./components/CafeMenuView\";\nimport CafesView from \"./components/CafesView\";\nimport CoffeesView from \"./components/CoffeesView\";\nimport HomeView from \"./components/HomeView\";\nimport LoginView from \"./components/LoginView\";\nimport MapView from \"./components/MapView\";\nimport NewOrderForm from \"./components/NewOrderForm\";\nimport OrdersView from \"./components/OrdersView\";\nimport PaymentCancelView from \"./components/PaymentCancelView\";\nimport PaymentSuccessView from \"./components/PaymentSuccessView\";\nimport RegisterView from \"./components/RegisterView\";\nimport StripeForm from \"./components/StripeForm\";\n\nconst App = () => {\n  const [ reload, setReload ] = useState(true);\n  const [ loggedInUser, setLoggedInUser ] = useState(null);\n  const [ coffees, setCoffees ] = useState([]);\n  const [ userCoffee, setUserCoffee ] = useState({ id: \"\", name: \"\", price: 0 });\n  const [ userLocation, setUserLocation ] = useState([ -27.468298, 153.0247838 ]);\n  const [ cafe, setCafe ] = useState(\"\");\n\n\n  // Checks session for a logged in user\n  useEffect(() => {\n    fetch(\"http://localhost:5000/users/check\", { credentials: \"include\" })\n      .then((data) => data.json())\n      .then((json) => {\n        if (json) {\n          setLoggedInUser(json);\n        }\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   if (reload === true) {\n  //     axios\n  //       .get(\"http://localhost:5000/coffees/\", coffees)\n  //       .then((res) => {\n  //         setCoffees(res.data);\n  //         setReload(false);\n  //       })\n  //       .catch((error) => console.log(error));\n  //     axios\n  //       .get(\"http://localhost:5000/cafes/\", cafes)\n  //       .then((res) => {\n  //         setCafes(res.data);\n  //         setReload(false);\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n    // navigator.geolocation.getCurrentPosition(\n    //   position => setUserLocation([position.coords.latitude, position.coords.longitude]),\n    //   error => console.log(error.message)\n    // );\n  // }, [reload, cafes, coffees]);\n// \n  const handleLogout = () => {\n    fetch(\"http://localhost:5000/users/logout\", {\n      credentials: \"include\",\n    }).then((res) => {\n      if (res.status == 200) {\n        setLoggedInUser(false);\n      } else {\n        console.log(res);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <BrowserRouter>\n        <header>\n          <nav>\n            <Link to=\"/\">\n              <img src=\"logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\n            </Link>\n            \n            <Link to=\"/orders\"> ORDERS</Link> |{\" \"}\n            <Link to=\"/dashboard\">CAFE DASHBOARD</Link> |{\" \"}\n            <Link to=\"/coffees\"> COFFEES</Link> |{\" \"}\n            <Link to=\"/cafes\"> CAFES</Link> | <Link to=\"/admin\">ADMIN</Link>\n            {!loggedInUser ? (\n              <>\n                <Link to=\"/login\">\n                  <Button color=\"primary\" size=\"sm\" style={{ margin: \"2px\" }}>\n                    LOG IN\n                  </Button>\n                </Link>\n                <Link to=\"/register\">\n                  <Button color=\"info\" size=\"sm\" style={{ margin: \"2px\" }}>\n                    SIGN UP\n                  </Button>\n                </Link>\n              </>\n            ) : (\n              <>\n                {loggedInUser ? (<span>logged in as {loggedInUser.name}</span>) : (<></>)}\n                <Link to=\"/logout\">\n                  <Button color=\"dark\" size=\"sm\" style={{ margin: \"5px\" }}onClick={handleLogout}>\n                    LOG OUT\n                  </Button>\n                </Link>\n              </>\n            )}\n          </nav>\n        </header>\n        <Switch>\n          <>\n          <Route exact path=\"/\" render={(props) => (\n            <HomeView {...props}\n              coffees={coffees} setCoffees={setCoffees} setUserCoffee={setUserCoffee} /> )} />\n\n          <Route exact path=\"/register\" render={(props) => (\n            <RegisterView {...props}\n              setLoggedInUser={setLoggedInUser} loggedInUser={loggedInUser} /> )} />\n\n          <Route exact path=\"/login\" render={(props) => (\n            <LoginView {...props}\n              setLoggedInUser={setLoggedInUser} /> )} />\n          \n          {loggedInUser ? (\n            <>\n              <Route exact path=\"/map\" render={(props) => (\n                <MapView {...props}\n                  userCoffee={userCoffee} setUserCoffee={setUserCoffee} userLocation={userLocation} setCafe={setCafe} /> )} />\n\n              <Route exact path=\"/orders/new\" render={(props) => (\n                <NewOrderForm {...props}\n                  userCoffee={userCoffee} cafe={cafe} loggedInUser={loggedInUser} /> )} />\n\n              <Route exact path=\"/orders\" render={(props) => (\n                <OrdersView {...props}\n                  loggedInUser={loggedInUser} /> )} />\n              \n              <Route exact path=\"/dashboard\" render={(props) => (\n                <CafeDashboardView {...props} \n                  loggedInUser={loggedInUser} /> )} />\n\n              <Route exact path=\"/menu\" render={(props) => (\n                <CafeMenuView {...props}\n                  loggedInUser={loggedInUser} coffees={coffees} /> )} />\n              \n              <Route exact path=\"/admin\" render={(props) => (\n                <AdminDashBoardView {...props}\n                  reload={reload} setReload={setReload} coffees={coffees} setCoffees={setCoffees} /> )} />\n\n              <Route exact path=\"/coffees\" render={(props) => (\n                <CoffeesView {...props}\n                  coffees={coffees} setReload={setReload} /> )} />\n              \n              <Route exact path=\"/payment\" render={(props) => (\n                <StripeForm {...props}\n                  loggedInUser={loggedInUser} /> )} />\n              \n              <Route exact path=\"/payment/success\" render={(props) => (\n                <PaymentSuccessView {...props}\n                  loggedInUser={loggedInUser} /> )} />\n              \n              <Route exact path=\"/payment/cancel\" render={(props) => (\n                <PaymentCancelView {...props}\n                  loggedInUser={loggedInUser} /> )} />\n\n              <Route exact path=\"/logout\">\n                <Redirect to=\"/login\" />\n              </Route>\n            </>\n          ) : (\n            <h1>PLEASE LOG IN OR SIGN UP</h1>\n          )}\n          </>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeDashboardView.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CoffeesView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/LoginView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafesView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/RegisterView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboardView.js",["92","93","94"],"import { React, useState, useEffect } from \"react\";\nimport { Navbar, Container, Row, Col, Input, Button, NavItem, Nav, Table } from \"reactstrap\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport NewCafeForm from \"./NewCafeForm\";\nimport NewCoffeeForm from \"./NewCoffeeForm\";\n\nconst AdminDashboardView = (props) => {\n  const { reload, setReload, coffees, setCoffees, handleLogout } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const [cafes, setCafes] = useState([]);\n  const initialState = {\n    cafe_name: \"\",\n    address: \"\",\n    operating_hours: [],\n    location: [],\n  };\n  const [cafeData, setCafeData] = useState(initialState);\n  const [cafeSearchTerm, setCafeSearchTerm] = useState(\"\");\n  const [coffeeSearchTerm, setCoffeeSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    getAllCoffees();\n    getAllCafes();\n  }, [])\n\n  const getAllCoffees = async () => {\n    const response = await axios.get(\"http://localhost:5000/coffees/\", coffees);\n    const allCoffees = await response.data;\n    await setCoffees(allCoffees);\n  };\n  const getAllCafes = async () => {\n    const response = await axios.get(\"http://localhost:5000/cafes/\", cafes);\n    const allCafes = await response.data;\n    await setCafes(allCafes);\n  };\n\n  const editCafe = (cafe) => {\n    setIsEditing(true);\n    console.log(cafe)\n    setCafeData(cafe);\n  };\n\n\n  const deleteCafe = (id) => {\n    axios\n      .delete(`http://localhost:5000/cafes/${id}`, cafes)\n      .then((res) => setCafes(cafes.filter(cafe => cafe._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  const handleCafeSearchTermChange = (e) => {\n    setCafeSearchTerm(e.target.value);\n  };\n  const handleCoffeeSearchTermChange = (e) => {\n    setCoffeeSearchTerm(e.target.value);\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar color=\"light\" light>\n          <Link to=\"/\">\n            <img src=\"logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\n          </Link>\n          <div>\n            <h1>COFFIENDS</h1>\n          </div>\n          <Nav>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/cafes/new\">Add Cafe</Link>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/coffees/new\">Add Coffee</Link>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/logout\"><Button onClick={handleLogout}>Log Out</Button></Link>\n            </NavItem>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <Route exact path=\"/cafes/new\" render={(props) => (\n              <NewCafeForm {...props} cafes={cafes} cafeData={cafeData} setCafeData={setCafeData} setCafes={setCafes} isEditing={isEditing} setIsEditing={setIsEditing} editCafe={editCafe} />\n            )}\n          />\n          <Route exact path=\"/coffees/new\" render={(props) => (<NewCoffeeForm {...props} />)}\n          />\n        </Switch>\n        <Container>\n          <Row className=\"justify-content-center margin-add-top\">\n            <h1>Admin Dashboard</h1>\n          </Row>\n          <Row>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Cafes</h3>\n              <Input placeholder=\"Search\" value={cafeSearchTerm} onChange={handleCafeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cafes\n                    .filter((c) =>\n                      c.cafe_name\n                        .trim()\n                        .toLowerCase()\n                        .includes(cafeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((cafe) => (\n                      <tr key={cafe._id}>\n                        <td>{cafe.cafe_name}</td>\n                        <td>\n                          <Link to='/cafes/new'><Button onClick={() => editCafe(cafe)}>Edit</Button></Link>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCafe(cafe._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Coffees</h3>\n              <Input placeholder=\"Search\" value={coffeeSearchTerm} onChange={handleCoffeeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {coffees\n                    .filter((c) =>\n                      c.name\n                        .trim()\n                        .toLowerCase()\n                        .includes(coffeeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((coffee) => (\n                      <tr key={coffee._id}>\n                        <td>{coffee.name}</td>\n                        <td>\n                          <Button>Edit</Button>\n                        </td>\n                        <td>\n                          <Button>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default AdminDashboardView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/MapView.jsx",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport NewOrderForm from \"./NewOrderForm\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { userCoffee, setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    getCafeData();\n  }, []);\n\n  const getCafeData = async () => {\n    // const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: userCoffee.id,\n    };\n\n    const response = await axios.post(\"http://localhost:5000/map/\", postBody);\n    const searchResults = await response.data;\n    setCafesData(searchResults);\n  };\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee === coffee.id) {\n        setUserCoffee({ ...userCoffee, price: menuitem.price });\n      }\n    });\n    setCafe(cafe);\n  }\n\n  // const showPanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Hide-Order\");\n  //   orderElement.classList.add(\"Show-Order\");\n  // };\n\n  // const hidePanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Show-Order\");\n  //   orderElement.classList.add(\"Hide-Order\");\n  // };\n\n  return (\n    <>\n      {/* <Container>\n          <div className=\"Hide-Order\" id=\"orderPanel\" >\n            <button onClick={hidePanel}>Close</button>\n            <NewOrderForm coffee={coffee} cafe={cafe}  />\n          </div>\n      </Container> */}\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafesData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{userCoffee.name}</p>\n              {cafe.menu.map(\n                (item) =>\n                  item.coffee === userCoffee.id ? (\n                    <Link\n                      to=\"/orders/new\"\n                      onClick={() => handleClick(cafe, userCoffee)}\n                    >\n                      ${item.price.toFixed(2)} - BUY NOW\n                    </Link>\n                  ) : (\n                    <></>\n                  )\n                // item.coffee === coffee.id ? <Link to=\"/orders/new\" onClick={() => showPanel}>${item.price.toFixed(2)} - BUY NOW</Link> : <></>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeMenuView.jsx",["99","100","101"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser, coffees } = props;\n  const [ menu, setMenu ] = useState([]);\n  const [ newCoffee, setNewCoffee ] = useState(\"\");\n  const [ newPrice, setNewPrice ] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`)\n      .then((res) => setMenu(res.data))\n      .catch((err) => console.log(err));    \n  }, []);\n\n  const handleCoffeeSelect = (e) => {\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    setNewPrice(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInUser.cafe._id\n    };\n\n    let response = await axios.post(\"http://localhost:5000/menuitems\", newMenuItem);\n    const newItem = await response.data;\n\n    let cafeMenu = await loggedInUser.cafe.menu\n    cafeMenu.push(newItem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: cafeMenu });\n    const newMenuThing = await response.data;\n\n    setNewCoffee(\"\");\n    setNewPrice(\"\");\n  };\n\n  const handleDelete = async (menuitem) => {\n    let response = await axios.delete(`http://localhost:5000/menuitems/${menuitem._id}`);\n    const delResp = await response.data;\n\n    let updatedCafeMenu = loggedInUser.cafe.menu.filter((id) => id !== menuitem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: updatedCafeMenu });\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n  };\n\n  return (\n    <>\n      {(loggedInUser && menu) ? (\n        <>\n          <h2>{loggedInUser.cafe.cafe_name}</h2>\n          <Link to=\"/dashboard\"><button>BACK</button></Link>\n          <div className=\"mt-4\">\n            <Row>\n              <Col>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Coffee</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {menu ? (menu.map((item) => (\n                      <tr key={item._id}>\n                        <td>{item.coffee.name}</td>\n                        <td>{item.coffee.description}</td>\n                        <td>${item.price.toFixed(2)}</td>\n                        <td>\n                          <button onClick={() => handleDelete(item)} >Delete</button>\n                        </td>\n                      </tr>\n                    ))) : <></>}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <h4>Add Coffee To Menu</h4>\n          <br />\n          <form onSubmit={handleSubmit}>\n            <div>\n              <select onChange={handleCoffeeSelect} value={newCoffee.name} >\n              <option disabled selected value> -- select coffee -- </option>\n                {coffees.map((coffee) => \n                  <option key={coffee._id} value={coffee._id}>{coffee.name}</option>\n                )}\n              </select>\n            </div>\n            <br />\n            <div>\n              <input type=\"Number\" placeholder=\"Price (eg 3.5)\" onChange={handlePrice} value={newPrice} />\n            </div>\n            <br />\n            <div>\n              <button>Add</button>\n            </div>\n          </form>\n        </>\n      ) : <h3>fetching data...</h3>}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/HomeView.jsx",["102","103","104","105"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport logo from \"../assets/Logo.png\";\nimport coffeeImg from \"../assets/coffee.svg\";\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee } = props;\n\n  useEffect(() => {\n    getAllCoffees();\n  }, []);\n\n  const getAllCoffees = async () => {\n    const response = await axios.get(\"http://localhost:5000/coffees/\", coffees);\n    const allCoffees = await response.data;\n    await setCoffees(allCoffees);\n  };\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n      {/* <Container style={{ padding: \"0\", margin: \"0\" }} fluid=\"true\">\n        <Row className=\"align-items-center\">\n          <Col sm={{ size: 4 }} xs={{ size: 4 }}>\n            <a href=\"/\">\n              <img src={logo} alt=\"Logo\" style={{ height: \"125px\" }}></img>\n            </a>\n          </Col>\n\n          <Col\n            sm={{ size: 4 }}\n            xs={{ size: 4 }}\n            className=\"justify-content-center text-center\"\n          >\n            <input\n              type=\"search\"\n              id=\"\"\n              name=\"\"\n              placeholder=\"Search Coffee?\"\n            ></input>\n          </Col>\n\n          <Col sm={{ size: 4 }} xs={{ size: 3 }} style={{ textAlign: \"end\" }}>\n            <Link to=\"/login\">\n              <Button color=\"primary\" size=\"sm\" style={{ margin: \"10px\" }}>\n                Log In\n              </Button>\n            </Link>\n            <Link to=\"/register\">\n              <Button color=\"primary\" size=\"sm\">\n                Sign Up\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container> */}\n\n      <Container style={{ marginTop: \"40px\" }}>\n        <Row className=\"justify-content-center\" style={{ height: \"100px\" }}>\n          <div>\n            <h1>Coffiends</h1>\n          </div>\n        </Row>\n\n        <Row\n          className=\"justify-content-center\"\n          style={{\n            height: \"150px\",\n            border: \"2px solid black\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div>\n            click your favourite brew below to find cafes near you!\n          </div>\n        </Row>\n      </Container>\n\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            {coffees.map((coffee) => (\n              <CardDeck style={{ margin: \"50px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                  <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                    {coffee.description}\n                  </CardSubtitle>\n                    {/* <p\n                      key={coffee._id}\n                      onClick={() => addUserCoffee(coffee.name, coffee._id)}\n                    > */}\n                      {/* {coffee.name} -{\" \"} */}\n                      <Link to=\"/map\" onClick={() => addUserCoffee(coffee._id, coffee.name)}>\n                        <Button color=\"primary\" size=\"sm\">\n                          SEARCH\n                        </Button>\n                      </Link>\n                    {/* </p> */}\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n\n      {/* <div>\n        <CardDeck style={{margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <CardDeck style={{ margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div> */}\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrdersView.jsx",["106","107","108","109","110","111","112"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\nimport { Container, Row, Col, Input, Button, Form, Table } from 'reactstrap';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { BsDashSquareFill } from 'react-icons/bs';\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n\n  useEffect(() => {\n    getOrders(\"active\");\n  }, []);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const userOrders = response.data;\n    pastOrders ? setPastOrders(userOrders) : setOrders(userOrders);\n  };\n\n  const retrieveCafeOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders/past`;\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center\">  \n          <h1>Current Orders</h1>\n          <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} setOrders={setOrders} loggedInUser={loggedInUser} />\n        </Row>\n        <Row className=\"justify-content-center \">\n\n            <h1 className=\"justify-content-center Cafe-Header-Margin\">Past Orders</h1>\n              <div className=\"Cafe-Dashboard-Expand Cafe-Header-Margin\" >\n                <BsFillPlusSquareFill onClick={() => getPastOrders(true)} />\n          </div>\n        </Row>\n        <Row id=\"Past-Orders\">\n          {showPastOrders ? (\n              <div>\n                <OrderTable orders={pastOrders} />\n              </div>\n            ) : (<></>)}\n        </Row>\n       \n      </Container>\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewOrderForm.jsx",["113"],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewCoffeeForm.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewCafeForm.js",["114","115","116"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  username: \"\",\n  password: \"\",\n  user_name: \"\",\n  role: \"user\",\n  phone: \"\"\n};\n\nconst NewCafeForm = (props) => {\n  const { setCafeData, cafeData, initialState, isEditing, setIsEditing, cafes, setCafes, editCafe } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n\n  useEffect(() => {\n    console.log(isEditing)\n    if (isEditing) {\n      axios.get(`http://localhost:5000/users/${cafeData.owner}`).then((res) => {\n        console.log('***', res.data)\n        setUserData(res.data);\n      });\n    }\n  }, []);\n\n  const addCafe = (newCafe) => {\n    console.log(cafes)\n    setCafes([...cafes, newCafe]);\n  };\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id == cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    setCafeData({ ...cafeData, [e.target.name]: e.target.value });\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(`http://localhost:5000/cafes/${cafeData._id}`, cafeData)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n    setIsEditing(false);\n  };\n\n  const updateExistingUser = () => {\n    axios\n      .patch(`http://localhost:5000/users/${userData._id}`, userData)\n      .then((res) => console.log(res.data));\n  };\n\n  const saveNewCafe = async () => {\n    let response = await axios.post(\"http://localhost:5000/users/register\", userData)\n    const cafeId = await response.data._id;\n    const newCafeData = {...cafeData, owner: cafeId};\n    response = await axios.post(\"http://localhost:5000/cafes\", newCafeData)\n    setCafeData(response.data);\n    addCafe(newCafeData);\n  };\n  const cancelEditing = () => {\n    setIsEditing(false);\n    setCafeData(initialState);\n    setUserData(initialUserState);\n    props.history.push('/admin');\n  };\n\n  const handleFinalSubmit = (e) => {\n    e.preventDefault();\n    // console.log(userData);\n    // if (cafeData.cafe_name && cafeData.address) { // add validation that all fields must be entered\n    // console.log(cafeData);\n    if (isEditing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewCafe();\n    }\n    props.history.push('/admin');\n    // setCafeData(initialState);\n    // setUserData(initialUserState);\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Email:</Label>\n              <Input\n                name=\"username\"\n                value={userData.username}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                name=\"operating_hours[0]\"\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                name=\"operating_hours[1]\"\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                name=\"location[0]\"\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                name=\"location[1]\"\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrderTable.jsx",["117","118"],"import { Link } from \"react-router-dom\";\nimport { Row,Table, Container, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst OrderTable = (props) => {\n  const { orders, getOrders, getPastOrders, loggedInUser, setOrders } = props;\n\n  const completeOrder = (id) => {\n    axios\n      .put(`http://localhost:5000/orders/${id}`)\n      .then((res) => {\n        console.log(res.data);\n        getOrders(\"active\");\n        getPastOrders(false);\n      })\n  };\n\n  return (\n    <>\n   <Container> \n    <Row className=\"justify-content-center margin-add-top\">\n    </Row>\n        <Row>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Cafe</th>\n                  <th>User</th>\n                  <th>Order Date</th>\n                  <th>Active?</th>\n                  <th>Coffee</th>\n                  <th>Size</th>\n                  <th>Milk</th>\n                  <th>Sugar</th>\n                  <th>Pickup Time</th>\n                  <th>Total</th>\n                  <th>COMPLETE</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders ? (orders.map((order) => (\n                  <tr key={order._id}>\n                    <th>{order.cafe.cafe_name}</th>\n                    <td>{order.user.user_name}</td>\n                    <td>{new Date(order.order_date).toLocaleString(\"en-Au\", {timeZone: \"Australia/Brisbane\"})}</td>\n                    <td>{String(order.active)}</td>\n                    <td>{order.coffee}</td>\n                    <td>{order.size}</td>\n                    <td>{order.milk}</td>\n                    <td>{order.sugar}</td>\n                    <td>{order.pickup_time}</td>\n                    <td>${order.total.toFixed(2)}</td>\n                    {(order.active && loggedInUser.role === \"cafe\") ? (\n                      <td>\n                         <Button onClick={() => completeOrder(order._id)}>Complete</Button>\n                      </td>\n                    ) : (<></>)\n                    }\n                  </tr>\n                ))) : <></>}\n              </tbody>\n            </Table>\n        </Row>\n    </Container>\n    </>\n  );\n};\n\nexport default OrderTable;","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/StripeForm.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/PaymentCancelView.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/PaymentSuccessView.jsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"123","severity":1,"message":"127","line":24,"column":25,"nodeType":"125","messageId":"126","endLine":24,"endColumn":40},{"ruleId":"128","severity":1,"message":"129","line":66,"column":22,"nodeType":"130","messageId":"131","endLine":66,"endColumn":24},{"ruleId":"123","severity":1,"message":"132","line":10,"column":11,"nodeType":"125","messageId":"126","endLine":10,"endColumn":17},{"ruleId":"123","severity":1,"message":"133","line":10,"column":19,"nodeType":"125","messageId":"126","endLine":10,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":8,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"138","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":19},{"ruleId":"123","severity":1,"message":"139","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":20},{"ruleId":"134","severity":1,"message":"140","line":17,"column":6,"nodeType":"136","endLine":17,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":34,"column":30,"nodeType":"144","messageId":"145","endLine":34,"endColumn":32},{"ruleId":"134","severity":1,"message":"146","line":17,"column":6,"nodeType":"136","endLine":17,"endColumn":8,"suggestions":"147"},{"ruleId":"123","severity":1,"message":"148","line":43,"column":11,"nodeType":"125","messageId":"126","endLine":43,"endColumn":23},{"ruleId":"123","severity":1,"message":"149","line":51,"column":11,"nodeType":"125","messageId":"126","endLine":51,"endColumn":18},{"ruleId":"123","severity":1,"message":"150","line":7,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":6},{"ruleId":"123","severity":1,"message":"151","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":11},{"ruleId":"123","severity":1,"message":"152","line":17,"column":8,"nodeType":"125","messageId":"126","endLine":17,"endColumn":12},{"ruleId":"134","severity":1,"message":"153","line":25,"column":6,"nodeType":"136","endLine":25,"endColumn":8,"suggestions":"154"},{"ruleId":"123","severity":1,"message":"150","line":4,"column":26,"nodeType":"125","messageId":"126","endLine":4,"endColumn":29},{"ruleId":"123","severity":1,"message":"155","line":4,"column":31,"nodeType":"125","messageId":"126","endLine":4,"endColumn":36},{"ruleId":"123","severity":1,"message":"156","line":4,"column":38,"nodeType":"125","messageId":"126","endLine":4,"endColumn":44},{"ruleId":"123","severity":1,"message":"157","line":4,"column":46,"nodeType":"125","messageId":"126","endLine":4,"endColumn":50},{"ruleId":"123","severity":1,"message":"158","line":4,"column":52,"nodeType":"125","messageId":"126","endLine":4,"endColumn":57},{"ruleId":"123","severity":1,"message":"159","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":26},{"ruleId":"134","severity":1,"message":"160","line":17,"column":6,"nodeType":"136","endLine":17,"endColumn":8,"suggestions":"161"},{"ruleId":"134","severity":1,"message":"162","line":44,"column":6,"nodeType":"136","endLine":44,"endColumn":8,"suggestions":"163"},{"ruleId":"123","severity":1,"message":"164","line":14,"column":90,"nodeType":"125","messageId":"126","endLine":14,"endColumn":98},{"ruleId":"134","severity":1,"message":"165","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":8,"suggestions":"166"},{"ruleId":"128","severity":1,"message":"129","line":34,"column":44,"nodeType":"130","messageId":"131","endLine":34,"endColumn":46},{"ruleId":"123","severity":1,"message":"167","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":14},{"ruleId":"123","severity":1,"message":"168","line":7,"column":59,"nodeType":"125","messageId":"126","endLine":7,"endColumn":68},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'CafesView' is defined but never used.","Identifier","unusedVar","'setUserLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.","ArrayExpression",["171"],"'Container' is defined but never used.","'NewOrderForm' is defined but never used.","React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.",["172"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'loggedInUser.cafe._id'. Either include it or remove the dependency array.",["173"],"'newMenuThing' is assigned a value but never used.","'delResp' is assigned a value but never used.","'Col' is defined but never used.","'CardText' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCoffees'. Either include it or remove the dependency array.",["174"],"'Input' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'BsDashSquareFill' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'milk', 'orderDetails', and 'userCoffee.name'. Either include them or remove the dependency array. You can also do a functional update 'setOrderDetails(o => ...)' if you only need 'orderDetails' in the 'setOrderDetails' call.",["176"],"'editCafe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cafeData.owner' and 'isEditing'. Either include them or remove the dependency array.",["177"],"'Link' is defined but never used.","'setOrders' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"192","text":"193"},"Update the dependencies array to be: [getCafeData]",{"range":"194","text":"195"},"Update the dependencies array to be: [loggedInUser.cafe._id]",{"range":"196","text":"197"},"Update the dependencies array to be: [getAllCoffees]",{"range":"198","text":"199"},"Update the dependencies array to be: [getOrders]",{"range":"200","text":"201"},"Update the dependencies array to be: [milk, orderDetails, userCoffee.name]",{"range":"202","text":"203"},"Update the dependencies array to be: [cafeData.owner, isEditing]",{"range":"204","text":"205"},[898,900],"[getAllCafes, getAllCoffees]",[592,594],"[getCafeData]",[574,576],"[loggedInUser.cafe._id]",[480,482],"[getAllCoffees]",[579,581],"[getOrders]",[1422,1424],"[milk, orderDetails, userCoffee.name]",[710,712],"[cafeData.owner, isEditing]"]