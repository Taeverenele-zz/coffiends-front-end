[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/Home.js":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderView.jsx":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/EditCafeForm.js":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js":"12","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js":"13"},{"size":193,"mtime":1611455818411,"results":"14","hashOfConfig":"15"},{"size":4265,"mtime":1611793428162,"results":"16","hashOfConfig":"15"},{"size":4599,"mtime":1611725638206,"results":"17","hashOfConfig":"15"},{"size":1555,"mtime":1611725638206,"results":"18","hashOfConfig":"15"},{"size":2415,"mtime":1611801057204,"results":"19","hashOfConfig":"15"},{"size":1912,"mtime":1611721219127,"results":"20","hashOfConfig":"15"},{"size":1137,"mtime":1611789119082,"results":"21","hashOfConfig":"15"},{"size":587,"mtime":1611700657552,"results":"22","hashOfConfig":"15"},{"size":5515,"mtime":1611725638207,"results":"23","hashOfConfig":"15"},{"size":4114,"mtime":1611700657552,"results":"24","hashOfConfig":"15"},{"size":2051,"mtime":1611801055738,"results":"25","hashOfConfig":"15"},{"size":5649,"mtime":1611801084160,"results":"26","hashOfConfig":"15"},{"size":1768,"mtime":1611531725913,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cp2oi7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["59","60"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",["61","62","63","64"],"import React, { useState, useEffect } from \"react\";\nimport CoffeesView from \"./components/CoffeesView\";\nimport CafesView from \"./components/CafesView\";\nimport axios from \"axios\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport HomeView from \"./components/HomeView\";\nimport MapView from \"./components/MapView\";\nimport OrderView from \"./components/OrderView\";\nimport LoginView from \"./components/LoginView\";\nimport RegisterView from \"./components/RegisterView\";\n\nconst App = () => {\n  const [coffees, setCoffees] = useState([]);\n  const [cafes, setCafes] = useState([]);\n  const [reload, setReload] = useState(true);\n\n  const [userCoffee, setUserCoffee] = useState(\"\");\n\n  const [coffee, setCoffee] = useState({\n    type: \"\",\n    price: 0,\n  });\n\n  const [userLocation, setUserLocation] = useState([-27.468298, 153.0247838]);\n  const [cafe, setCafe] = useState(\"\");\n\n  //COFFEES\n  const updateCoffeeArray = (eachEntry) => {\n    setCoffees([...coffees, eachEntry]);\n  };\n\n  const deleteCoffee = (id) => {\n    axios\n      .delete(`http://localhost:5000/coffees/${id}`, coffees)\n      .then((res) => console.log(res))\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    if (reload === true) {\n      axios\n        .get(\"http://localhost:5000/coffees/\", coffees)\n        .then((res) => {\n          setCoffees(res.data);\n          setReload(false);\n        })\n        .catch((error) => console.log(error));\n      axios\n        .get(\"http://localhost:5000/cafes/\", cafes)\n        .then((res) => {\n          setCafes(res.data);\n          setReload(false);\n        })\n        .catch((error) => console.log(error));\n    }\n    // navigator.geolocation.getCurrentPosition(\n    //   position => setUserLocation([position.coords.latitude, position.coords.longitude]),\n    //   error => console.log(error.message)\n    // )\n  }, [reload, cafes, coffees]);\n\n  // CAFES\n  const addCafe = (newCafe) => {\n    setCafes([...cafes, newCafe]);\n  };\n\n  const deleteCafe = (id) => {\n    axios\n      .delete(`http://localhost:5000/cafes/${id}`, cafes)\n      .then((res) => console.log(res))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <BrowserRouter>\n        <header>\n          <nav>\n            <span>\n              <h3>COFFIENDS</h3>\n            </span>\n            <Link to=\"/\">HOME</Link> |<Link to=\"/coffees\"> COFFEES</Link> |{\" \"}\n            <Link to=\"/cafes\"> CAFES</Link>\n          </nav>\n        </header>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <HomeView {...props} coffees={coffees} setCoffee={setCoffee} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/coffees\"\n            render={(props) => (\n              <CoffeesView\n                {...props}\n                coffees={coffees}\n                setReload={setReload}\n                deleteCoffee={deleteCoffee}\n                updateCoffeeArray={updateCoffeeArray}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/cafes\"\n            render={(props) => (\n              <CafesView\n                {...props}\n                cafes={cafes}\n                setCafes={setCafes}\n                setReload={setReload}\n                deleteCafe={deleteCafe}\n                addCafe={addCafe}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/map\"\n            render={(props) => (\n              <MapView\n                {...props}\n                coffee={coffee}\n                userLocation={userLocation}\n                setCafe={setCafe}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/order\"\n            render={(props) => (\n              <OrderView {...props} coffee={coffee} cafe={cafe} />\n            )}\n          />\n          <Route exact path=\"/login\" render={() => <LoginView></LoginView>} />\n          <Route\n            exact\n            path=\"/register\"\n            render={() => <RegisterView></RegisterView>}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/Home.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js",["65"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js",["66","67"],"import React from \"react\"\nimport { Button, Form, FormGroup, Label, Input,Container, Row, Col } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst RegisterView = (props) => { \n\n    return (\n<Container>\n\n        <Row className=\"justify-content-center margin-add-top\">\n            <h1>Register</h1>\n        </Row>\n\n    <Row className=\"justify-content-center\">\n        <Form>\n            <Row>\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin \">\n                <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email:</Label>\n                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email:\" />\n            </FormGroup>\n            </Row>\n            <Row>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin\">\n                    <Label for=\"examplePassword\" className=\"mr-sm-2\">Password:</Label>\n                    <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password:\" />\n                </FormGroup>\n            </Row>\n            <Row>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin\">\n                    <Label for=\"exampleName\" className=\"mr-sm-2\">Name:</Label>\n                    <Input type=\"name\" name=\"name\" id=\"exampleName\" placeholder=\"Name:\" />\n                </FormGroup>\n            </Row>\n            <Row>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0 login-form-margin\">\n                    <Label for=\"exampleNumber\" className=\"mr-sm-2\">Number:</Label>\n                    <Input type=\"mobileNumber\" name=\"number\" id=\"numberExample\" placeholder=\"Number:\" />\n                </FormGroup>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Button className=\"login-form-margin-top\">Register</Button>\n            </Row>\n        </Form>\n    </Row>\n\n</Container>\n\n\n    )\n\n}\n\nexport default RegisterView;","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx",["68","69"],"import \"../App.css\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport * as cafeData from \"../data/cafes.json\";\nimport { useState } from 'react';\nimport {Motion, spring} from \"react-motion\"\nimport {Container, Row} from 'reactstrap'\n\nfunction MapView(props) {\n    const { coffee, userLocation, setCafe } = props;\n    const [show, setShow] = useState(false)\n    const [dropdownOpen, setOpen] = useState(false);\n    const toggle = () => setOpen(!dropdownOpen);\n\n    function handleClick(cafe) {\n        setCafe(cafe);\n    };\n\n    return (\n        <>\n\n\n        <Motion defaultStyle={{x: 2000, opacity: 0}}\n         style={{x: spring(show ? 0 : 2000), opacity: spring(show ? 1 : 0)}}>\n\n        {(style) => (\n            <Container>\n            <div className=\"Order-Panel\" style={{transform: `translateX(${style.x}px)` , opacity: style.opacity ,}} >\n                    <Row className=\"justify-content-center\">\n                     <h1>Coffee</h1> \n                    </Row>\n                    <Row className=\"justify-content-center\">\n                     <h1>Order</h1> \n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        _____________________________________\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <h2>Cafe Name</h2>\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <input value=\"Coffee State\" readonly></input>\n                    </Row>\n                    <Row className=\"justify-content-center Order-Panel-margin \" >\n                        <select name=\"milk\" id=\"milk\">\n                        <option value=\"\" disabled selected>Milk:</option>\n                        <option value=\"skim\">Skim</option>\n                        <option value=\"light\">Light</option>\n                        <option value=\"2 %\">2 %</option>\n                        <option value=\"almond\">almond</option>\n                        </select>\n                    </Row>\n\n                    <Row className=\"justify-content-center Order-Panel-margin \" >\n                        <select name=\"sugar\" id=\"sugar\">\n                        <option value=\"\" disabled selected>Sugars:</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        </select>\n                    </Row>\n                    <Row className=\"justify-content-center Order-Panel-margin \" >\n                        <select name=\"size\" id=\"size\">\n                        <option value=\"\" disabled selected>Size:</option>\n                        <option value=\"small\">Small</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"large\">Large</option>\n                        <option value=\"big\">Need BIG coffee</option>\n                        </select>\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        _____________________________________\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <h2>Order Time</h2>\n                    </Row>\n                    <Row className=\"justify-content-center Order-Panel-margin \" >\n                        <select name=\"time\" id=\"time\">\n                        <option value=\"\" disabled selected>Order Time:</option>\n                        <option value=\"asap\">ASAP</option>\n                        <option value=\"10mins\">10mins</option>\n                        <option value=\"20mins\">20mins</option>\n                        <option value=\"30mins\">30mins</option>\n                        </select>\n                    </Row>\n                    {/* {console.log(show)} */}\n                    <Row className=\"justify-content-center\" Order-Panel-margin>\n                    <button onClick={() => setShow(false)} className=\"Order-Panel-margin\">Cancel </button>\n                    <button className=\"Order-Panel-margin\">Pay </button>\n                    </Row>\n            </div>\n            </Container>\n        )}\n        </Motion>\n           \n        <MapContainer\n            center={userLocation}\n            zoom={16}\n            scrollWheelZoom={false}\n        >\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                \n            />\n                {cafeData.data.map((cafe) => (\n                    <Marker\n                        key={cafe.cafe_id}\n                        position={[cafe.location[0], cafe.location[1]]}\n                    >\n                        <Popup>\n                            <h2>{cafe.name}</h2>\n                            <p>{cafe.address}</p>\n                            <p>{coffee.type}</p>\n                            <p><b>${coffee.price}</b></p>\n                            <Link onClick={() => setShow(true)}>BUY</Link>\n                            {/* to=\"/order\" onClick={() => handleClick(cafe.name)} */}\n                        </Popup>\n                    </Marker>\n                ))}\n        </MapContainer>\n\n      \n\n        </>\n    );\n}\n\nexport default MapView;","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/EditCafeForm.js",["70","71","72"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst EditCafeForm = (props) => {\n  const {\n    currentCafe,\n    updateCafe,\n    setEditing,\n    initialUserState,\n    userData,\n    setUserData,\n    currentUser,\n  } = props;\n  const [cafe, setCafe] = useState(currentCafe);\n  const [showValidation, setShowValidation] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCafe({ ...cafe, [name]: value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!cafe.name || !cafe.address) {\n      setShowValidation(true);\n      return;\n    }\n    axios\n      .put(`http://localhost:5000/cafes/${cafe._id}`, cafe)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n    setEditing(false);\n  };\n\n  useEffect(() => {\n    setCafe(currentCafe);\n    setUserData(currentUser);\n  }, [props]);\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>Add New Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                name=\"cafe_name\"\n                value={cafe.cafe_name}\n                onChange={handleInputChange}\n              ></Input>\n              {!cafe.cafe_name && showValidation && <p>* Name is required</p>}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                name=\"user_name\"\n                value={currentUser.user_name}\n                onChange={handleInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email:</Label>\n              <Input\n                name=\"email\"\n                value={currentUser.email}\n                onChange={handleInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                name=\"password\"\n                value={currentUser.password}\n                onChange={handleInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                name=\"role\"\n                value={currentUser.role}\n                onChange={handleInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                name=\"phone\"\n                value={currentUser.phone}\n                onChange={handleInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                name=\"address\"\n                value={cafe.address}\n                onChange={handleInputChange}\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                name=\"operating_hours[0]\"\n                value={cafe.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafe.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                name=\"operating_hours[1]\"\n                value={cafe.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafe.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                name=\"location[0]\"\n                value={cafe.location[0] || \"\"}\n                onChange={(e) =>\n                  handleInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafe.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                name=\"location[1]\"\n                value={cafe.location[1] || \"\"}\n                onChange={(e) =>\n                  handleInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafe.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={() => setEditing(false)}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default EditCafeForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":18,"column":10,"nodeType":"79","messageId":"80","endLine":18,"endColumn":20},{"ruleId":"77","severity":1,"message":"82","line":18,"column":22,"nodeType":"79","messageId":"80","endLine":18,"endColumn":35},{"ruleId":"77","severity":1,"message":"83","line":25,"column":24,"nodeType":"79","messageId":"80","endLine":25,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":31,"column":37,"nodeType":"86","messageId":"87","endLine":31,"endColumn":39},{"ruleId":"77","severity":1,"message":"88","line":2,"column":64,"nodeType":"79","messageId":"80","endLine":2,"endColumn":67},{"ruleId":"77","severity":1,"message":"89","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":14,"column":11,"nodeType":"79","messageId":"80","endLine":14,"endColumn":17},{"ruleId":"77","severity":1,"message":"91","line":16,"column":14,"nodeType":"79","messageId":"80","endLine":16,"endColumn":25},{"ruleId":"77","severity":1,"message":"92","line":10,"column":5,"nodeType":"79","messageId":"80","endLine":10,"endColumn":21},{"ruleId":"77","severity":1,"message":"93","line":11,"column":5,"nodeType":"79","messageId":"80","endLine":11,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":38,"column":6,"nodeType":"96","endLine":38,"endColumn":13,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'userCoffee' is assigned a value but never used.","'setUserCoffee' is assigned a value but never used.","'setUserLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Col' is defined but never used.","'Link' is defined but never used.","'toggle' is assigned a value but never used.","'handleClick' is defined but never used.","'initialUserState' is assigned a value but never used.","'userData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentCafe', 'currentUser', and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [currentCafe, currentUser, props, setUserData]",{"range":"103","text":"104"},[982,989],"[currentCafe, currentUser, props, setUserData]"]