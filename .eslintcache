[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.js":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboardView.js":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx":"12","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx":"13","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js":"14","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js":"15","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx":"16"},{"size":193,"mtime":1611455818411,"results":"17","hashOfConfig":"18"},{"size":7747,"mtime":1612142545702,"results":"19","hashOfConfig":"18"},{"size":3554,"mtime":1612133355854,"results":"20","hashOfConfig":"18"},{"size":2309,"mtime":1611869508148,"results":"21","hashOfConfig":"18"},{"size":5558,"mtime":1612150724233,"results":"22","hashOfConfig":"18"},{"size":1429,"mtime":1612136890852,"results":"23","hashOfConfig":"18"},{"size":2898,"mtime":1612133355856,"results":"24","hashOfConfig":"18"},{"size":2991,"mtime":1612133355860,"results":"25","hashOfConfig":"18"},{"size":4583,"mtime":1612133355855,"results":"26","hashOfConfig":"18"},{"size":7643,"mtime":1612133355855,"results":"27","hashOfConfig":"18"},{"size":3342,"mtime":1612135783476,"results":"28","hashOfConfig":"18"},{"size":4540,"mtime":1612133355867,"results":"29","hashOfConfig":"18"},{"size":2828,"mtime":1612133355859,"results":"30","hashOfConfig":"18"},{"size":6990,"mtime":1612150871055,"results":"31","hashOfConfig":"18"},{"size":1768,"mtime":1611531725913,"results":"32","hashOfConfig":"18"},{"size":2109,"mtime":1612133355867,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"cp2oi7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["75","76"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",["77","78","79","80"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button } from \"reactstrap\";\nimport AdminDashBoardView from \"./components/AdminDashboardView\";\nimport CafeDashboardView from \"./components/CafeDashboardView.js\";\nimport CafeMenuView from \"./components/CafeMenuView\";\nimport CafesView from \"./components/CafesView\";\nimport CoffeesView from \"./components/CoffeesView\";\nimport HomeView from \"./components/HomeView\";\nimport LoginView from \"./components/LoginView\";\nimport MapView from \"./components/MapView\";\nimport NewOrderForm from \"./components/NewOrderForm\";\nimport OrdersView from \"./components/OrdersView\";\nimport RegisterView from \"./components/RegisterView\";\n\nconst App = () => {\n  const [reload, setReload] = useState(true);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loggedInCafe, setLoggedInCafe] = useState(null);\n  const [coffees, setCoffees] = useState([]);\n  const [userCoffee, setUserCoffee] = useState({ id: \"\", name: \"\", price: 0 });\n  const [userLocation, setUserLocation] = useState([-27.468298, 153.0247838]);\n  const [cafe, setCafe] = useState(\"\");\n\n\n  // Checks session for a logged in user\n  useEffect(() => {\n    fetch(\"http://localhost:5000/users/check\", { credentials: \"include\" })\n      .then((data) => data.json())\n      .then((json) => {\n        if (json) {\n          setLoggedInUser(json);\n        }\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   if (reload === true) {\n  //     axios\n  //       .get(\"http://localhost:5000/coffees/\", coffees)\n  //       .then((res) => {\n  //         setCoffees(res.data);\n  //         setReload(false);\n  //       })\n  //       .catch((error) => console.log(error));\n  //     axios\n  //       .get(\"http://localhost:5000/cafes/\", cafes)\n  //       .then((res) => {\n  //         setCafes(res.data);\n  //         setReload(false);\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n    // navigator.geolocation.getCurrentPosition(\n    //   position => setUserLocation([position.coords.latitude, position.coords.longitude]),\n    //   error => console.log(error.message)\n    // );\n  // }, [reload, cafes, coffees]);\n// \n  const handleLogout = () => {\n    fetch(\"http://localhost:5000/users/logout\", {\n      credentials: \"include\",\n    }).then((res) => {\n      if (res.status == 200) {\n        setLoggedInUser(false);\n      } else {\n        console.log(res);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <BrowserRouter>\n        <header>\n          <nav>\n            <Link to=\"/\">\n              <img src=\"logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\n            </Link>\n            <Link to=\"/orders\"> ORDERS</Link> |{\" \"}\n            <Link to=\"/dashboard\">CAFE DASHBOARD</Link> |{\" \"}\n            <Link to=\"/coffees\"> COFFEES</Link> |{\" \"}\n            <Link to=\"/cafes\"> CAFES</Link> | <Link to=\"/admin\">ADMIN</Link>\n            {!loggedInUser ? (\n              <>\n                <Link to=\"/login\">\n                  <Button color=\"primary\" size=\"sm\" style={{ margin: \"2px\" }}>\n                    LOG IN\n                  </Button>\n                </Link>\n                <Link to=\"/register\">\n                  <Button color=\"info\" size=\"sm\" style={{ margin: \"2px\" }}>\n                    SIGN UP\n                  </Button>\n                </Link>\n              </>\n            ) : (\n              <Link to=\"/logout\">\n                <Button\n                  color=\"dark\"\n                  size=\"sm\"\n                  style={{ margin: \"5px\" }}\n                  onClick={handleLogout}\n                >\n                  LOG OUT\n                </Button>\n              </Link>\n            )}\n          </nav>\n        </header>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <HomeView\n                {...props}\n                coffees={coffees}\n                setCoffees={setCoffees}\n                setUserCoffee={setUserCoffee}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/register\"\n            render={(props) => (\n              <RegisterView\n                {...props}\n                setLoggedInUser={setLoggedInUser}\n                loggedInUser={loggedInUser}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => (\n              <LoginView\n                {...props}\n                setLoggedInUser={setLoggedInUser}\n                setLoggedInCafe={setLoggedInCafe}\n              />\n            )}\n          />\n\n          {loggedInUser ? (\n            <>\n              <Route\n                exact\n                path=\"/map\"\n                render={(props) => (\n                  <MapView\n                    {...props}\n                    userCoffee={userCoffee}\n                    setUserCoffee={setUserCoffee}\n                    userLocation={userLocation}\n                    setCafe={setCafe}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/orders/new\"\n                render={(props) => (\n                  <NewOrderForm\n                    {...props}\n                    userCoffee={userCoffee}\n                    cafe={cafe}\n                    loggedInUser={loggedInUser}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/orders\"\n                render={(props) => (\n                  <OrdersView\n                    {...props}\n                    loggedInUser={loggedInUser}\n                    loggedInCafe={loggedInCafe}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/dashboard\"\n                render={(props) => (\n                  <CafeDashboardView\n                    {...props}\n                    loggedInUser={loggedInUser}\n                    loggedInCafe={loggedInCafe}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/menu\"\n                render={(props) => (\n                  <CafeMenuView {...props} loggedInUser={loggedInUser} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/admin\"\n                render={(props) => (\n                  <AdminDashBoardView\n                    {...props}\n                    reload={reload}\n                    setReload={setReload}\n                    coffees={coffees}\n                    setCoffees={setCoffees}\n                    handleLogout= {handleLogout}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/coffees\"\n                render={(props) => (\n                  <CoffeesView\n                    {...props}\n                    coffees={coffees}\n                    setReload={setReload}\n                    setCoffees={setCoffees}\n                  />\n                )}\n              />\n\n              {/* <Route\n                exact\n                path=\"/cafes\"\n                render={(props) => (\n                  <CafesView\n                    {...props}\n                    setReload={setReload}\n                  />\n                )}\n              /> */}\n\n              <Route exact path=\"/logout\">\n                <Redirect to=\"/login\" />\n              </Route>\n            </>\n          ) : (\n            <h1>PLEASE LOG IN OR SIGN UP</h1>\n          )}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.js",["81","82","83","84","85"],"import {React, useState} from \"react\";\nimport { Container, Row, Col, Input, Button, Form, Table } from 'reactstrap';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { BsDashSquareFill } from 'react-icons/bs';\n\nconst showOrders = () => {\n    var orderElement = document.getElementById(\"Past-Orders\");\n    orderElement.classList.remove(\"Dashboard-Hide\")\n    orderElement.classList.add(\"Dashboard-Show\");\n  }\n  \n  const hideOrders = () => {\n    var orderElement = document.getElementById(\"Past-Orders\");\n    orderElement.classList.remove(\"Dashboard-Show\")\n    orderElement.classList.add(\"Dashboard-Hide\");\n  }\n\n\n\nconst CafeDashboardView = (props) => {\n    return (\n        <Container> \n            <Row className=\"justify-content-center margin-add-top\">\n                <h1>Current Orders</h1>\n            </Row>\n            <Row className=\"margin-add-top\">\n            <Table responsive>\n      <thead>\n        <tr>\n          <th>Coffee</th>\n          <th>Milk</th>\n          <th>Sugar</th>\n          <th>Name</th>\n          <th>Phone</th>\n          <th>Time</th>\n          <th>Done</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">Flat White</th>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Long Black</th>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Espresso</th>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n          <td>Table cell</td>\n        </tr>\n      </tbody>\n    </Table>\n            </Row>\n\n\n    <Row className=\"justify-content-center margin-add-top\">\n        <h1>Past Orders</h1>\n        <BsFillPlusSquareFill onClick={showOrders} className=\"align-self-center Dashboard-Margin-Left\" / > \n    </Row>\n\n    <Row className=\"Dashboard-Hide justify-content-center\" id=\"Past-Orders\">\n\n        <BsDashSquareFill className=\"Admin-Button-Margin justify-content-center\" onClick={hideOrders} />\n\n        <Table responsive>\n        <thead>\n            <tr>\n            <th>Coffee</th>\n            <th>Milk</th>\n            <th>Sugar</th>\n            <th>Name</th>\n            <th>Phone</th>\n            <th>Time</th>\n            <th>Done</th>\n\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n            <th scope=\"row\">Flat White</th>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            </tr>\n            <tr>\n            <th scope=\"row\">Hot Chocolate</th>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            </tr>\n            <tr>\n            <th scope=\"row\">Green Tea</th>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            <td>Table cell</td>\n            </tr>\n        </tbody>\n        </Table>\n    </Row>\n\n\n\n        </Container>\n    )\n};\n\nexport default CafeDashboardView","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboardView.js",["86","87","88","89","90","91"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx",["92"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser } = props;\n  // const [ availCoffees, setAvailCoffees ] = useState([]);\n  const [ loggedInCafe, setLoggedInCafe ] = useState({});\n  const [ menu, setMenu ] = useState([]);\n  const [ coffees, setCoffees ] = useState([]);\n  const [ newCoffee, setNewCoffee ] = useState(\"\");\n  const [ newPrice, setNewPrice ] = useState(\"\");\n\n  useEffect(() => {\n    getPageData();\n    // getAvailCoffees();\n  });\n\n  const getPageData = async () => {\n    let response = await axios.get(`http://localhost:5000/cafes/user/601662ec184850a589571570`);\n    const cafeDetails = await response.data\n    setLoggedInCafe(cafeDetails);\n\n    response = await axios.get(`http://localhost:5000/cafes/${cafeDetails._id}/menu`);\n    const menuItems = await response.data;\n    setMenu(menuItems);\n\n    response = await axios.get(\"http://localhost:5000/coffees/\", coffees);\n    const allCoffees = await response.data;\n    setCoffees(allCoffees);\n  };\n\n  // getMenuItems();\n\n  // const getAvailCoffees = () => {\n  //   let coffIdArr = [];\n  //   coffees.map((coffee) => {\n  //     coffIdArr.push(coffee._id);\n  //   });\n  //   menu.map((item) => {\n  //     if (coffIdArr.includes(item.coffee._id)) {\n  //       coffIdArr = coffIdArr.filter(c => c !== item.coffee._id);\n  //     };\n  //   });\n  //   let newAvailCoffees = [];\n  //   coffees.map((coffee) => {\n  //     if (coffIdArr.includes(coffee._id)) {\n  //       newAvailCoffees.push(coffee);\n  //     };\n  //   });\n  //   setAvailCoffees(newAvailCoffees);\n  // };\n\n  const handleCoffeeSelect = (e) => {\n    // e.preventDefault();\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    // e.preventDefault();\n    setNewPrice(e.target.value);\n  };\n\n  // const addItemToCafeMenu = async () => {\n    \n  //   // getMenuItems();\n  //   // getAvailCoffees();\n  // };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInCafe._id\n    };\n\n    let response = await axios.post(\"http://localhost:5000/menuitems\", newMenuItem);\n    const newItem = await response.data;\n    console.log(newItem);\n    \n    // response = await axios.put(`http://localhost:5000/cafes/${loggedInCafe._id}/menu`, { newMenuId: newItem._id });\n    // const updatedCafe = await response.data;\n    // console.log(updatedCafe);\n\n    // setLoggedInCafe(updatedCafe);\n\n    // addItemToCafeMenu();\n    // setNewCoffee(\"\");\n    // setNewPrice(\"\");\n  };\n\n  return (\n    <>\n      {(loggedInCafe && menu) ? (\n        <>\n          <h2>{loggedInCafe.cafe_name}</h2>\n          <Link to=\"/dashboard\"><button>BACK</button></Link>\n          <div className=\"mt-4\">\n            <Row>\n              <Col>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Coffee</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {menu ? (menu.map((item) => (\n                      <tr key={item._id}>\n                        <td>{item.coffee.name}</td>\n                        <td>{item.coffee.description}</td>\n                        <td>${item.price.toFixed(2)}</td>\n                        <td>\n                          <button>Delete</button>\n                        </td>\n                      </tr>\n                    ))) : <></>}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <h4>Add Coffee To Menu</h4>\n          <br />\n          <form onSubmit={() => handleSubmit}>\n            <div>\n              <select onChange={() => handleCoffeeSelect} value={newCoffee.name} >\n              <option disabled selected value> -- select coffee -- </option>\n                {coffees.map((coffee) => \n                  <option key={coffee._id} value={coffee._id}>{coffee.name}</option>\n                )}\n              </select>\n            </div>\n            <br />\n            <div>\n              <input type=\"Number\" placeholder=\"Price (eg 3.5)\" onChange={() => handlePrice} value={newPrice} />\n            </div>\n            <br />\n            <div>\n              <button>Add</button>\n            </div>\n          </form>\n        </>\n      ) : <h3>fetching data...</h3>}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx",["93","94","95","96"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport logo from \"../assets/Logo.png\";\nimport coffeeImg from \"../assets/coffee.svg\";\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee } = props;\n\n  useEffect(() => {\n    getAllCoffees();\n  }, []);\n\n  const getAllCoffees = async () => {\n    const response = await axios.get(\"http://localhost:5000/coffees/\", coffees);\n    const allCoffees = await response.data;\n    await setCoffees(allCoffees);\n  };\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n      {/* <Container style={{ padding: \"0\", margin: \"0\" }} fluid=\"true\">\n        <Row className=\"align-items-center\">\n          <Col sm={{ size: 4 }} xs={{ size: 4 }}>\n            <a href=\"/\">\n              <img src={logo} alt=\"Logo\" style={{ height: \"125px\" }}></img>\n            </a>\n          </Col>\n\n          <Col\n            sm={{ size: 4 }}\n            xs={{ size: 4 }}\n            className=\"justify-content-center text-center\"\n          >\n            <input\n              type=\"search\"\n              id=\"\"\n              name=\"\"\n              placeholder=\"Search Coffee?\"\n            ></input>\n          </Col>\n\n          <Col sm={{ size: 4 }} xs={{ size: 3 }} style={{ textAlign: \"end\" }}>\n            <Link to=\"/login\">\n              <Button color=\"primary\" size=\"sm\" style={{ margin: \"10px\" }}>\n                Log In\n              </Button>\n            </Link>\n            <Link to=\"/register\">\n              <Button color=\"primary\" size=\"sm\">\n                Sign Up\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container> */}\n\n      <Container style={{ marginTop: \"40px\" }}>\n        <Row className=\"justify-content-center\" style={{ height: \"100px\" }}>\n          <div>\n            <h1>Coffiends</h1>\n          </div>\n        </Row>\n\n        <Row\n          className=\"justify-content-center\"\n          style={{\n            height: \"150px\",\n            border: \"2px solid black\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div>\n            click your favourite brew below to find cafes near you!\n          </div>\n        </Row>\n      </Container>\n\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            {coffees.map((coffee) => (\n              <CardDeck style={{ margin: \"50px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                  <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                    {coffee.description}\n                  </CardSubtitle>\n                    {/* <p\n                      key={coffee._id}\n                      onClick={() => addUserCoffee(coffee.name, coffee._id)}\n                    > */}\n                      {/* {coffee.name} -{\" \"} */}\n                      <Link to=\"/map\" onClick={() => addUserCoffee(coffee._id, coffee.name)}>\n                        <Button color=\"primary\" size=\"sm\">\n                          SEARCH\n                        </Button>\n                      </Link>\n                    {/* </p> */}\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n\n      {/* <div>\n        <CardDeck style={{margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <CardDeck style={{ margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div> */}\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx",["97","98","99","100"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport NewOrderForm from \"./NewOrderForm\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { userCoffee, setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    getCafeData();\n  }, []);\n\n  const getCafeData = async () => {\n    // const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: userCoffee.id,\n    };\n\n    const response = await axios.post(\"http://localhost:5000/map/\", postBody);\n    const searchResults = await response.data;\n    setCafesData(searchResults);\n  };\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee === coffee.id) {\n        setUserCoffee({ ...userCoffee, price: menuitem.price });\n      }\n    });\n    setCafe(cafe);\n  }\n\n  // const showPanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Hide-Order\");\n  //   orderElement.classList.add(\"Show-Order\");\n  // };\n\n  // const hidePanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Show-Order\");\n  //   orderElement.classList.add(\"Hide-Order\");\n  // };\n\n  return (\n    <>\n      {/* <Container>\n          <div className=\"Hide-Order\" id=\"orderPanel\" >\n            <button onClick={hidePanel}>Close</button>\n            <NewOrderForm coffee={coffee} cafe={cafe}  />\n          </div>\n      </Container> */}\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafesData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{userCoffee.name}</p>\n              {cafe.menu.map(\n                (item) =>\n                  item.coffee === userCoffee.id ? (\n                    <Link\n                      to=\"/orders/new\"\n                      onClick={() => handleClick(cafe, userCoffee)}\n                    >\n                      ${item.price.toFixed(2)} - BUY NOW\n                    </Link>\n                  ) : (\n                    <></>\n                  )\n                // item.coffee === coffee.id ? <Link to=\"/orders/new\" onClick={() => showPanel}>${item.price.toFixed(2)} - BUY NOW</Link> : <></>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx",["101"],"import { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst NewOrderForm = (props) => {\n  const { userCoffee, cafe, loggedInUser } = props;\n  const [ orderPrice, setOrderPrice ] = useState(userCoffee.price);\n  const [ size, setSize ] = useState(\"Regular\");\n  const [ milk, setMilk ] = useState(\"Regular Milk\");\n  const [ sugar, setSugar ] = useState(0);\n  const [ pickupTime, setPickupTime ] = useState(Date.now());\n  const [ orderId, setOrderId ] = useState(\"\");\n\n  useEffect(() => {\n    let time = new Date().getTime();\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setPickupTime(`${hr}:${min}`);\n    if (userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\") {\n      setMilk(\"No milk\");\n    };\n  }, []);\n\n  const handleSize = (event) => {\n    setSize(event.target.value);\n    if (event.target.value === \"Large\") {\n      setOrderPrice(userCoffee.price + 0.5);\n    } else if (event.target.value === \"Small\") {\n      setOrderPrice(userCoffee.price - 0.5);\n    } else if (event.target.value === \"Regular\") {\n      setOrderPrice(userCoffee.price);\n    };\n  };\n\n  const handleMilk = (event) => {\n    setMilk(event.target.value);\n  };\n\n  const handleSugar = (event) => {\n    setSugar(event.target.value);\n  };\n\n  const handlePickupTime = (event) => {\n    let time = new Date().getTime();\n    if (event.target.value === \"10\") {\n      time = time + 600000;\n    } else if (event.target.value === \"20\") {\n      time = time + 1200000;\n    } else if (event.target.value === \"30\") {\n      time = time + 1800000;\n    };\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setPickupTime(`${hr}:${min}`);\n  };\n  \n    const createOrder = async () => {\n      const order = {\n        cafe: cafe._id,\n        user: loggedInUser._id,\n        coffee: userCoffee.name,\n        size: size,\n        milk: milk,\n        sugar: sugar,\n        pickup_time: pickupTime,\n        total: orderPrice\n      };\n      const response = await axios.post(\"http://localhost:5000/orders\", order);\n      const newOrder = await response.data._id;\n      setOrderId(newOrder);\n    };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createOrder();\n  };\n\n  return (\n    <>\n      <button><Link to=\"/map\">Cancel</Link></button>\n      <h3>{cafe.cafe_name}</h3>\n      <h4>{userCoffee.name}</h4>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Size: </label>\n          <select value={size} onChange={handleSize}>\n            <option value=\"Regular\">Regular</option>\n            {userCoffee.name === \"Espresso\" ? (\n              <></>\n            ) : (\n              <>\n                <option value=\"Small\">Small -$0.50</option>\n                <option value=\"Large\">Large +$0.50</option>\n              </>\n            )}\n          </select>\n        </div>\n        {userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\" ? (\n          <div></div>\n        ) : (\n          <div>\n            <label>Milk:</label>\n            <select value={milk} onChange={handleMilk}>\n              <option value=\"Regular Milk\">Full Cream</option>\n              <option value=\"Skim Milk\">Skim</option>\n              <option value=\"Soy Milk\">Soy</option>\n              <option value=\"Almond Milk\">Almond</option>\n            </select>\n          </div>\n        )}\n        <div>\n          <label>Sugar:</label>\n          <select value={sugar} onChange={handleSugar}>\n            <option value=\"0\">No Sugar</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n        </div>\n        <div>\n          <label>Pickup Time:</label>\n          <select onChange={handlePickupTime}>\n            <option value=\"0\">ASAP!</option>\n            <option value=\"10\">10 mins</option>\n            <option value=\"20\">20 mins</option>\n            <option value=\"30\">30 mins</option>\n          </select>\n        </div>\n        <button>${orderPrice.toFixed(2)} - BUY NOW</button>\n      </form>\n      {orderId ? (\n        <Redirect to=\"/orders\" />\n      ) : (<></>)\n      }\n    </>\n  );\n};\n\nexport default NewOrderForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx",["102"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\n\nconst OrdersView = (props) => {\n  const { loggedInUser, loggedInCafe } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n  useEffect(() => {\n    getOrders(\"active\");\n  }, []);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = async (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n    const response = await axios.get(url);\n    const allOrders = await response.data;\n    pastOrders ? setPastOrders(allOrders) : setOrders(allOrders);\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const userOrders = await response.data;\n    pastOrders ? setPastOrders(userOrders) : setOrders(userOrders);\n  };\n\n  const retrieveCafeOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInCafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInCafe._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const cafeOrders = await response.data;\n    pastOrders ? setPastOrders(cafeOrders) : setOrders(cafeOrders);\n  };\n\n  return (\n    <>\n      <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} loggedInUser={loggedInUser} />\n      <button onClick={() => getPastOrders(true)}>Show Recent Completed Orders</button>\n      {showPastOrders ? (\n        <div>\n          <h4>RECENT COMPLETED ORDERS</h4>\n          <OrderTable orders={pastOrders} />\n        </div>\n      ) : (<></>)}\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js",["103","104"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx",["105"],"import { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst OrderTable = (props) => {\n  const { orders, getOrders, getPastOrders, loggedInUser } = props;\n\n  const completeOrder = async (id) => {\n    const response = await axios.put(`http://localhost:5000/orders/${id}`);\n    const completedOrder = await response.data;\n    await getOrders();\n    await getPastOrders(false);\n  };\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <Row>\n          <Col>\n            <Table hover>\n              <thead>\n                <tr>\n                  <th>Cafe</th>\n                  <th>User</th>\n                  <th>Order Date</th>\n                  <th>Active?</th>\n                  <th>Coffee</th>\n                  <th>Size</th>\n                  <th>Milk</th>\n                  <th>Sugar</th>\n                  <th>Pickup Time</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders ? (orders.map((order) => (\n                  <tr key={order._id}>\n                    <td>{order.cafe.cafe_name}</td>\n                    {/* <td>{order.user.user_name}</td> */}\n                    <td>{new Date(order.order_date).toLocaleString(\"en-Au\", {timeZone: \"Australia/Brisbane\"})}</td>\n                    <td>{String(order.active)}</td>\n                    <td>{order.coffee}</td>\n                    <td>{order.size}</td>\n                    <td>{order.milk}</td>\n                    <td>{order.sugar}</td>\n                    <td>{order.pickup_time}</td>\n                    <td>${order.total.toFixed(2)}</td>\n                    {(order.active && loggedInUser.role === \"cafe\") ? (\n                      <td>\n                        <Link to=\"/dashboard\" onClick={() => completeOrder(order._id)}>COMPLETE</Link>\n                      </td>\n                    ) : (<></>)\n                    }\n                  </tr>\n                ))) : <></>}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default OrderTable;\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"114","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"110","severity":1,"message":"115","line":23,"column":24,"nodeType":"112","messageId":"113","endLine":23,"endColumn":39},{"ruleId":"116","severity":1,"message":"117","line":65,"column":22,"nodeType":"118","messageId":"119","endLine":65,"endColumn":24},{"ruleId":"110","severity":1,"message":"120","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":24},{"ruleId":"110","severity":1,"message":"121","line":2,"column":26,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"122","line":2,"column":31,"nodeType":"112","messageId":"113","endLine":2,"endColumn":36},{"ruleId":"110","severity":1,"message":"123","line":2,"column":38,"nodeType":"112","messageId":"113","endLine":2,"endColumn":44},{"ruleId":"110","severity":1,"message":"124","line":2,"column":46,"nodeType":"112","messageId":"113","endLine":2,"endColumn":50},{"ruleId":"110","severity":1,"message":"125","line":10,"column":11,"nodeType":"112","messageId":"113","endLine":10,"endColumn":17},{"ruleId":"110","severity":1,"message":"126","line":10,"column":19,"nodeType":"112","messageId":"113","endLine":10,"endColumn":28},{"ruleId":"110","severity":1,"message":"127","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":26,"column":6,"nodeType":"130","endLine":26,"endColumn":8,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"132","line":39,"column":9,"nodeType":"112","messageId":"113","endLine":39,"endColumn":17},{"ruleId":"110","severity":1,"message":"133","line":45,"column":9,"nodeType":"112","messageId":"113","endLine":45,"endColumn":19},{"ruleId":"110","severity":1,"message":"134","line":7,"column":11,"nodeType":"112","messageId":"113","endLine":7,"endColumn":23},{"ruleId":"110","severity":1,"message":"121","line":7,"column":3,"nodeType":"112","messageId":"113","endLine":7,"endColumn":6},{"ruleId":"110","severity":1,"message":"135","line":12,"column":3,"nodeType":"112","messageId":"113","endLine":12,"endColumn":11},{"ruleId":"110","severity":1,"message":"136","line":17,"column":8,"nodeType":"112","messageId":"113","endLine":17,"endColumn":12},{"ruleId":"128","severity":1,"message":"137","line":25,"column":6,"nodeType":"130","endLine":25,"endColumn":8,"suggestions":"138"},{"ruleId":"110","severity":1,"message":"139","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":19},{"ruleId":"110","severity":1,"message":"140","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":20},{"ruleId":"128","severity":1,"message":"141","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":34,"column":30,"nodeType":"145","messageId":"146","endLine":34,"endColumn":32},{"ruleId":"128","severity":1,"message":"147","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":8,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"149","line":13,"column":6,"nodeType":"130","endLine":13,"endColumn":8,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"151","line":24,"column":6,"nodeType":"130","endLine":24,"endColumn":8,"suggestions":"152"},{"ruleId":"116","severity":1,"message":"117","line":32,"column":44,"nodeType":"118","messageId":"119","endLine":32,"endColumn":46},{"ruleId":"110","severity":1,"message":"153","line":10,"column":11,"nodeType":"112","messageId":"113","endLine":10,"endColumn":25},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'CafesView' is defined but never used.","'setUserLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Col' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'isEditing' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'editCafe' is assigned a value but never used.","'deleteCafe' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","'CardText' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCoffees'. Either include it or remove the dependency array.",["157"],"'Container' is defined but never used.","'NewOrderForm' is defined but never used.","React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.",["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'userCoffee.name'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'cafeData.owner' and 'isEditing'. Either include them or remove the dependency array.",["161"],"'completedOrder' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"174","text":"175"},"Update the dependencies array to be: [getAllCoffees]",{"range":"176","text":"177"},"Update the dependencies array to be: [getCafeData]",{"range":"178","text":"179"},"Update the dependencies array to be: [userCoffee.name]",{"range":"180","text":"181"},"Update the dependencies array to be: [getOrders]",{"range":"182","text":"183"},"Update the dependencies array to be: [cafeData.owner, isEditing]",{"range":"184","text":"185"},[898,900],"[getAllCafes, getAllCoffees]",[480,482],"[getAllCoffees]",[592,594],"[getCafeData]",[962,964],"[userCoffee.name]",[408,410],"[getOrders]",[636,638],"[cafeData.owner, isEditing]"]