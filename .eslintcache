[{"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js":"1","/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js":"2","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.jsx":"3","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js":"4","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboardView.js":"5","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js":"6","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js":"7","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js":"8","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx":"9","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx":"10","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx":"11","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx":"12","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx":"13","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js":"14","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js":"15","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx":"16"},{"size":193,"mtime":1611455818411,"results":"17","hashOfConfig":"18"},{"size":5958,"mtime":1612151696413,"results":"19","hashOfConfig":"18"},{"size":370,"mtime":1612150922867,"results":"20","hashOfConfig":"18"},{"size":1429,"mtime":1612136890852,"results":"21","hashOfConfig":"18"},{"size":5750,"mtime":1612153906056,"results":"22","hashOfConfig":"18"},{"size":2309,"mtime":1611869508148,"results":"23","hashOfConfig":"18"},{"size":2991,"mtime":1612133355860,"results":"24","hashOfConfig":"18"},{"size":2672,"mtime":1612150922868,"results":"25","hashOfConfig":"18"},{"size":3342,"mtime":1612135783476,"results":"26","hashOfConfig":"18"},{"size":7643,"mtime":1612133355855,"results":"27","hashOfConfig":"18"},{"size":4540,"mtime":1612133355867,"results":"28","hashOfConfig":"18"},{"size":3728,"mtime":1612150922867,"results":"29","hashOfConfig":"18"},{"size":2824,"mtime":1612150922869,"results":"30","hashOfConfig":"18"},{"size":7049,"mtime":1612153869592,"results":"31","hashOfConfig":"18"},{"size":1768,"mtime":1611531725913,"results":"32","hashOfConfig":"18"},{"size":2101,"mtime":1612150922868,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"cp2oi7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"/Users/neletaevere/Desktop/Coffiends_test/client/src/index.js",[],["73","74"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/App.js",["75","76","77"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeDashboardView.jsx",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CoffeesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/AdminDashboardView.js",["78","79","80"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafesView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/RegisterView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/LoginView.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/MapView.jsx",["81","82","83","84"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport NewOrderForm from \"./NewOrderForm\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { userCoffee, setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    getCafeData();\n  }, []);\n\n  const getCafeData = async () => {\n    // const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: userCoffee.id,\n    };\n\n    const response = await axios.post(\"http://localhost:5000/map/\", postBody);\n    const searchResults = await response.data;\n    setCafesData(searchResults);\n  };\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee === coffee.id) {\n        setUserCoffee({ ...userCoffee, price: menuitem.price });\n      }\n    });\n    setCafe(cafe);\n  }\n\n  // const showPanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Hide-Order\");\n  //   orderElement.classList.add(\"Show-Order\");\n  // };\n\n  // const hidePanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Show-Order\");\n  //   orderElement.classList.add(\"Hide-Order\");\n  // };\n\n  return (\n    <>\n      {/* <Container>\n          <div className=\"Hide-Order\" id=\"orderPanel\" >\n            <button onClick={hidePanel}>Close</button>\n            <NewOrderForm coffee={coffee} cafe={cafe}  />\n          </div>\n      </Container> */}\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafesData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{userCoffee.name}</p>\n              {cafe.menu.map(\n                (item) =>\n                  item.coffee === userCoffee.id ? (\n                    <Link\n                      to=\"/orders/new\"\n                      onClick={() => handleClick(cafe, userCoffee)}\n                    >\n                      ${item.price.toFixed(2)} - BUY NOW\n                    </Link>\n                  ) : (\n                    <></>\n                  )\n                // item.coffee === coffee.id ? <Link to=\"/orders/new\" onClick={() => showPanel}>${item.price.toFixed(2)} - BUY NOW</Link> : <></>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/HomeView.jsx",["85","86","87","88"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport logo from \"../assets/Logo.png\";\nimport coffeeImg from \"../assets/coffee.svg\";\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee } = props;\n\n  useEffect(() => {\n    getAllCoffees();\n  }, []);\n\n  const getAllCoffees = async () => {\n    const response = await axios.get(\"http://localhost:5000/coffees/\", coffees);\n    const allCoffees = await response.data;\n    await setCoffees(allCoffees);\n  };\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n      {/* <Container style={{ padding: \"0\", margin: \"0\" }} fluid=\"true\">\n        <Row className=\"align-items-center\">\n          <Col sm={{ size: 4 }} xs={{ size: 4 }}>\n            <a href=\"/\">\n              <img src={logo} alt=\"Logo\" style={{ height: \"125px\" }}></img>\n            </a>\n          </Col>\n\n          <Col\n            sm={{ size: 4 }}\n            xs={{ size: 4 }}\n            className=\"justify-content-center text-center\"\n          >\n            <input\n              type=\"search\"\n              id=\"\"\n              name=\"\"\n              placeholder=\"Search Coffee?\"\n            ></input>\n          </Col>\n\n          <Col sm={{ size: 4 }} xs={{ size: 3 }} style={{ textAlign: \"end\" }}>\n            <Link to=\"/login\">\n              <Button color=\"primary\" size=\"sm\" style={{ margin: \"10px\" }}>\n                Log In\n              </Button>\n            </Link>\n            <Link to=\"/register\">\n              <Button color=\"primary\" size=\"sm\">\n                Sign Up\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container> */}\n\n      <Container style={{ marginTop: \"40px\" }}>\n        <Row className=\"justify-content-center\" style={{ height: \"100px\" }}>\n          <div>\n            <h1>Coffiends</h1>\n          </div>\n        </Row>\n\n        <Row\n          className=\"justify-content-center\"\n          style={{\n            height: \"150px\",\n            border: \"2px solid black\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div>\n            click your favourite brew below to find cafes near you!\n          </div>\n        </Row>\n      </Container>\n\n      <div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            {coffees.map((coffee) => (\n              <CardDeck style={{ margin: \"50px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                  <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                    {coffee.description}\n                  </CardSubtitle>\n                    {/* <p\n                      key={coffee._id}\n                      onClick={() => addUserCoffee(coffee.name, coffee._id)}\n                    > */}\n                      {/* {coffee.name} -{\" \"} */}\n                      <Link to=\"/map\" onClick={() => addUserCoffee(coffee._id, coffee.name)}>\n                        <Button color=\"primary\" size=\"sm\">\n                          SEARCH\n                        </Button>\n                      </Link>\n                    {/* </p> */}\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n\n      {/* <div>\n        <CardDeck style={{margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <CardDeck style={{ margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div> */}\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewOrderForm.jsx",["89"],"import { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst NewOrderForm = (props) => {\n  const { userCoffee, cafe, loggedInUser } = props;\n  const [ orderPrice, setOrderPrice ] = useState(userCoffee.price);\n  const [ size, setSize ] = useState(\"Regular\");\n  const [ milk, setMilk ] = useState(\"Regular Milk\");\n  const [ sugar, setSugar ] = useState(0);\n  const [ pickupTime, setPickupTime ] = useState(Date.now());\n  const [ orderId, setOrderId ] = useState(\"\");\n\n  useEffect(() => {\n    let time = new Date().getTime();\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setPickupTime(`${hr}:${min}`);\n    if (userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\") {\n      setMilk(\"No milk\");\n    };\n  }, []);\n\n  const handleSize = (event) => {\n    setSize(event.target.value);\n    if (event.target.value === \"Large\") {\n      setOrderPrice(userCoffee.price + 0.5);\n    } else if (event.target.value === \"Small\") {\n      setOrderPrice(userCoffee.price - 0.5);\n    } else if (event.target.value === \"Regular\") {\n      setOrderPrice(userCoffee.price);\n    };\n  };\n\n  const handleMilk = (event) => {\n    setMilk(event.target.value);\n  };\n\n  const handleSugar = (event) => {\n    setSugar(event.target.value);\n  };\n\n  const handlePickupTime = (event) => {\n    let time = new Date().getTime();\n    if (event.target.value === \"10\") {\n      time = time + 600000;\n    } else if (event.target.value === \"20\") {\n      time = time + 1200000;\n    } else if (event.target.value === \"30\") {\n      time = time + 1800000;\n    };\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setPickupTime(`${hr}:${min}`);\n  };\n  \n    const createOrder = async () => {\n      const order = {\n        cafe: cafe._id,\n        user: loggedInUser._id,\n        coffee: userCoffee.name,\n        size: size,\n        milk: milk,\n        sugar: sugar,\n        pickup_time: pickupTime,\n        total: orderPrice\n      };\n      const response = await axios.post(\"http://localhost:5000/orders\", order);\n      const newOrder = await response.data._id;\n      setOrderId(newOrder);\n    };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createOrder();\n  };\n\n  return (\n    <>\n      <button><Link to=\"/map\">Cancel</Link></button>\n      <h3>{cafe.cafe_name}</h3>\n      <h4>{userCoffee.name}</h4>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Size: </label>\n          <select value={size} onChange={handleSize}>\n            <option value=\"Regular\">Regular</option>\n            {userCoffee.name === \"Espresso\" ? (\n              <></>\n            ) : (\n              <>\n                <option value=\"Small\">Small -$0.50</option>\n                <option value=\"Large\">Large +$0.50</option>\n              </>\n            )}\n          </select>\n        </div>\n        {userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\" ? (\n          <div></div>\n        ) : (\n          <div>\n            <label>Milk:</label>\n            <select value={milk} onChange={handleMilk}>\n              <option value=\"Regular Milk\">Full Cream</option>\n              <option value=\"Skim Milk\">Skim</option>\n              <option value=\"Soy Milk\">Soy</option>\n              <option value=\"Almond Milk\">Almond</option>\n            </select>\n          </div>\n        )}\n        <div>\n          <label>Sugar:</label>\n          <select value={sugar} onChange={handleSugar}>\n            <option value=\"0\">No Sugar</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n        </div>\n        <div>\n          <label>Pickup Time:</label>\n          <select onChange={handlePickupTime}>\n            <option value=\"0\">ASAP!</option>\n            <option value=\"10\">10 mins</option>\n            <option value=\"20\">20 mins</option>\n            <option value=\"30\">30 mins</option>\n          </select>\n        </div>\n        <button>${orderPrice.toFixed(2)} - BUY NOW</button>\n      </form>\n      {orderId ? (\n        <Redirect to=\"/orders\" />\n      ) : (<></>)\n      }\n    </>\n  );\n};\n\nexport default NewOrderForm;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/CafeMenuView.jsx",["90","91","92"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\n\nconst CafeMenuView = (props) => {\n  const { loggedInUser, coffees } = props;\n  const [ menu, setMenu ] = useState([]);\n  const [ newCoffee, setNewCoffee ] = useState(\"\");\n  const [ newPrice, setNewPrice ] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`)\n      .then((res) => setMenu(res.data))\n      .catch((err) => console.log(err));    \n  }, []);\n\n  const handleCoffeeSelect = (e) => {\n    setNewCoffee(e.target.value);\n  };\n\n  const handlePrice = (e) => {\n    setNewPrice(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newMenuItem = {\n      coffee: newCoffee,\n      price: newPrice,\n      cafe: loggedInUser.cafe._id\n    };\n\n    let response = await axios.post(\"http://localhost:5000/menuitems\", newMenuItem);\n    const newItem = await response.data;\n\n    let cafeMenu = await loggedInUser.cafe.menu\n    cafeMenu.push(newItem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: cafeMenu });\n    const newMenuThing = await response.data;\n\n    setNewCoffee(\"\");\n    setNewPrice(\"\");\n  };\n\n  const handleDelete = async (menuitem) => {\n    let response = await axios.delete(`http://localhost:5000/menuitems/${menuitem._id}`);\n    const delResp = await response.data;\n\n    let updatedCafeMenu = loggedInUser.cafe.menu.filter((id) => id !== menuitem._id)\n\n    response = await axios.put(`http://localhost:5000/cafes/${loggedInUser.cafe._id}/menu`, { menu: updatedCafeMenu });\n    const newMenuThing = await response.data;\n    console.log(newMenuThing);\n  };\n\n  return (\n    <>\n      {(loggedInUser && menu) ? (\n        <>\n          <h2>{loggedInUser.cafe.cafe_name}</h2>\n          <Link to=\"/dashboard\"><button>BACK</button></Link>\n          <div className=\"mt-4\">\n            <Row>\n              <Col>\n                <Table hover>\n                  <thead>\n                    <tr>\n                      <th>Coffee</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {menu ? (menu.map((item) => (\n                      <tr key={item._id}>\n                        <td>{item.coffee.name}</td>\n                        <td>{item.coffee.description}</td>\n                        <td>${item.price.toFixed(2)}</td>\n                        <td>\n                          <button onClick={() => handleDelete(item)} >Delete</button>\n                        </td>\n                      </tr>\n                    ))) : <></>}\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </div>\n          <hr />\n          <h4>Add Coffee To Menu</h4>\n          <br />\n          <form onSubmit={handleSubmit}>\n            <div>\n              <select onChange={handleCoffeeSelect} value={newCoffee.name} >\n              <option disabled selected value> -- select coffee -- </option>\n                {coffees.map((coffee) => \n                  <option key={coffee._id} value={coffee._id}>{coffee.name}</option>\n                )}\n              </select>\n            </div>\n            <br />\n            <div>\n              <input type=\"Number\" placeholder=\"Price (eg 3.5)\" onChange={handlePrice} value={newPrice} />\n            </div>\n            <br />\n            <div>\n              <button>Add</button>\n            </div>\n          </form>\n        </>\n      ) : <h3>fetching data...</h3>}\n    </>\n  );\n};\n\nexport default CafeMenuView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrdersView.jsx",["93"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n  useEffect(() => {\n    getOrders(\"active\");\n  }, []);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = async (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n    const response = await axios.get(url);\n    const allOrders = await response.data;\n    pastOrders ? setPastOrders(allOrders) : setOrders(allOrders);\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const userOrders = await response.data;\n    pastOrders ? setPastOrders(userOrders) : setOrders(userOrders);\n  };\n\n  const retrieveCafeOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const cafeOrders = await response.data;\n    pastOrders ? setPastOrders(cafeOrders) : setOrders(cafeOrders);\n  };\n\n  return (\n    <>\n      <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} loggedInUser={loggedInUser} />\n      <button onClick={() => getPastOrders(true)}>Show Recent Completed Orders</button>\n      {showPastOrders ? (\n        <div>\n          <h4>RECENT COMPLETED ORDERS</h4>\n          <OrderTable orders={pastOrders} />\n        </div>\n      ) : (<></>)}\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCafeForm.js",["94","95","96"],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/NewCoffeeForm.js",[],"/Users/neletaevere/Desktop/Coffiends_test/client/src/components/OrderTable.jsx",["97"],"import { Link } from \"react-router-dom\";\nimport { Row, Col, Table } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst OrderTable = (props) => {\n  const { orders, getOrders, getPastOrders, loggedInUser } = props;\n\n  const completeOrder = async (id) => {\n    const response = await axios.put(`http://localhost:5000/orders/${id}`);\n    const completedOrder = await response.data;\n    await getOrders();\n    await getPastOrders(false);\n  };\n\n  return (\n    <>\n      <div className=\"mt-4\">\n        <Row>\n          <Col>\n            <Table hover>\n              <thead>\n                <tr>\n                  <th>Cafe</th>\n                  <th>User</th>\n                  <th>Order Date</th>\n                  <th>Active?</th>\n                  <th>Coffee</th>\n                  <th>Size</th>\n                  <th>Milk</th>\n                  <th>Sugar</th>\n                  <th>Pickup Time</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders ? (orders.map((order) => (\n                  <tr key={order._id}>\n                    <td>{order.cafe.cafe_name}</td>\n                    <td>{order.user.user_name}</td>\n                    <td>{new Date(order.order_date).toLocaleString(\"en-Au\", {timeZone: \"Australia/Brisbane\"})}</td>\n                    <td>{String(order.active)}</td>\n                    <td>{order.coffee}</td>\n                    <td>{order.size}</td>\n                    <td>{order.milk}</td>\n                    <td>{order.sugar}</td>\n                    <td>{order.pickup_time}</td>\n                    <td>${order.total.toFixed(2)}</td>\n                    {(order.active && loggedInUser.role === \"cafe\") ? (\n                      <td>\n                        <Link to=\"/dashboard\" onClick={() => completeOrder(order._id)}>COMPLETE</Link>\n                      </td>\n                    ) : (<></>)\n                    }\n                  </tr>\n                ))) : <></>}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default OrderTable;\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":17},{"ruleId":"102","severity":1,"message":"106","line":21,"column":25,"nodeType":"104","messageId":"105","endLine":21,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":63,"column":22,"nodeType":"109","messageId":"110","endLine":63,"endColumn":24},{"ruleId":"102","severity":1,"message":"111","line":10,"column":11,"nodeType":"104","messageId":"105","endLine":10,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":10,"column":19,"nodeType":"104","messageId":"105","endLine":10,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":26,"column":6,"nodeType":"115","endLine":26,"endColumn":8,"suggestions":"116"},{"ruleId":"102","severity":1,"message":"117","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"118","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":20},{"ruleId":"113","severity":1,"message":"119","line":17,"column":6,"nodeType":"115","endLine":17,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":34,"column":30,"nodeType":"123","messageId":"124","endLine":34,"endColumn":32},{"ruleId":"102","severity":1,"message":"125","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":6},{"ruleId":"102","severity":1,"message":"126","line":12,"column":3,"nodeType":"104","messageId":"105","endLine":12,"endColumn":11},{"ruleId":"102","severity":1,"message":"127","line":17,"column":8,"nodeType":"104","messageId":"105","endLine":17,"endColumn":12},{"ruleId":"113","severity":1,"message":"128","line":25,"column":6,"nodeType":"115","endLine":25,"endColumn":8,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":29,"column":6,"nodeType":"115","endLine":29,"endColumn":8,"suggestions":"131"},{"ruleId":"113","severity":1,"message":"132","line":17,"column":6,"nodeType":"115","endLine":17,"endColumn":8,"suggestions":"133"},{"ruleId":"102","severity":1,"message":"134","line":43,"column":11,"nodeType":"104","messageId":"105","endLine":43,"endColumn":23},{"ruleId":"102","severity":1,"message":"135","line":51,"column":11,"nodeType":"104","messageId":"105","endLine":51,"endColumn":18},{"ruleId":"113","severity":1,"message":"136","line":13,"column":6,"nodeType":"115","endLine":13,"endColumn":8,"suggestions":"137"},{"ruleId":"102","severity":1,"message":"138","line":14,"column":90,"nodeType":"104","messageId":"105","endLine":14,"endColumn":98},{"ruleId":"113","severity":1,"message":"139","line":26,"column":6,"nodeType":"115","endLine":26,"endColumn":8,"suggestions":"140"},{"ruleId":"107","severity":1,"message":"108","line":34,"column":44,"nodeType":"109","messageId":"110","endLine":34,"endColumn":46},{"ruleId":"102","severity":1,"message":"141","line":10,"column":11,"nodeType":"104","messageId":"105","endLine":10,"endColumn":25},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'CafesView' is defined but never used.","Identifier","unusedVar","'setUserLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.","ArrayExpression",["144"],"'Container' is defined but never used.","'NewOrderForm' is defined but never used.","React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.",["145"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Col' is defined but never used.","'CardText' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllCoffees'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has a missing dependency: 'userCoffee.name'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'loggedInUser.cafe._id'. Either include it or remove the dependency array.",["148"],"'newMenuThing' is assigned a value but never used.","'delResp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["149"],"'editCafe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cafeData.owner' and 'isEditing'. Either include them or remove the dependency array.",["150"],"'completedOrder' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"165","text":"166"},"Update the dependencies array to be: [getCafeData]",{"range":"167","text":"168"},"Update the dependencies array to be: [getAllCoffees]",{"range":"169","text":"170"},"Update the dependencies array to be: [userCoffee.name]",{"range":"171","text":"172"},"Update the dependencies array to be: [loggedInUser.cafe._id]",{"range":"173","text":"174"},"Update the dependencies array to be: [getOrders]",{"range":"175","text":"176"},"Update the dependencies array to be: [cafeData.owner, isEditing]",{"range":"177","text":"178"},[898,900],"[getAllCafes, getAllCoffees]",[592,594],"[getCafeData]",[480,482],"[getAllCoffees]",[962,964],"[userCoffee.name]",[574,576],"[loggedInUser.cafe._id]",[394,396],"[getOrders]",[710,712],"[cafeData.owner, isEditing]"]