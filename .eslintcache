[{"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/index.js":"1","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/App.js":"2","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeDashboardView.jsx":"3","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/LoginView.js":"4","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NavBar.js":"5","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/RegisterView.js":"6","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminHome.js":"7","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewOrderForm.jsx":"8","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/HomeView.jsx":"9","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrdersView.jsx":"10","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/PaymentCancelView.jsx":"11","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/MapView.jsx":"12","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeMenuView.jsx":"13","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/StripeForm.jsx":"14","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCafeForm.js":"15","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCoffeeForm.js":"16","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminLists.js":"17","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrderTable.jsx":"18"},{"size":193,"mtime":1611556931548,"results":"19","hashOfConfig":"20"},{"size":4007,"mtime":1612240903791,"results":"21","hashOfConfig":"20"},{"size":510,"mtime":1612240982958,"results":"22","hashOfConfig":"20"},{"size":2686,"mtime":1612155416876,"results":"23","hashOfConfig":"20"},{"size":2059,"mtime":1612237985138,"results":"24","hashOfConfig":"20"},{"size":2991,"mtime":1612094017858,"results":"25","hashOfConfig":"20"},{"size":4138,"mtime":1612230885187,"results":"26","hashOfConfig":"20"},{"size":4354,"mtime":1612237970667,"results":"27","hashOfConfig":"20"},{"size":6051,"mtime":1612242144578,"results":"28","hashOfConfig":"20"},{"size":3458,"mtime":1612236501791,"results":"29","hashOfConfig":"20"},{"size":107,"mtime":1612174338626,"results":"30","hashOfConfig":"20"},{"size":3342,"mtime":1612151907742,"results":"31","hashOfConfig":"20"},{"size":4684,"mtime":1612261615100,"results":"32","hashOfConfig":"20"},{"size":1154,"mtime":1612228742148,"results":"33","hashOfConfig":"20"},{"size":7575,"mtime":1612230885233,"results":"34","hashOfConfig":"20"},{"size":2902,"mtime":1612234727349,"results":"35","hashOfConfig":"20"},{"size":3724,"mtime":1612230885234,"results":"36","hashOfConfig":"20"},{"size":2180,"mtime":1612152999262,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8gaqt5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/index.js",[],["86","87"],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/App.js",["88","89"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport AdminHome from \"./components/AdminDashboard/AdminHome\";\nimport CafeDashboardView from \"./components/CafeDashboardView.jsx\";\nimport CafeMenuView from \"./components/CafeMenuView\";\nimport HomeView from \"./components/HomeView\";\nimport LoginView from \"./components/LoginView\";\nimport MapView from \"./components/MapView\";\nimport NewOrderForm from \"./components/NewOrderForm\";\nimport OrdersView from \"./components/OrdersView\";\nimport PaymentCancelView from \"./components/PaymentCancelView\";\nimport RegisterView from \"./components/RegisterView\";\nimport StripeForm from \"./components/StripeForm\";\nimport NavBar from \"./components/NavBar\";\n\nconst App = () => {\n  const [ loggedInUser, setLoggedInUser ] = useState(null);\n  const [ coffees, setCoffees ] = useState([]);\n  const [ userCoffee, setUserCoffee ] = useState({ id: \"\", name: \"\", price: 0 });\n  const [ userLocation, setUserLocation ] = useState([ -27.468298, 153.0247838 ]);\n  const [ cafe, setCafe ] = useState(\"\");\n\n  // Checks session for a logged in user\n  useEffect(() => {\n    fetch(\"http://localhost:5000/users/check\", { credentials: \"include\" })\n      .then((data) => data.json())\n      .then((json) => {\n        if (json) {\n          setLoggedInUser(json);\n        }\n      });\n  }, []);\n\n  const handleLogout = () => {\n    fetch(\"http://localhost:5000/users/logout\", {\n      credentials: \"include\",\n    }).then((res) => {\n      if (res.status == 200) {\n        setLoggedInUser(false);\n      } else {\n        console.log(res);\n      }\n    });\n  };\n\n  return (\n\n    <div className=\"container-fluid Remove-padding-margin \">\n      <BrowserRouter>\n\n      <NavBar loggedInUser={loggedInUser} handleLogout={handleLogout}> </NavBar>\n\n        <Switch>\n          <>\n            <Route exact path=\"/\" render={(props) => (\n              <HomeView {...props}\n                coffees={coffees} setCoffees={setCoffees} setUserCoffee={setUserCoffee}/> )} />\n\n            <Route exact path=\"/register\" render={(props) => (\n              <RegisterView {...props}\n                setLoggedInUser={setLoggedInUser} loggedInUser={loggedInUser}  /> )} />\n\n            <Route exact path=\"/login\" render={(props) => (\n              <LoginView {...props}\n                setLoggedInUser={setLoggedInUser} /> )} />\n\n            <Route exact path=\"/map\" render={(props) => (\n              <MapView {...props}\n                userCoffee={userCoffee} setUserCoffee={setUserCoffee} userLocation={userLocation} setCafe={setCafe} /> )} />\n\n            <Route exact path=\"/orders/new\" render={(props) => (\n              <NewOrderForm {...props}\n                userCoffee={userCoffee} cafe={cafe} loggedInUser={loggedInUser} /> )} />\n\n            <Route exact path=\"/orders\" render={(props) => (\n              <OrdersView {...props}\n                loggedInUser={loggedInUser} /> )} />\n            \n            <Route exact path=\"/dashboard\" render={(props) => (\n              <CafeDashboardView {...props} \n                loggedInUser={loggedInUser} /> )} />\n\n            <Route exact path=\"/menu\" render={(props) => (\n              <CafeMenuView {...props}\n                loggedInUser={loggedInUser} coffees={coffees} /> )} />\n            \n            <Route exact path=\"/admin\" render={(props) => (\n              <AdminHome {...props}\n                coffees={coffees} setCoffees={setCoffees} /> )} />\n            \n            <Route exact path=\"/payment\" render={(props) => (\n              <StripeForm {...props}\n                loggedInUser={loggedInUser} /> )} />\n            \n            <Route exact path=\"/payment/cancel\" render={(props) => (\n              <PaymentCancelView {...props}\n                loggedInUser={loggedInUser} /> )} />\n\n            <Route exact path=\"/logout\">\n              <Redirect to=\"/login\" />\n            </Route>\n          </>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeDashboardView.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/LoginView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NavBar.js",["90"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar,Button, NavItem, Nav } from \"reactstrap\";\n\n\nconst NavBar = (props) => {\n    \n    const {handleLogout, loggedInUser } = props\n\n    const navConditional = () => {\n        if (loggedInUser) {\n            switch (loggedInUser.role) {\n                case 'cafe':\n                  return (\n                      <>\n                         <NavItem className=\"mr-3\">\n                            <Link to=\"/dashboard\"><Button >Dashboard</Button></Link>\n                            </NavItem>\n                            <NavItem className=\"mr-3\">\n                            <Link to=\"/logout\"><Button onClick={handleLogout}>Log Out</Button></Link>\n                        </NavItem>\n                      </>\n                  )\n                case 'user':\n                  return (\n                      <>\n                        <NavItem className=\"mr-3\">\n                             <Link to=\"/logout\"><Button onClick={handleLogout}>Log Out</Button></Link>\n                        </NavItem>\n                    </>\n                  )\n                case 'admin':\n                  return (\n                    <>\n                      <NavItem className=\"mr-3\">\n                             <Link to=\"/admin\"><Button >Admin Dashboard</Button></Link>\n                      </NavItem>\n                      <NavItem className=\"mr-3\">\n                              <Link to=\"/logout\"><Button onClick={handleLogout}>Log Out</Button></Link>\n                      </NavItem>\n                  </>\n                )\n            }\n        }\n        return null\n    }\n    return (\n        <header>\n            <Navbar color=\"light\" light>\n            <Link to=\"/\">\n                <img src=\"logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\n            </Link>\n            <div>\n                <h1>COFFIENDS</h1>\n            </div>\n            <Nav>\n                {navConditional()}\n            </Nav>\n            </Navbar>\n        </header>\n    )\n}\n\n\nexport default NavBar\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/RegisterView.js",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminHome.js",["91"],"import { React, useState, useEffect } from \"react\";\nimport { Navbar, Button, NavItem, Nav } from \"reactstrap\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport NewCafeForm from \"./NewCafeForm\";\nimport NewCoffeeForm from \"./NewCoffeeForm\";\nimport AdminLists from \"./AdminLists\";\n\nconst AdminHome = (props) => {\n  const { match, coffees, setCoffees, handleLogout } = props;\n  \n  const [cafes, setCafes] = useState([]);\n  const initialCafeState = {\n    cafe_name: \"\",\n    address: \"\",\n    operating_hours: [],\n    location: [],\n  };\n  const [cafeData, setCafeData] = useState(initialCafeState);\n\n  const initialCoffeeData = {\n    name: \"\",\n    description: \"\",\n  };\n  const [coffeeData, setCoffeeData] = useState(initialCoffeeData);\n\n\n  // Add all coffees and cafes into state\n  useEffect(() => {\n    getAllCoffees();\n    getAllCafes();\n  }, [])\n  // Get all cafes from database\n  const getAllCafes = () => {\n    axios.get(\"http://localhost:5000/cafes/\", cafes)\n    .then(res => setCafes(res.data))\n    .catch(error => console.log(error));\n  };\n  \n  const deleteCafe = (id) => {\n    axios\n    .delete(`http://localhost:5000/cafes/${id}`, cafes)\n    .then((res) => setCafes(cafes.filter(cafe => cafe._id !== id)))\n    .catch(error => console.log(error));\n  };\n\n  // Get all coffees from the database\n  const getAllCoffees = () => {\n    axios.get(\"http://localhost:5000/coffees/\", coffees)\n    .then(res => setCoffees(res.data))\n    .catch(error => console.log(error))\n  };\n  const deleteCoffee = (id) => {\n    axios\n      .delete(`http://localhost:5000/coffees/${id}`, coffees)\n      .then((res) => setCoffees(coffees.filter(coffee => coffee._id !== id)))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar color=\"light\" light>\n          <Link to=\"/admin\">\n            <img src=\"logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\n          </Link>\n          <div>\n            <h1>COFFIENDS</h1>\n          </div>\n          <Nav>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/admin/new_cafe\"><Button>Add Cafe</Button></Link>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/admin/new_coffee\"><Button>Add Coffee</Button></Link>\n            </NavItem>\n            <NavItem className=\"mr-3\">\n              <Link to=\"/logout\"><Button onClick={handleLogout}>Log Out</Button></Link>\n            </NavItem>\n          </Nav>\n        </Navbar>\n        <Switch>\n          <Route exact path={match.path + '/new_cafe'} render={(props) => (\n              <NewCafeForm {...props} cafes={cafes} cafeData={cafeData} setCafeData={setCafeData} setCafes={setCafes} isEditing={false} initialCafeState={initialCafeState} />\n            )}\n          />\n          <Route exact path={match.path + '/edit_cafe'} render={(props) => (\n              <NewCafeForm {...props} cafes={cafes} cafeData={cafeData} setCafeData={setCafeData} setCafes={setCafes} isEditing={true} initialCafeState={initialCafeState} />\n            )}\n          />\n          <Route exact path=\"/admin/new_coffee\" render={(props) => (\n              <NewCoffeeForm {...props} isEditing={false} coffees={coffees} setCoffees={setCoffees} coffeeData={coffeeData} setCoffeeData={setCoffeeData} initialCoffeeData={initialCoffeeData} />\n            )}\n          />\n          <Route exact path=\"/admin/edit_coffee\" render={(props) => (\n              <NewCoffeeForm {...props} isEditing={true} coffeeData={coffeeData} setCoffeeData={setCoffeeData} initialCoffeeData={initialCoffeeData} coffees={coffees} setCoffees={setCoffees} />\n            )}\n          />\n          <Route exact path=\"/admin\" render={(props) => (\n              <AdminLists {...props} cafes={cafes} deleteCafe={deleteCafe} coffees={coffees} setCoffees={setCoffees} deleteCoffee={deleteCoffee} setCafeData={setCafeData} coffeeData={coffeeData} setCoffeeData={setCoffeeData} initialCoffeeData={initialCoffeeData} />\n            )}\n          />\n          <Redirect to=\"/admin\" />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default AdminHome;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/NewOrderForm.jsx",["92"],"import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StripeForm from \"./StripeForm\";\n\nconst NewOrderForm = (props) => {\n  const { userCoffee, cafe, loggedInUser } = props;\n  const [ size, setSize ] = useState(\"Regular\");\n  const [ milk, setMilk ] = useState(\"Regular Milk\");\n  const [ sugar, setSugar ] = useState(0);\n\n  const [ orderDetails, setOrderDetails ] = useState({\n      cafe: cafe._id,\n      user: loggedInUser._id,\n      coffee: userCoffee.name,\n      size: \"Regular\",\n      milk: \"Regular\",\n      sugar: 0,\n      pickup_time: \"\",\n      total: userCoffee.price,\n      email: loggedInUser.username,\n  });\n\n  useEffect(() => {\n    let time = new Date().getTime();\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    if (userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\") {\n      setOrderDetails({ ...orderDetails, milk: \"No milk\" })\n    };\n    setOrderDetails({ ...orderDetails, pickup_time: `${hr}:${min}` });\n  }, []);\n\n  const handleSize = (event) => {\n    setSize(event.target.value);\n    if (event.target.value === \"Large\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price + 0.5 });\n    } else if (event.target.value === \"Small\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price - 0.5 });\n    } else if (event.target.value === \"Regular\") {\n      setOrderDetails({ ...orderDetails, total: userCoffee.price });\n    };\n  };\n\n  const handleMilk = (event) => {\n    setMilk(event.target.value);\n    setOrderDetails({ ...orderDetails, milk: event.target.value });\n  };\n\n  const handleSugar = (event) => {\n    setSugar(event.target.value);\n    setOrderDetails({ ...orderDetails, sugar: event.target.value });\n  };\n\n  const handlePickupTime = (event) => {\n    let time = new Date().getTime();\n    if (event.target.value === \"10\") {\n      time = time + 600000;\n    } else if (event.target.value === \"20\") {\n      time = time + 1200000;\n    } else if (event.target.value === \"30\") {\n      time = time + 1800000;\n    };\n    let date = new Date(time);\n    let hr = String(date.getHours());\n    let min = String(date.getMinutes());\n    if (hr.length < 2) {\n      hr = \"0\" + hr;\n    };\n    if (min.length < 2) {\n      min = \"0\" + min;\n    };\n    setOrderDetails({ ...orderDetails, pickup_time: `${hr}:${min}` });\n  };\n\n  return (\n    <>\n      <button><Link to=\"/map\">Cancel</Link></button>\n      <h3>{cafe.cafe_name}</h3>\n      <h4>{userCoffee.name}</h4>\n      <form>\n        <div>\n          <label>Size: </label>\n          <select value={size} onChange={handleSize}>\n            <option value=\"Regular\">Regular</option>\n            {userCoffee.name === \"Espresso\" ? (\n              <></>\n            ) : (\n              <>\n                <option value=\"Small\">Small -$0.50</option>\n                <option value=\"Large\">Large +$0.50</option>\n              </>\n            )}\n          </select>\n        </div>\n        {userCoffee.name === \"Espresso\" || userCoffee.name === \"Long Black\" ? (\n          <div></div>\n        ) : (\n          <div>\n            <label>Milk:</label>\n            <select value={milk} onChange={handleMilk}>\n              <option value=\"Regular Milk\">Full Cream</option>\n              <option value=\"Skim Milk\">Skim</option>\n              <option value=\"Soy Milk\">Soy</option>\n              <option value=\"Almond Milk\">Almond</option>\n            </select>\n          </div>\n        )}\n        <div>\n          <label>Sugar:</label>\n          <select value={sugar} onChange={handleSugar}>\n            <option value=\"0\">No Sugar</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n        </div>\n        <div>\n          <label>Pickup Time:</label>\n          <select onChange={handlePickupTime}>\n            <option value=\"0\">ASAP!</option>\n            <option value=\"10\">10 mins</option>\n            <option value=\"20\">20 mins</option>\n            <option value=\"30\">30 mins</option>\n          </select>\n        </div>\n      </form>\n      <StripeForm orderDetails={orderDetails} />\n    </>\n  );\n};\n\nexport default NewOrderForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/HomeView.jsx",["93","94","95","96","97"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardDeck,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport logo from \"../assets/Logo.png\";\nimport coffeeImg from \"../assets/coffee.svg\";\n\n\nconst HomeView = (props) => {\n  const { coffees, setCoffees, setUserCoffee,loggedInUser } = props;\n\n  useEffect(() => {\n    getAllCoffees();\n  }, []);\n\n  const getAllCoffees = () => {\n    axios\n      .get(\"http://localhost:5000/coffees/\", coffees)\n      .then((res) => setCoffees(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  function addUserCoffee(id, name) {\n    setUserCoffee({ id, name });\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#6E5E5E\", overflowX: \"hidden\" }}>\n\n      <div>\n        <Container fluid=\"true\">\n          <Row className=\"justify-content-center\" >\n            {coffees.map((coffee, index) => (\n              <CardDeck key={index} style={{ margin: \"30px\" }}>\n                <Card key={coffee._id}>\n                  <CardImg\n                    top\n                    width=\"100%\"\n                    src={coffeeImg}\n                    alt=\"Card image cap\"\n                  />\n                  <CardBody style={{ width: \"230px\" }}>\n                  <CardTitle tag=\"h5\">{coffee.name}</CardTitle>\n                  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                    {coffee.description}\n                  </CardSubtitle>\n                    {/* <p\n                      key={coffee._id}\n                      onClick={() => addUserCoffee(coffee.name, coffee._id)}\n                    > */}\n                      {/* {coffee.name} -{\" \"} */}\n                      <Link to=\"/map\" onClick={() => addUserCoffee(coffee._id, coffee.name)}>\n                        <Button color=\"primary\" size=\"sm\">\n                          SEARCH\n                        </Button>\n                      </Link>\n                    {/* </p> */}\n                  </CardBody>\n                </Card>\n              </CardDeck>\n            ))}\n          </Row>\n        </Container>\n      </div>\n\n      {/* <div>\n        <CardDeck style={{margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <CardDeck style={{ margin: \"10px\" }}>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This content is a little bit\n                longer.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This card has supporting text below as a natural lead-in to\n                additional content.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardImg top width=\"100%\" src={coffee} alt=\"Card image cap\" />\n            <CardBody>\n              <CardTitle tag=\"h5\">Card title</CardTitle>\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n                Card subtitle\n              </CardSubtitle>\n              <CardText>\n                This is a wider card with supporting text below as a natural\n                lead-in to additional content. This card has even longer content\n                than the first to show that equal height action.\n              </CardText>\n              <Button>Button</Button>\n            </CardBody>\n          </Card>\n        </CardDeck>\n      </div> */}\n    </div>\n  );\n};\n\nexport default HomeView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrdersView.jsx",["98","99","100","101","102","103","104"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport OrderTable from \"./OrderTable\";\nimport { Container, Row, Col, Input, Button, Form, Table } from 'reactstrap';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { BsDashSquareFill } from 'react-icons/bs';\n\nconst OrdersView = (props) => {\n  const { loggedInUser } = props;\n  const [ orders, setOrders ] = useState([]);\n  const [ pastOrders, setPastOrders ] = useState([]);\n  const [ showPastOrders, setShowPastOrders ] = useState(false);\n\n\n  useEffect(() => {\n    getOrders(\"active\");\n  }, []);\n\n  const getOrders = (type) => {\n    switch (type) {\n      case \"active\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders();\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders();\n        } else {\n          retrieveAllOrders();\n        };\n        break;\n      case \"past\":\n        if (loggedInUser.role === \"user\") {\n          retrieveUserOrders(\"past\");\n        } else if (loggedInUser.role === \"cafe\") {\n          retrieveCafeOrders(\"past\");\n        } else {\n          retrieveAllOrders(\"past\");\n        };\n        break;\n      default:\n        break;\n    };\n  };\n\n  const getPastOrders = (type) => {\n    if (!showPastOrders && type) {\n      getOrders(\"past\");\n      setShowPastOrders(true);\n    } else if (showPastOrders && !type) {\n      getOrders(\"past\");\n    } else {\n      setShowPastOrders(false);\n    };\n  };\n\n  const retrieveAllOrders = (pastOrders) => {\n    let url = \"http://localhost:5000/orders\";\n    if (pastOrders) {\n      url = \"http://localhost:5000/orders/past\";\n    };\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  const retrieveUserOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/users/${loggedInUser._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/users/${loggedInUser._id}/orders/past`;\n    };\n    const response = await axios.get(url);\n    const userOrders = response.data;\n    pastOrders ? setPastOrders(userOrders) : setOrders(userOrders);\n  };\n\n  const retrieveCafeOrders = async (pastOrders) => {\n    let url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders`;\n    if (pastOrders) {\n      url = `http://localhost:5000/cafes/${loggedInUser.cafe._id}/orders/past`;\n    };\n\n    axios\n      .get(url)\n      .then((res) => {\n        pastOrders ? setPastOrders(res.data) : setOrders(res.data);\n      })\n      .catch((err) => console.log(err))\n  };\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-center\">  \n          <h1>Current Orders</h1>\n          <OrderTable orders={orders} getOrders={getOrders} getPastOrders={getPastOrders} setOrders={setOrders} loggedInUser={loggedInUser} />\n        </Row>\n        <Row className=\"justify-content-center \">\n\n            <h1 className=\"justify-content-center Cafe-Header-Margin\">Past Orders</h1>\n              <div className=\"Cafe-Dashboard-Expand Cafe-Header-Margin\" >\n                <BsFillPlusSquareFill onClick={() => getPastOrders(true)} />\n          </div>\n        </Row>\n        <Row id=\"Past-Orders\">\n          {showPastOrders ? (\n              <div>\n                <OrderTable orders={pastOrders} />\n              </div>\n            ) : (<></>)}\n        </Row>\n       \n      </Container>\n    </>\n  );\n};\n\nexport default OrdersView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/PaymentCancelView.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/MapView.jsx",["105","106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport NewOrderForm from \"./NewOrderForm\";\nimport \"../App.css\";\n\nfunction MapView(props) {\n  const { userCoffee, setUserCoffee, userLocation, setCafe } = props;\n  const [cafesData, setCafesData] = useState([]);\n  // const [dropdownOpen, setOpen] = useState(false);\n  // const toggle = () => setOpen(!dropdownOpen);\n\n  useEffect(() => {\n    getCafeData();\n  }, []);\n\n  const getCafeData = async () => {\n    // const time = new Date();\n    const postBody = {\n      location: userLocation,\n      // time: (String(time.getHours()) + String(time.getMinutes())),\n      time: \"1000\", // uncomment line above to use actual time & comment this one out\n      coffee: userCoffee.id,\n    };\n\n    const response = await axios.post(\"http://localhost:5000/map/\", postBody);\n    const searchResults = await response.data;\n    setCafesData(searchResults);\n  };\n\n  function handleClick(cafe, coffee) {\n    cafe.menu.map((menuitem) => {\n      if (menuitem.coffee === coffee.id) {\n        setUserCoffee({ ...userCoffee, price: menuitem.price });\n      }\n    });\n    setCafe(cafe);\n  }\n\n  // const showPanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Hide-Order\");\n  //   orderElement.classList.add(\"Show-Order\");\n  // };\n\n  // const hidePanel = () => {\n  //   var orderElement = document.getElementById(\"orderPanel\");\n  //   orderElement.classList.remove(\"Show-Order\");\n  //   orderElement.classList.add(\"Hide-Order\");\n  // };\n\n  return (\n    <>\n      {/* <Container>\n          <div className=\"Hide-Order\" id=\"orderPanel\" >\n            <button onClick={hidePanel}>Close</button>\n            <NewOrderForm coffee={coffee} cafe={cafe}  />\n          </div>\n      </Container> */}\n\n      <MapContainer center={userLocation} zoom={17} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {cafesData.map((cafe) => (\n          <Marker\n            key={cafe._id}\n            position={[cafe.location[0], cafe.location[1]]}\n          >\n            <Popup key={cafe._id}>\n              <h3>{cafe.cafe_name}</h3>\n              <p>\n                Hrs: {cafe.operating_hours[0]} - {cafe.operating_hours[1]}\n              </p>\n              <p>{cafe.address}</p>\n              <p>{userCoffee.name}</p>\n              {cafe.menu.map(\n                (item) =>\n                  item.coffee === userCoffee.id ? (\n                    <Link\n                      to=\"/orders/new\"\n                      onClick={() => handleClick(cafe, userCoffee)}\n                    >\n                      ${item.price.toFixed(2)} - BUY NOW\n                    </Link>\n                  ) : (\n                    <></>\n                  )\n                // item.coffee === coffee.id ? <Link to=\"/orders/new\" onClick={() => showPanel}>${item.price.toFixed(2)} - BUY NOW</Link> : <></>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </>\n  );\n}\n\nexport default MapView;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/CafeMenuView.jsx",["109","110"],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/StripeForm.jsx",[],"/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCafeForm.js",["111","112","113"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nconst initialUserState = {\n  username: \"\",\n  password: \"\",\n  user_name: \"\",\n  role: \"user\",\n  phone: \"\"\n};\n\nconst NewCafeForm = (props) => {\n  const { setCafeData, cafeData, initialCafeState, isEditing, cafes, setCafes } = props;\n\n  const [userData, setUserData] = useState(initialUserState);\n\n  // on initial load\n  useEffect(() => {\n    if (isEditing) {\n      console.log(isEditing)\n      axios.get(`http://localhost:5000/users/${cafeData.owner}`).then((res) => {\n        setUserData(res.data);\n      });\n    }\n  }, []);\n\n  // every time isEditing changes\n  useEffect(() => {\n    if(!isEditing) {\n      setUserData(initialUserState)\n      setCafeData(initialCafeState)\n    }\n  }, [isEditing]);\n\n  const addCafe = (newCafe) => {\n    setCafes([...cafes, newCafe]);\n  };\n\n  const updateCafe = (newCafe) => {\n    setCafes(cafes.map((cafe) => (cafe._id == cafeData._id ? newCafe : cafe)));\n  };\n\n  const handleCafeInputChange = (e) => {\n    setCafeData({ ...cafeData, [e.target.name]: e.target.value });\n  };\n\n  const handleUserInputChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const updateExistingCafe = () => {\n    axios\n      .put(`http://localhost:5000/cafes/${cafeData._id}`, cafeData)\n      .then((res) => updateCafe(res.data))\n      .catch((error) => console.log(error));\n      props.history.push('/admin');  \n  };\n\n  const updateExistingUser = () => {\n    axios\n      .patch(`http://localhost:5000/users/${userData._id}`, userData)\n      .then((res) => console.log(res.data));\n  };\n\n  const saveNewUser = () => {\n    return axios.post(\"http://localhost:5000/users/register\", userData).then(res => {\n      const cafeId = res.data._id;\n      const newCafeData = {...cafeData, owner: cafeId};\n      addCafe(newCafeData);\n      return newCafeData\n    })\n  };\n\n  const saveNewCafe = (newCafeData) => {\n    return axios.post(\"http://localhost:5000/cafes\", newCafeData).then(() => {\n      setCafeData(initialCafeState);\n      setUserData(initialUserState);\n    })\n  };\n\n  const cancelEditing = () => {\n    setCafeData(initialCafeState);\n    setUserData(initialUserState);\n    props.history.push('/admin');\n  };\n\n  const handleFinalSubmit = (e) => {\n    e.preventDefault();\n    // console.log(userData);\n    // if (cafeData.cafe_name && cafeData.address) { // add validation that all fields must be entered\n    // console.log(cafeData);\n    if (isEditing) {\n      // Save updated cafe here\n      updateExistingUser();\n      updateExistingCafe();\n    } else {\n      saveNewUser().then(newCafeData => {\n        saveNewCafe(newCafeData).then(() => {\n          props.history.push('/admin');\n        });\n      })\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n          <h2>{isEditing ? \"Edit\" : \"Add New\"} Cafe</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleFinalSubmit}>\n            <FormGroup>\n              <Label for=\"cafe_name\">Cafe name:</Label>\n              <Input\n                name=\"cafe_name\"\n                value={cafeData.cafe_name}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"user_name\">Owner:</Label>\n              <Input\n                name=\"user_name\"\n                value={userData.user_name}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Email:</Label>\n              <Input\n                name=\"username\"\n                value={userData.username}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n              <Input\n                name=\"password\"\n                value={userData.password}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"role\">Role:</Label>\n              <Input\n                name=\"role\"\n                value={userData.role}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone:</Label>\n              <Input\n                name=\"phone\"\n                value={userData.phone}\n                onChange={handleUserInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"address\">Address:</Label>\n              <Input\n                name=\"address\"\n                value={cafeData.address}\n                onChange={handleCafeInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"opening\">Opening time:</Label>\n              <Input\n                name=\"operating_hours[0]\"\n                required\n                value={cafeData.operating_hours[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [e.target.value, cafeData.operating_hours[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"closing\">Closing time:</Label>\n              <Input\n                name=\"operating_hours[1]\"\n                required\n                value={cafeData.operating_hours[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"operating_hours\",\n                      value: [cafeData.operating_hours[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"latitude\">Latitude:</Label>\n              <Input\n                name=\"location[0]\"\n                required\n                value={cafeData.location[0] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [e.target.value, cafeData.location[1]],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"longitude\">Longitude:</Label>\n              <Input\n                name=\"location[1]\"\n                required\n                value={cafeData.location[1] || \"\"}\n                onChange={(e) =>\n                  handleCafeInputChange({\n                    target: {\n                      name: \"location\",\n                      value: [cafeData.location[0], e.target.value],\n                    },\n                  })\n                }\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCafeForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/NewCoffeeForm.js",["114","115","116","117"],"import React, { useState } from \"react\";\nimport { Col, Form, FormGroup, Input, Label, Row, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst NewCoffeeForm = (props) => {\n  const { updateCoffeeArray, coffees, setCoffees, coffeeData, setCoffeeData, initialCoffeeData, isEditing } = props;\n  const [error, setError] = useState('')\n\n  const handleInputChange = (e) => {\n    setCoffeeData({ ...coffeeData, [e.target.name]: e.target.value });\n  };\n  const addCoffee = (newCoffee) => {\n\n    setCoffees([...coffees, newCoffee]);\n  }\n  const saveNewCoffee = () => {\n    return axios.post(\"http://localhost:5000/coffees\", coffeeData).then(() => {\n      addCoffee(coffeeData)\n      setCoffeeData(initialCoffeeData)\n    })\n  };\n  const updateCoffee = (newCoffee) => {\n    setCoffees(coffees.map((coffee) => (coffee._id == coffeeData._id ? newCoffee : coffee)));\n  };\n\n  const updateExistingCoffee = () => {\n    axios\n      .put(`http://localhost:5000/coffees/${coffeeData._id}`, coffeeData)\n      .then((res) => updateCoffee(res.data))\n      .catch((error) => console.log(error));\n      props.history.push('/admin');  \n  };\n  const cancelEditing = () => {\n    setCoffeeData(initialCoffeeData);\n    props.history.push('/admin');\n  };\n  \n  // const validateForm = () => {\n  //   if(coffeeData.name.length < 3) {\n  //     setError('Coffee name must be longer than 2 characters')\n  //   }\n  // }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // validateForm();\n    if(isEditing) {\n      updateExistingCoffee();\n    } else {\n      saveNewCoffee().then(() => {\n        props.history.push('/admin');\n      })\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }} className=\"text-center\">\n        <h2>{isEditing ? \"Edit\" : \"Add New\"} Coffee</h2>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name:</Label>\n              <Input\n                name=\"name\"\n                placeholder=\"coffee name\"\n                value={coffeeData.name}\n                onChange={handleInputChange}\n                required\n              ></Input>\n              {/* {errors.name && errors.name.type === 'required' && (<p>Name is required</p>)} */}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description:</Label>\n              <Input\n                name=\"description\"\n                placeholder=\"description\"\n                value={coffeeData.description}\n                onChange={handleInputChange}\n                required\n              ></Input>\n            </FormGroup>\n            <Button>Submit</Button>\n            <Button onClick={cancelEditing}>Cancel</Button>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default NewCoffeeForm;\n","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/AdminDashboard/AdminLists.js",["118","119","120","121"],"import React, {useState}  from 'react'\nimport { Navbar, Container, Row, Col, Input, Button, NavItem, Nav, Table } from \"reactstrap\";\n\nconst AdminLists = (props) => {\n\n  const {cafes, deleteCafe, coffees, setCoffees, deleteCoffee, setCafeData, coffeeData, setCoffeeData } = props;\n  const [cafeSearchTerm, setCafeSearchTerm] = useState(\"\");\n  const [coffeeSearchTerm, setCoffeeSearchTerm] = useState(\"\");\n\n\n  const handleCafeSearchTermChange = (e) => {\n    setCafeSearchTerm(e.target.value);\n  };\n  const handleCoffeeSearchTermChange = (e) => {\n    setCoffeeSearchTerm(e.target.value);\n  };\n\n  const editCafe = (cafe) => {\n    setCafeData(cafe);\n    props.history.push('/admin/edit_cafe');\n  };\n  const editCoffee = (coffee) => {\n    console.log(coffee)\n    setCoffeeData(coffee);\n    console.log('nele',coffeeData)\n    props.history.push('/admin/edit_coffee');\n  };\n\n  return (\n    <Container>\n          <Row className=\"justify-content-center margin-add-top\">\n            <h1>Admin Dashboard</h1>\n          </Row>\n          <Row>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Cafes</h3>\n              <Input placeholder=\"Search\" value={cafeSearchTerm} onChange={handleCafeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cafes\n                    .filter((cafe) =>\n                      cafe.cafe_name\n                        .trim()\n                        .toLowerCase()\n                        .includes(cafeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((cafe) => (\n                      <tr key={cafe._id}>\n                        <td>{cafe.cafe_name}</td>\n                        <td>\n                          <Button onClick={() => editCafe(cafe)}>Edit</Button>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCafe(cafe._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n            <Col sm={{ size: 6 }} className=\"margin-add-top\">\n              <h3 className=\"text-center\">All Coffees</h3>\n              <Input placeholder=\"Search\" value={coffeeSearchTerm} onChange={handleCoffeeSearchTermChange}\n              />\n              <Table className=\"margin-add-top\">\n                <thead>\n                  <tr>\n                    <th>Cafe Name</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {coffees\n                    .filter((coffee) =>\n                      coffee.name\n                        .trim()\n                        .toLowerCase()\n                        .includes(coffeeSearchTerm.trim().toLowerCase())\n                    )\n                    .map((coffee) => (\n                      <tr key={coffee._id}>\n                        <td>{coffee.name}</td>\n                        <td>\n                          <Button onClick={() => editCoffee(coffee)}>Edit</Button>\n                        </td>\n                        <td>\n                          <Button onClick={() => deleteCoffee(coffee._id)}>Delete</Button>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n  )\n}\n\nexport default AdminLists","/Users/sebastianbrooks/projects/t3a2-b/v1/coffiends-front-end/src/components/OrderTable.jsx",["122","123"],"import { Link } from \"react-router-dom\";\nimport { Row,Table, Container, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\n\nconst OrderTable = (props) => {\n  const { orders, getOrders, getPastOrders, loggedInUser, setOrders } = props;\n\n  const completeOrder = (id) => {\n    axios\n      .put(`http://localhost:5000/orders/${id}`)\n      .then((res) => {\n        console.log(res.data);\n        getOrders(\"active\");\n        getPastOrders(false);\n      })\n  };\n\n  return (\n    <>\n   <Container> \n    <Row className=\"justify-content-center margin-add-top\">\n    </Row>\n        <Row>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Cafe</th>\n                  <th>User</th>\n                  <th>Order Date</th>\n                  <th>Active?</th>\n                  <th>Coffee</th>\n                  <th>Size</th>\n                  <th>Milk</th>\n                  <th>Sugar</th>\n                  <th>Pickup Time</th>\n                  <th>Total</th>\n                  <th>COMPLETE</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders ? (orders.map((order) => (\n                  <tr key={order._id}>\n                    <th>{order.cafe.cafe_name}</th>\n                    <td>{order.user.user_name}</td>\n                    <td>{new Date(order.order_date).toLocaleString(\"en-Au\", {timeZone: \"Australia/Brisbane\"})}</td>\n                    <td>{String(order.active)}</td>\n                    <td>{order.coffee}</td>\n                    <td>{order.size}</td>\n                    <td>{order.milk}</td>\n                    <td>{order.sugar}</td>\n                    <td>{order.pickup_time}</td>\n                    <td>${order.total.toFixed(2)}</td>\n                    {(order.active && loggedInUser.role === \"cafe\") ? (\n                      <td>\n                         <Button onClick={() => completeOrder(order._id)}>Complete</Button>\n                      </td>\n                    ) : (<></>)\n                    }\n                  </tr>\n                ))) : <></>}\n              </tbody>\n            </Table>\n        </Row>\n    </Container>\n    </>\n  );\n};\n\nexport default OrderTable;",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":20,"column":25,"nodeType":"130","messageId":"131","endLine":20,"endColumn":40},{"ruleId":"132","severity":1,"message":"133","line":38,"column":22,"nodeType":"134","messageId":"135","endLine":38,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":12,"column":13,"nodeType":"138","messageId":"139","endLine":43,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":33,"column":6,"nodeType":"142","endLine":33,"endColumn":8,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":38,"column":6,"nodeType":"142","endLine":38,"endColumn":8,"suggestions":"145"},{"ruleId":"128","severity":1,"message":"146","line":7,"column":3,"nodeType":"130","messageId":"131","endLine":7,"endColumn":6},{"ruleId":"128","severity":1,"message":"147","line":12,"column":3,"nodeType":"130","messageId":"131","endLine":12,"endColumn":11},{"ruleId":"128","severity":1,"message":"148","line":17,"column":8,"nodeType":"130","messageId":"131","endLine":17,"endColumn":12},{"ruleId":"128","severity":1,"message":"149","line":22,"column":46,"nodeType":"130","messageId":"131","endLine":22,"endColumn":58},{"ruleId":"140","severity":1,"message":"150","line":26,"column":6,"nodeType":"142","endLine":26,"endColumn":8,"suggestions":"151"},{"ruleId":"128","severity":1,"message":"146","line":4,"column":26,"nodeType":"130","messageId":"131","endLine":4,"endColumn":29},{"ruleId":"128","severity":1,"message":"152","line":4,"column":31,"nodeType":"130","messageId":"131","endLine":4,"endColumn":36},{"ruleId":"128","severity":1,"message":"153","line":4,"column":38,"nodeType":"130","messageId":"131","endLine":4,"endColumn":44},{"ruleId":"128","severity":1,"message":"154","line":4,"column":46,"nodeType":"130","messageId":"131","endLine":4,"endColumn":50},{"ruleId":"128","severity":1,"message":"155","line":4,"column":52,"nodeType":"130","messageId":"131","endLine":4,"endColumn":57},{"ruleId":"128","severity":1,"message":"156","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":26},{"ruleId":"140","severity":1,"message":"157","line":17,"column":6,"nodeType":"142","endLine":17,"endColumn":8,"suggestions":"158"},{"ruleId":"128","severity":1,"message":"159","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":19},{"ruleId":"128","severity":1,"message":"160","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":20},{"ruleId":"140","severity":1,"message":"161","line":17,"column":6,"nodeType":"142","endLine":17,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":34,"column":30,"nodeType":"165","messageId":"166","endLine":34,"endColumn":32},{"ruleId":"140","severity":1,"message":"167","line":14,"column":6,"nodeType":"142","endLine":14,"endColumn":8,"suggestions":"168"},{"ruleId":"128","severity":1,"message":"169","line":55,"column":11,"nodeType":"130","messageId":"131","endLine":55,"endColumn":23},{"ruleId":"140","severity":1,"message":"170","line":26,"column":6,"nodeType":"142","endLine":26,"endColumn":8,"suggestions":"171"},{"ruleId":"140","severity":1,"message":"172","line":34,"column":6,"nodeType":"142","endLine":34,"endColumn":17,"suggestions":"173"},{"ruleId":"132","severity":1,"message":"133","line":41,"column":44,"nodeType":"134","messageId":"135","endLine":41,"endColumn":46},{"ruleId":"128","severity":1,"message":"174","line":7,"column":11,"nodeType":"130","messageId":"131","endLine":7,"endColumn":28},{"ruleId":"128","severity":1,"message":"175","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":15},{"ruleId":"128","severity":1,"message":"176","line":8,"column":17,"nodeType":"130","messageId":"131","endLine":8,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":24,"column":52,"nodeType":"134","messageId":"135","endLine":24,"endColumn":54},{"ruleId":"128","severity":1,"message":"177","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"178","line":2,"column":54,"nodeType":"130","messageId":"131","endLine":2,"endColumn":61},{"ruleId":"128","severity":1,"message":"179","line":2,"column":63,"nodeType":"130","messageId":"131","endLine":2,"endColumn":66},{"ruleId":"128","severity":1,"message":"180","line":6,"column":38,"nodeType":"130","messageId":"131","endLine":6,"endColumn":48},{"ruleId":"128","severity":1,"message":"181","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":14},{"ruleId":"128","severity":1,"message":"182","line":7,"column":59,"nodeType":"130","messageId":"131","endLine":7,"endColumn":68},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'setUserLocation' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCafes' and 'getAllCoffees'. Either include them or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has missing dependencies: 'orderDetails' and 'userCoffee.name'. Either include them or remove the dependency array. You can also do a functional update 'setOrderDetails(o => ...)' if you only need 'orderDetails' in the 'setOrderDetails' call.",["186"],"'Col' is defined but never used.","'CardText' is defined but never used.","'logo' is defined but never used.","'loggedInUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllCoffees'. Either include it or remove the dependency array.",["187"],"'Input' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'BsDashSquareFill' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["188"],"'Container' is defined but never used.","'NewOrderForm' is defined but never used.","React Hook useEffect has a missing dependency: 'getCafeData'. Either include it or remove the dependency array.",["189"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getMenuData'. Either include it or remove the dependency array.",["190"],"'newMenuThing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cafeData.owner' and 'isEditing'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'initialCafeState' and 'setCafeData'. Either include them or remove the dependency array.",["192"],"'updateCoffeeArray' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Navbar' is defined but never used.","'NavItem' is defined but never used.","'Nav' is defined but never used.","'setCoffees' is assigned a value but never used.","'Link' is defined but never used.","'setOrders' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [getAllCafes, getAllCoffees]",{"range":"209","text":"210"},"Update the dependencies array to be: [orderDetails, userCoffee.name]",{"range":"211","text":"212"},"Update the dependencies array to be: [getAllCoffees]",{"range":"213","text":"214"},"Update the dependencies array to be: [getOrders]",{"range":"215","text":"216"},"Update the dependencies array to be: [getCafeData]",{"range":"217","text":"218"},"Update the dependencies array to be: [getMenuData]",{"range":"219","text":"220"},"Update the dependencies array to be: [cafeData.owner, isEditing]",{"range":"221","text":"222"},"Update the dependencies array to be: [initialCafeState, isEditing, setCafeData]",{"range":"223","text":"224"},[906,908],"[getAllCafes, getAllCoffees]",[1153,1155],"[orderDetails, userCoffee.name]",[494,496],"[getAllCoffees]",[579,581],"[getOrders]",[592,594],"[getCafeData]",[467,469],"[getMenuData]",[676,678],"[cafeData.owner, isEditing]",[840,851],"[initialCafeState, isEditing, setCafeData]"]
